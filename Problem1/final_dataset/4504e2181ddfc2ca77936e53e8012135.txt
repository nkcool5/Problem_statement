/lib64/ld-linux-x86-64.so.2
B!c{
b@	(!&
!`#*F
 b"&
"@D@
@ !Bp
0)AA
H	D@4
		A!
t`PN
@@A9
knJ8 q
Rs}[
5Btu
iz/j
^IKVp\
CPu*
hE`3B
T.Yd$
HHrIs)
^=MX)
}u[=
d\7%T
5<$?
$'gJ
??=K
LfFc[
6-2P
|>-Sp7|
z	P("
!O <HY\
0 DT
R{Jk
?-b3E
bdezJ
NM5:
6&;Q
dw!i
<stJ
g<_z
,WV3*
sn8A
9pm!
yF`f
^v=r
XT6=g
ME+Ui
888}?7\
yJ3W^`M{
Fs%j
qw*X
!`Ks
o#AogIC
Z0,}9
<D;T
J?.t
=QMz
libpthread.so.0
_ITM_deregisterTMCloneTable
_Jv_RegisterClasses
_ITM_registerTMCloneTable
pthread_rwlock_trywrlock
pthread_self
pthread_rwlock_wrlock
recvfrom
pthread_sigmask
pthread_mutex_init
pthread_setcancelstate
pthread_rwlock_unlock
fsync
__errno_location
pthread_mutex_lock
pthread_mutexattr_init
pthread_setspecific
pthread_mutexattr_setpshared
pthread_rwlockattr_init
lseek64
fcntl
pthread_cancel
pthread_rwlock_init
pthread_create
pthread_join
sigaction
pthread_getspecific
pthread_mutexattr_setprotocol
pthread_mutex_consistent_np
msync
pthread_attr_init
pthread_mutexattr_destroy
pthread_key_create
pthread_rwlock_rdlock
pthread_attr_setstacksize
sendto
pthread_rwlockattr_destroy
pthread_rwlockattr_setpshared
pthread_mutex_unlock
pthread_attr_setdetachstate
sendmsg
recvmsg
pthread_setcanceltype
waitpid
pthread_mutexattr_setrobust_np
pthread_mutex_trylock
libm.so.6
__gmon_start__
libdl.so.2
dlclose
dlsym
dlopen
dlerror
libz.so.1
inflateInit2_
inflateSetDictionary
deflateInit2_
compressBound
inflate
inflateInit_
deflateSetDictionary
inflateEnd
deflateEnd
libpcre.so.3
pcre_study
pcre_free
pcre_free_study
pcre_exec
pcre_config
pcre_compile
pcre_fullinfo
libcap.so.2
cap_free
cap_set_proc
cap_clear
cap_init
cap_set_flag
libuuid.so.1
uuid_unparse
uuid_generate
libyaml-0.so.2
yaml_parser_scan
yaml_parser_set_input_string
yaml_parser_initialize
libjansson.so.4
json_object_iter_next
json_object_iter_value
json_string_value
json_object_iter
json_integer_value
json_object_get
json_array_size
json_array_get
json_object_iter_key
json_loads
libssl.so.1.0.0
SSL_CTX_sess_set_remove_cb
d2i_SSL_SESSION
SSL_get_servername
SSL_write
SSL_load_client_CA_file
SSL_CTX_set_info_callback
SSL_CTX_use_certificate_chain_file
SSL_set_SSL_CTX
SSL_CTX_new
SSL_set_fd
SSL_CTX_sess_set_get_cb
SSL_set_verify
SSL_CTX_callback_ctrl
SSL_read
SSL_CTX_get_verify_callback
SSL_CTX_set_session_id_context
SSL_get_error
SSL_load_error_strings
SSL_CTX_get_verify_mode
SSL_CTX_set_client_CA_list
SSL_library_init
SSL_CTX_sess_set_new_cb
SSL_set_accept_state
SSL_CTX_free
SSL_CTX_ctrl
SSL_CTX_set_timeout
SSL_CTX_use_PrivateKey_file
SSL_CTX_set_cipher_list
i2d_SSL_SESSION
SSL_CTX_get_verify_depth
SSLv23_server_method
SSL_CTX_set_verify
SSL_new
SSL_set_verify_depth
SSL_CTX_load_verify_locations
SSL_CTX_set_verify_depth
SSL_free
SSL_ctrl
libcrypto.so.1.0.0
EVP_PKEY_free
EVP_SignFinal
PEM_read_PrivateKey
EVP_get_digestbyname
MD5_Final
EVP_VerifyFinal
EVP_PKEY_size
X509_STORE_CTX_get_error_depth
EVP_CIPHER_iv_length
EVP_MD_CTX_create
PEM_read_bio_DHparams
OPENSSL_config
RAND_bytes
EVP_CIPHER_key_length
EVP_get_cipherbyname
X509_STORE_CTX_get_error
OPENSSL_add_all_algorithms_noconf
EVP_DecryptFinal_ex
BIO_free
ERR_print_errors_fp
EC_KEY_new_by_curve_name
X509_get_subject_name
DH_free
X509_verify_cert_error_string
EVP_DecryptInit_ex
EVP_DigestUpdate
SHA1_Update
MD5_Init
EVP_EncryptFinal_ex
EVP_DigestInit_ex
ERR_clear_error
EVP_CIPHER_CTX_init
SHA1_Init
X509_NAME_oneline
PEM_read_PUBKEY
BIO_new_file
X509_STORE_CTX_get_current_cert
EVP_MD_CTX_destroy
EVP_DecryptUpdate
EVP_EncryptInit_ex
MD5_Update
EC_KEY_free
EVP_EncryptUpdate
SHA1_Final
libxml2.so.2
xmlCheckVersion
xmlCleanupParser
xmlFreeDoc
xmlGetProp
xmlDocGetRootElement
xmlReadMemory
libc.so.6
epoll_create
setuid
chroot
globfree64
strcpy
sigsuspend
srand
optind
timerfd_create
strrchr
__strdup
perror
in6addr_any
ftruncate64
getpwuid
mmap64
semctl
closedir
initgroups
inet_ntoa
glob64
getgrgid
epoll_wait
ftell
__read_chk
inet_ntop
strncpy
sigprocmask
futimes
sigfillset
__stack_chk_fail
unlink
listen
select
mkdir
abort
strtoll
socketpair
memchr
getpid
inet_pton
strftime
rewind
gmtime
strtol
ctime_r
fgets
sched_setaffinity
getpwnam
strlen
pivot_root
prctl
sigemptyset
memset
strstr
rmdir
tcsetattr
bind
fseek
chdir
memcmp
getpagesize
getsockopt
setgroups
dup2
unsetenv
__fxstat64
poll
__fprintf_chk
sigaddset
ctime
getgrnam
sethostname
putenv
fchown
ftok
stdout
versionsort64
inet_addr
memcpy
fclose
__vsnprintf_chk
strtoul
setsockopt
accept4
strcasecmp
realpath
timegm
__strncpy_chk
getgid
__lxstat64
opendir
__xstat64
clone
__ctype_b_loc
getenv
sscanf
optarg
stderr
sigdelset
ioctl
inotify_init
timerfd_settime
setrlimit64
munmap
gethostbyname
__snprintf_chk
getgroups
getuid
readlink
fscanf
getopt_long
__strncat_chk
execvp
freeifaddrs
strncasecmp
getifaddrs
if_nametoindex
strncat
sendfile64
strtoull
__realpath_chk
gethostname
usleep
getcwd
fwrite
fread
gettimeofday
rename
epoll_ctl
madvise
mkstemp64
__memcpy_chk
setlinebuf
mlockall
localtime
strchr
scandir64
__poll_chk
fdopen
readdir64
inotify_add_watch
statfs64
tcgetattr
__ctype_toupper_loc
__ctype_tolower_loc
umount2
setsid
getrlimit64
memmove
uname
backtrace_symbols
fopen64
access
setgid
mkfifo
strcmp
strerror
__libc_start_main
semop
ferror
setpriority
sysconf
semget
__environ
__cxa_atexit
_edata
__bss_start
_end
uwsgi_concat
uwsgi_register_route_var
uwsgi_daemon_check_pid_reload
uwsgi_master_check_emperor_death
uwsgi_opt_set_str
uwsgi_exceptions_catch
uwsgi_master_fifo_manage
uwsgi_nuclear_blast
uwsgi_ssl_rand
uwsgi_register_clock
uwsgi_attach_fd
emperor_respawn
uwsgi_chain_reload
get_mule_by_id
uwsgi_response_write_body_do
uwsgi_calloc
uwsgi_sharedarea_init_ptr
uwsgi_register_metric_collector
signal_pidfile
uwsgi_string_del_list
uwsgi_wlock_fast
uwsgi_sharedarea_inc8
uwsgi_stats_keylong
uwsgi_opt_static_map
uwsgi_notify_msg
uwsgi_add_sockets_to_queue
uwsgi_master_commit_status
build_options
uwsgi_opt_fileserve_mode
init_magic_table
uwsgi_opt_add_daemon2
uwsgi_ssl_session_new_cb
uwsgi_redirect_to_slash
grace_them_all
farm_has_msg
uwsgi_opt_add_regexp_dyn_dict
uwsgi_set_clock
uwsgi_build_unshare
uwsgi_logit_simple
uwsgi_flush_logs
uwsgi_apply_config_pass
uwsgi_sharedarea_inc32
uwsgi_rwunlock_fast
uwsgi_metric_set_min
uwsgi_ssl_info_cb
uwsgi_sha1
uwsgi_contains_n
uwsgi_rwlock_fast_init
async_loop
uwsgi_zlib_decompress
uwsgi_sharedarea_dec32
uwsgi_add_reload_fds
uwsgi_get_shared_socket_fd_by_num
create_signal_pipe
uwsgi_cache_get2
uwsgi_proto_base_add_header
uwsgi_opt_sni
uwsgi_register_configurator
async_schedule_to_req
uwsgi_heartbeat
emperor_throttle_level
uwsgi_proto_base_close
add_exported_option_do
uwsgi_legion_add
uwsgi_uuid
uwsgi_lock_fast_check
uwsgi_opt_add_socket_no_defer
set_mule_harakiri
uwsgi_setup_log_master
uwsgi_opt_flock_wait
uwsgi_cron_task_needs_execution
uwsgi_offload_engine_by_name
uwsgi_register_embedded_routers
uwsgi_str_contains
uwsgi_split3
uwsgi_websockets_simple_send
uwsgi_socket_is_already_bound
uwsgi_wait_for_mountpoint
async_add_timeout
uwsgi_long2str2n
uwsgi_master_check_death
uwsgi_logic_opt_if_opt
uwsgi_binary_path
uwsgi_opt_add_string_list
uwsgi_opt_set_unshare
uwsgi_chomp2
set_spooler_harakiri
uwsgi_master_manage_events
uwsgi_opt_set_64bit
uwsgi_start_legions
uwsgi_alarm_log_check
event_queue_init
uwsgi_hash_algo_register_all
uwsgi_cache_sync_from_nodes
uwsgi_websocket_recv_nb
uwsgi_sharedarea_inc16
uwsgi_buffer_num64
uwsgi_mode_t
uwsgi_setup_mules_and_farms
uwsgi_get_subscribe_node
async_add_fd_read
uwsgi_destroy_processes
uwsgi_dyn_dict_new
uwsgi_add_expires
uwsgi_init_rb_timer
uwsgi_reload_workers
uwsgi_valid_fd
uwsgi_stats_list_open
uwsgi_concatn
bind_to_unix
uwsgi_proto_scgi_setup
uwsgi_manage_zerg
uwsgi_unix_signal
uwsgi_emperor_blacklist_remove
uwsgi_plugin_modifier1
uwsgi_daemon_check_pid_death
uwsgi_remove_subscribe_node
uwsgi_stats_apply_tabs
uwsgi_spooler_read_header
uwsgi_get_logger
uwsgi_append_req_logger
uwsgi_emperor_scanner_event
uwsgi_route_signal
event_queue_fd_write_to_readwrite
uwsgi_regexp_apply_ovec
uwsgi_buffer_ensure
uwsgi_dump_worker
magic_sub
uwsgi_cheap_string
uwsgi_cache_create_all
uwsgi_cache_prepare_magic_set
uwsgi_gzip_fix
simple_loop_run_int
uwsgi_apply_final_transformations
uwsgi_ready_fd
uwsgi_stats_pusher_add
uwsgi_response_add_last_modified
uwsgi_sharedarea_init
uwsgi_proto_fastcgi_setup
_IO_stdin_used
uwsgi_is_full_http
gracefully_kill
uwsgi_master_manage_snmp
uwsgi_register_loop
uwsgi_logic_opt_if_file
uwsgi_opt_gid
uwsgi_cache_prepare_magic_del
uwsgi_sharedarea_wlock
escape_shell_arg
emperor_warming_up
uwsgi_opt_scd
uwsgi_proto_http_setup
uwsgi_fork
uwsgi_imperial_monitor_directory_init
uwsgi_master_fifo_prepare
uwsgi_base64_decode
uwsgi_opt_safe_fd
uwsgi_strnicmp
uwsgi_buffer_u32le
uwsgi_master_check_daemons_death
uwsgi_new_gateway_socket
uwsgi_sharedarea_get_by_id
uwsgi_detach_daemons
uwsgi_uuid_cmp
socket_to_in_addr6
uwsgi_concat3n
uwsgi_to_http_dumb
daemonize
uwsgi_master_check_cron_death
uwsgi_add_file_monitor
uwsgi_manage_exception
uwsgi_response_add_content_length
uwsgi_offload_request_memory_do
uwsgi_response_add_header_force
uwsgi_master_check_idle
event_queue_interesting_fd
uwsgi_opt_check_static
uwsgi_spooler_run
uwsgi_proto_https_setup
uwsgi_legion_action_get
uwsgi_register_log_encoder
uwsgi_tcp_nodelay
uwsgi_stats_pusher_loop
uwsgi_cache_magic_del
uwsgi_worker_run
uwsgi_opt_add_route
uwsgi_simple_parse_vars
uwsgi_opt_config_py
uwsgi_alarm_init_mule
uwsgi_signal_registered
on_royal_death
uwsgi_get_spooler_by_name
uwsgi_daemonize2
imperial_monitor_get_by_scheme
event_queue_ack_file_monitor
uwsgi_build_plugin
uwsgi_get_mime_type
uwsgi_time_bomb
uwsgi_setup_workers
uwsgi_master_check_mountpoints
uwsgi_elf_section
uwsgi_imperial_monitor_glob
uwsgi_is_file2
uwsgi_logic_opt_for
uwsgi_buffer_new
uwsgi_stats_object_close
uwsgi_register_alarm
uwsgi_logic_opt_for_times
farm_has_signaled
uwsgi_setup_shared_sockets
uwsgi_master_check_spoolers_death
sanitize_args
uwsgi_opt_add_legion_cron
uwsgi_req_append_path_info_with_index
uwsgi_proto_fastcgi_close
uwsgi_envdir
uwsgi_opt_add_lazy_socket
uwsgi_send_http_stats
uwsgi_opt_set_env
bind_to_unix_dgram
uwsgi_master_check_mules_death
uwsgi_get_var
uwsgi_manage_placeholder
uwsgi_go_cheap
uwsgi_proto_raw_setup
create_msg_pipe
uwsgi_is_bad_connection
uwsgi_opt_set_emperor_cap
find_wsgi_req_proto_by_fd
uwsgi_is_file
async_schedule_to_req_green
uwsgi_ssl_session_get_cb
emperor_send_stats
djb33x_hash
uwsgi_logic_opt_if_env
uwsgi_opt_legion_hook
uwsgi_opt_dot_h
uwsgi_split4
uwsgi_daemons_spawn_all
uwsgi_add_expires_type
uwsgi_plugins_atexit
uwsgi_proto_hooks_setup
emperor_throttle
ini_rstrip
uwsgi_proto_fastcgi_write
uwsgi_register_route_condition
uwsgi_ipcsem_clear
uwsgi_setns
uwsgi_opt_set_rawint
uwsgi_emperor_simple_do
uwsgi_xml_config
uwsgi_ssl_verify_callback
uwsgi_logic_opt_if_not_exists
uwsgi_metric_dec
uwsgi_tmpfd
uwsgi_buffer_append_json
uwsgi_legion_announce
uwsgi_buffer_u32be
uwsgi_command_signal
uwsgi_alarms_init
uwsgi_metrics_start_collector
uwsgi_logit_lf
uwsgi_autoload_plugins_by_name
uwsgi_queue_push
uwsgi_unlock_fast
get_farm_by_name
uwsgi_register_rpc
uwsgi_setup_systemd
uwsgi_alarm_trigger_uai
uwsgi_commandline_config
uwsgi_lock_fast
uwsgi_cache_setup_nodes
uwsgi_emperor_blacklist_add
wsgi_req_simple_accept
uwsgi_master_check_spoolers_deadline
uwsgi_set_sockets_protocols
uwsgi_add_socket_from_fd
uwsgi_simple_write
uwsgi_buffer_u8
uwsgi_mule_run
uwsgi_mule_farm_new
uwsgi_opt_add_spooler
uwsgi_mount_flag
uwsgi_alarm_init_cmd
uwsgi_setup_thread_req
uwsgi_websocket_handshake
uwsgi_min_rb_timer
uwsgi_add_logchunk
uwsgi_master_cleanup_hooks
uwsgi_buffer_append_keyval32
uwsgi_routing_dump
uwsgi_setup_snmp
uwsgi_simple_wait_read_hook
uwsgi_websocket_send
uwsgi_proto_fastcgi_sendfile
is_a_number
uwsgi_rlock_fast
uwsgi_opt_set_gid
event_queue_interesting_fd_is_write
emperor_scanners
emperor_get
uwsgi_opt_load_config
uwsgi_mount_hook
uwsgi_setup_post_buffering
proto_base_add_uwsgi_header
uwsgi_append_static_path
uwsgi_opt_add_string_list_custom
uwsgi_cache_prepare_magic_exists
uwsgi_opt_set_null
emperor_add
uwsgi_sha1_2n
uwsgi_md5
uwsgi_cache_get4
wait_for_threads
uwsgi_emperor_vassal_start
destroy_spool
uwsgi_metric_add_child
emperor_del
linux_namespace_jail
uwsgi_opt_add_daemon
uwsgi_metric_getn
uwsgi_request_body_seek
uwsgi_signal_wait
uwsgi_stats_dump_vars
uwsgi_response_sendfile_do_can_close
imperial_monitor_get_by_id
async_reset_request
uwsgi_concat3
uwsgi_proto_base_read_body
uwsgi_master_check_gateways_death
uwsgi_opt_add_regexp_list
uwsgi_http_date
uwsgi_add_timer
uwsgi_get_shared_socket_num
uwsgi_sharedarea_unlock
uwsgi_str_num
uwsgi_opt_add_ssl_socket
uwsgi_hash_algo_get
uwsgi_buffer_f32be
uwsgi_opt_connect_and_read
uwsgi_alarm_func_mule
uwsgi_sharedarea_write16
uwsgi_rwlock_ipcsem_init
uwsgi_stats_list_close
uwsgi_opt_flock
uwsgi_curse_mule
uwsgi_stats_comma
uwsgi_cache_fix
uwsgi_string_get_list
uwsgi_get_header
uwsgi_500
uwsgi_metric_append
uwsgi_list_has_num
event_queue_fd_read_to_readwrite
uwsgi_proto_base_cgi_prepare_headers
uwsgi_response_add_content_range
uwsgi_ssl_del_sni_item
uwsgi_sharedarea_inc64
uwsgi_master_manage_emperor_proxy
uwsgi_exit
uwsgi_segfault
event_queue_wait_multi
uwsgi_exception_handler_object
uwsgi_proto_base_prepare_headers
uwsgi_dot_h
uwsgi_opt_add_socket
uwsgi_log_reopen
warn_pipe
uwsgi_socket_nb
uwsgi_logvar_get
uwsgi_rsa_sign
unconfigured_plugin
uwsgi_curse
uwsgi_close_all_fds
uwsgi_be16
uwsgi_cache_set2
uwsgi_append_logger
uwsgi_cache_magic_get
uwsgi_parse_array
uwsgi_proto_base_writev
ini_get_key
uwsgi_brutally_reload_workers
uwsgi_upload_progress_create
uwsgi_logfile_write
timed_connect
uwsgi_as_root
uwsgi_systemd_notify_ready
uwsgi_pass_cred
uwsgi_opt_load_xml
uwsgi_add_alarm_fd
uwsgi_get_last_char
uwsgi_write_nb
uwsgi_signal_send
uwsgi_send_stats
uwsgi_split_quoted
uwsgi_wlock_ipcsem
uwsgi_init_worker_mount_apps
uwsgi_sharedarea_new_id
uwsgi_systemd_init
is_unix
uwsgi_proto_puwsgi_accept
event_queue_fd_readwrite_to_read
get_memusage
uwsgi_waitfd_event
uwsgi_concat2n
uwsgi_opt_load_json
event_queue_write
uwsgi_sig_pause
uwsgi_upload_progress_destroy
uwsgi_buffer_send
uwsgi_legion_get_node
uwsgi_check_pidfile
uwsgi_legion_checksum
uwsgi_deadlock_check
uwsgi_logic_opt_if_not_reload
uwsgi_cache_rwunlock
uwsgi_buffer_write_simple
uwsgi_opt_add_mules
uwsgi_logic_opt_if_not_plugin
uwsgi_alarm_run
uwsgi_master_manage_udp
uwsgi_ssl_add_sni_item
generate_socket_name
uwsgi_get_optname_by_index
uwsgi_setup_metrics
uwsgi_cheaper_increase
uwsgi_recv_cred2
uwsgi_kvlist_parse
uwsgi_check_emperor
uwsgi_buffer_u64le
event_queue_alloc
uwsgi_emperor_blacklist_check
uwsgi_proto_fastcgi_nph_setup
uwsgi_cache_item_key
simple_loop_run
uwsgi_close_all_sockets
uwsgi_count_options
uwsgi_bind_sockets
uwsgi_set_cpu_affinity
uwsgi_metric_find_by_oid
uwsgi_logvar_add
uwsgi_opt_binary_append_data
uwsgi_umount
uwsgi_metric_find_by_name
uwsgi_cache_get3
uwsgi_parse_vars
uwsgi_setup_inherited_sockets
uwsgi_proto_base_sendfile
uwsgi_opt_noop
uwsgi_opt_exit
uwsgi_is_dir
uwsgi_getsockname
uwsgi_stats_keyval_comma
uwsgi_logic_opt_if_not_dir
uwsgi_apply_routes_do
uwsgi_cache_start_sweepers
uwsgi_mule_handler
uwsgi_opt_true
uwsgi_rpc
uwsgi_opt_load_dl
uwsgi_worker_exceptions
uwsgi_concat4
uwsgi_legion_register_hook
uwsgi_daemons_smart_check
uwsgi_buffer_from_file
uwsgi_subscription_sign_check
uwsgi_del_rb_timer
uwsgi_notify_socket_manage
uwsgi_add_app
uwsgi_simple_sendfile
uwsgi_metric_get
event_queue_add_file_monitor
uwsgi_is_link
uwsgi_static_want_gzip
uwsgi_register_exception_handler
uwsgi_regexp_custom_new_list
uwsgi_opt_set_16bit
uwsgi_opt_add_farm
uwsgi_thread_new_with_data
uwsgi_legion_register
uwsgi_opt_envdir
uwsgi_set_cgroup
uwsgi_metrics_collectors_setup
uwsgi_refork_master
uwsgi_log_encoder_by_name
uwsgi_metric_set
uwsgi_logic_opt_if_exists
uwsgi_backtrace
uwsgi_del_sockets_from_queue
socket_to_in_addr
uwsgi_buffer_map
uwsgi_regexp_match_pattern
uwsgi_legion_register_node
uwsgi_disconnect
uwsgi_stats_symbol
uwsgi_cache_magic_exists
uwsgi_sharedarea_write8
end_me
uwsgi_logic_opt_if_not_hostname_match
uwsgi_sendfile_do
uwsgi_response_prepare_headers_int
uwsgi_yaml_config
emperor_get_by_fd
uwsgi_buffer_u64be
uwsgi_add_safe_fd
uwsgi_get_logger_from_id
uwsgi_strncmp
uwsgi_add_expires_path_info
uwsgi_master_check_chain
uwsgi_fallback_config
uwsgi_register_stats_pusher
uwsgi_mule_get_msg
mem_collector
uwsgi_file_serve
uwsgi_buffer_insert_chunked
uwsgi_opt_add_regexp_custom_list
uwsgi_metric_mul
uwsgi_opt_unset_env
uwsgi_setup_log_encoders
uwsgi_offload_request_pipe_do
uwsgi_is_connected
uwsgi_offload_register_engine
uwsgi_chomp
uwsgi_metric_set_max
uwsgi_subscribe
uwsgi_register_router
uwsgi_manage_signal_cron
check_hex
uwsgi_print_sym
bind_to_tcp
uwsgi_master_check_mercy
threaded_current_wsgi_req
worker_wakeup
uwsgi_metric_div
uwsgi_takeover
uwsgi_metric_find_by_namen
uwsgi_opt_add_unique_legion_cron
uwsgi_opt_add_cron2
uwsgi_fifo_table
uwsgi_proto_scgi_nph_setup
uwsgi_add_transformation
plugin_already_loaded
event_queue_interesting_fd_is_read
uwsgi_opt_legion
uwsgi_register_logchunk
uwsgi_alarm_trigger
uwsgi_opt_get
uwsgi_proto_ssl_read_body
uwsgi_setup_reload
uwsgi_json_config
uwsgi_startswith
uwsgi_buffer_append_valnum
uwsgi_chunked_read
uwsgi_str_to_hex
uwsgi_linux_ksm_map
uwsgi_logic_opt_if_plugin
uwsgi_base128
uwsgi_call_symbol
uwsgi_apply_routes
uwsgi_logic_opt_if_not_env
uwsgi_fixup_fds
masterpid
unconfigured_hook
uwsgi_get_app_id
uwsgi_sharedarea_init_fd
uwsgi_emperor_start
uwsgi_load_plugin
uwsgi_log
uwsgi_cheaper_decrease
uwsgi_socket_uniq
uwsgi_websocket_recv
uwsgi_now
spooler_start
uwsgi_init_random
uwsgi_buffer_append_ipv4
find_wsgi_req_by_fd
uwsgi_malloc
uwsgi_opt_snmp
uwsgi_new_shared_socket
uwsgi_legion_get_lord
uwsgi_opt_add_custom_option
linux_namespace_start
uwsgi_thread_new
uwsgi_metric_inc
uwsgi_postbuffer_do_in_mem
uwsgi_be32
uwsgi_req_append
uwsgi_opt_pidfile_signal
uwsgi_opt_logfile_chmod
uwsgi_legion_action_register
uwsgi_signal_handler
uwsgi_subscription_set_algo
uwsgi_stats_keylong_comma
uwsgi_strncopy
uwsgi_check_scheme
uwsgi_update_load_counters
uwsgi_read_fd
uwsgi_register_embedded_alarms
uwsgi_apply_transformations
uwsgi_alarm_func_cmd
trigger_harakiri
simple_loop
uwsgi_sharedarea_write64
emperor_get_by_socket_fd
find_worker_id
uwsgi_sharedarea_write
event_queue_add_fd_read
uwsgi_opt_chmod_socket
uwsgi_sharedarea_read8
uwsgi_sharedarea_update
uwsgi_cache_by_namelen
uwsgi_get_logchunk_by_name
uwsgi_hook_by_name
uwsgi_proto_suwsgi_setup
uwsgi_post_accept
uwsgi_concat4n
uwsgi_write_intfile
uwsgi_metric_find_by_asn
uwsgi_opt_add_addr_list
uwsgi_unlock_ipcsem
uwsgi_be64
uwsgi_new_gateway_socket_from_fd
uwsgi_simple_file_read
uwsgi_postbuffer_do_in_disk
uwsgi_queue_pull
uwsgi_help
uwsgi_rpc_init
env_to_arg
uwsgi_cache_start_sync_servers
uwsgi_opt_legion_mcast
uwsgi_get_subscribe_slot
uwsgi_manage_opt
uwsgi_regexp_match_ovec
uwsgi_get_qs
uwsgi_calc_cheaper
emperor_curse
uwsgi_get_line
uwsgi_run
http_url_encode
uwsgi_check_logrotate
ini_lstrip
uwsgi_write_pem_to_file
uwsgi_stats_keyvalnum
uwsgi_protocols_register
uwsgi_del_socket
uwsgi_check_touches
logto
uwsgi_check_mountpoint
uwsgi_add_subscribe_node
vassal_sos
uwsgi_rwlock_ipcsem_check
uwsgi_remap_fd
uwsgi_opt_add_mule
uwsgi_queue_set
uwsgi_opt_set_int
uwsgi_opt_max_vars
uwsgi_opt_set_cap
emperor_back_to_ondemand
uwsgi_update_pidfiles
uwsgi_is_a_keep_mount
uwsgi_string_new_list
uwsgi_strip
emperor_build_scanners
emperor_blacklist
uwsgi_count_sockets
uwsgi_cache_exists2
event_queue_fd_read_to_write
uwsgi_free_transformations
uwsgi_file_write_do
uwsgi_spooler_read_content
cache_udp_server_loop
uwsgi_hooked_parse
uwsgi_gzip
uwsgi_spawn_daemon
uwsgi_lock_fast_init
uwsgi_legion_get_by_socket
uwsgi_exec_atexit
uwsgi_crc32
uwsgi_response_add_date
uwsgi_register_keyval_metric
uwsgi_init_all_apps
find_first_available_wsgi_req
uwsgi_fcntl_is_locked
uwsgi_proto_ssl_write
uwsgi_write_pidfile
event_queue_del_fd
uwsgi_sharedarea_write32
uwsgi_logic_opt_if_reload
uwsgi_opt_set_umask
uwsgi_buffer_set_uh
uwsgi_fpe
uwsgi_stats_pusher_setup
uwsgi_response_write_headers_do
uwsgi_deflate
uwsgi_new_socket
uwsgi_buffer_fix
uwsgi_block_signal
uwsgi_build_cap
uwsgi_stats_str
uwsgi_run_command_putenv_and_wait
uwsgi_register_logger
event_queue_fd_readwrite_to_write
uwsgi_legion_atexit
uwsgi_legion_get_by_name
uwsgi_proto_fastcgi_parser
uwsgi_str2_num
uwsgi_lock_ipcsem_check
uwsgi_request_body_read
uwsgi_routing_translate
async_add_fd_write
uwsgi_base64_encode
uwsgi_route_api_func
uwsgi_worker_is_busy
gracefully_kill_them_all
uwsgi_gateway_go_cheap
uwsgi_apply_error_routes
uwsgi_signal_add_cron
uwsgi_legion_scrolls
uwsgi_register_hook
uwsgi_opt_signal
proxy1_parse
uwsgi_cheaper_algo_backlog
uwsgi_get_subscribe_node_by_name
uwsgi_hooks_run
uwsgi_no_subscriptions
uwsgi_proto_fastcgi_read_body
uwsgi_micros
uwsgi_wait_for_socket
uwsgi_metric_find_by_oidn
uwsgi_connect
uwsgi_concat2
uwsgi_unblock_signal
uwsgi_opt_legion_node
register_gateway
uwsgi_get_binary_path
uwsgi_stats_keyvalnum_comma
uwsgi_opt_deprecated
uwsgi_opt_log_date
uwsgi_websockets_init
__data_start
what_i_am_doing
uwsgi_stats_keyvaln
uwsgi_ini_config
uwsgi_setns_preopen
uwsgi_farm_has_mule
uwsgi_opt_load
uwsgi_sharedarea_read32
uwsgi_response_add_expires
uwsgi_apply_response_routes
uwsgi_register_imperial_monitor
uwsgi_blob_to_response
uwsgi_sharedarea_wait
uwsgi_protected_close
uwsgi_cache_magic_clear
uwsgi_respawn_worker
uwsgi_cache_keys
uwsgi_protected_read
uwsgi_legion_action_call
uwsgi_buffer_append
uwsgi_opt_set_megabytes
uwsgi_buffer_append_chunked
uwsgi_exceptions_handler_thread_start
uwsgi_send_subscription_from_fd
uwsgi_apply_cap
uwsgi_403
uwsgi_stats_object_open
proto_base_add_uwsgi_var
uwsgi_build_log_format
wsgi_req_setup
uwsgi_opt_resolve
uwsgi_simple_wait_write_hook
uwsgi_cache_magic_context_hook
uwsgi_proto_puwsgi_setup
uwsgi_logic_opt_if_hostname
uwsgi_stats_keyslong_comma
uwsgi_apply_final_routes
uwsgi_alarm_func_signal
uwsgi_chown
uwsgi_expand_path
uwsgi_resolve_ip
uwsgi_opt_load_ini
create_logpipe
uwsgi_opt_snmp_community
uwsgi_opt_build_plugin
uwsgi_sharedarea_rlock
uwsgi_malloc_shared
uwsgi_remote_signal_send
event_queue_add_fd_write
uwsgi_master_check_reload
uwsgi_opt_logic
uwsgi_socket_b
uwsgi_master_check_crons_deadline
uwsgi_file_to_string_list
uwsgi_sharedarea_dec16
uwsgi_lock_ipcsem
uwsgi_emulate_cow_for_apps
expire_rb_timeouts
uwsgi_ssl_new_server_context
uwsgi_buffer_insert
event_queue_wait
uwsgi_pipe_sized
uwsgi_legion_announce_death
uwsgi_setup_schemes
uwsgi_stats_keyslong
uwsgi_log_encoders_register_embedded
uwsgi_log_encoder_parse_vars
socket_to_un_addr
uwsgi_logic_opt_if_not_hostname
uwsgi_opt_legion_quorum
uwsgi_endswith
escape_json
uwsgi_logic_opt_if_not_opt
mule_send_msg
uwsgi_proto_base_write
uwsgi_register_metric
uwsgi_str_split_nget
uwsgi_init_default
uwsgi_hooked_parse_array
uwsgi_starts_with
uwsgi_reload
uwsgi_alarm_func_log
uwsgi_sharedarea_dec8
uwsgi_opt_set_immediate_gid
uwsgi_opt_set_immediate_uid
uwsgi_sharedarea_dec64
uwsgi_opt_add_unique_cron
uwsgi_regexp_build
uwsgi_open_and_read
uwsgi_num_from_file
uwsgi_get_config_py
uwsgi_gzip_prepare
uwsgi_subscribe2
uwsgi_inflate_init
uwsgi_socket_setup_protocol
uwsgi_user_unlock
uwsgi_get_last_charn
uwsgi_gzip_chunk
uwsgi_proto_puwsgi_close
uwsgi_str4_num
uwsgi_stats_keyvaln_comma
simple_current_wsgi_req
__libc_csu_init
uwsgi_register_signal
uwsgi_offload_request_net_do
uwsgi_opt_print
uwsgi_offload_engines_register_all
uwsgi_alarm_thread_start
uwsgi_log_rotate
uwsgi_alarm_init_log
uwsgi_legion_add_node
uwsgi_setup_emperor
uwsgi_ssl_session_remove_cb
uwsgi_register_protocol
uwsgi_socket_passcred
uwsgi_fcntl_lock
wsgi_req_accept
uwsgi_register_cheaper_algo
uwsgi_additional_header_add
uwsgi_opt_add_shared_socket
uwsgi_user_lock
uwsgi_opt_ssa
uwsgi_cache_sync_all
uwsgi_async_init
uwsgi_log_do_rotate
uwsgi_wait_for_fs
uwsgi_try_autoload
uwsgi_zerg_attach
uwsgi_buffer_f64be
uwsgi_do_rpc
uwsgi_master_check_workers_deadline
uwsgi_exec_command_with_args
ini_get_line
uwsgi_buffer_u24be
uwsgi_threaded_logger_spawn
uwsgi_read_uh
Borrow or rob
uwsgi_string_list_has_item
uwsgi_binsh
uwsgi_opt_load_yml
reap_them_all
uwsgi_recv_cred
simple_goodbye_cruel_world
uwsgi_opt_false
uwsgi_master_check_mules_deadline
uwsgi_proto_base_accept
uwsgi_sharedarea_read
uwsgi_cache_del2
uwsgi_exception_setup_handlers
uwsgi_remove_header
uwsgi_master_fifo
uwsgi_master_generate_stats
uwsgi_proto_noop_read_body
uwsgi_pass_cred2
uwsgi_config_py
uwsgi_cron_add
uwsgi_deflate_init
uwsgi_configure
config_magic_table_fill
uwsgi_cache_prepare_magic_clear
uwsgi_add_rb_timer
uwsgi_rwlock_fast_check
uwsgi_connect_udp
uwsgi_proto_raw_parser
emperor_stop
uwsgi_404
uwsgi_stats_keyval
uwsgi_run_command_and_wait
uwsgi_websocket_send_from_sharedarea
gateway_respawn
set_harakiri
uwsgi_simple_wait_read2_hook
uwsgi_logic_opt_for_readline
uwsgi_netstring
uwsgi_hash_algo_register
uwsgi_response_prepare_headers
uwsgi_get_loop
uwsgi_mule
uwsgi_logic_opt_for_glob
uwsgi_pthread_robust_mutexes_enabled
uwsgi_opt_add_cron
http_url_decode
add_exported_option
uwsgi_cheaper_algo_manual
uwsgi_get_cflags
uwsgi_opt_uid
uwsgi_stats_pusher_get
inc_harakiri
uwsgi_is_again
uwsgi_buffer_decapitate
uwsgi_exception_handler_by_name
uwsgi_cache_magic_set
uwsgi_setup_zerg
uwsgi_opt_set_req_logger
uwsgi_destroy_request
uwsgi_rlock_ipcsem
uwsgi_logic_opt_if_dir
suspend_resume_them_all
uwsgi_imperial_monitor_directory
uwsgi_opt_set_logger
uwsgi_loop_cores_run
uwsgi_num2str
uwsgi_get_cwd
uwsgi_cache_rlock
uwsgi_alarm_init_signal
uwsgi_buffer_byte
uwsgi_get_socket_by_num
uwsgi_lock_ipcsem_init
uwsgi_proto_puwsgi_parser
uwsgi_set_processname
uwsgi_proto_uwsgi_setup
uwsgi_subscription_init_ht
uwsgi_add_expires_uri
uwsgi_log_verbose
uwsgi_read_true_nb
uwsgi_fsmon_event
uwsgi_opt_cflags
uwsgi_regexp_ovector
uwsgi_register_fsmon
uwsgi_opt_exists
uwsgi_offload_thread_start
uwsgi_read_with_realloc
uwsgi_num2str2
uwsgi_cache_num2
uwsgi_get_cookie
uwsgi_signal_add_rb_timer
uwsgi_opt_load_plugin
uwsgi_write_true_nb
log_request
uwsgi_setup_upstart
uwsgi_receive_signal
uwsgi_file_executable
uwsgi_close_request
uwsgi_sharedareas_init
uwsgi_subscription_credentials_check
uwsgi_buffer_destroy
uwsgi_opt_pcre_jit
bind_to_udp
uwsgi_concat2nn
uwsgi_upload_progress_update
uwsgi_response_add_header
uwsgi_queue_get
spooler_wakeup
parse_sys_envs
uwsgi_plugin_get
uwsgi_stats_symbol_nl
uwsgi_metric_collector_by_name
uwsgi_build_mime_dict
show_config
uwsgi_file_exists
set_user_harakiri
__libc_csu_fini
uwsgi_proxy_nb
uwsgi_new_spooler
uwsgi_response_writev_body_do
uwsgi_buffer_u16le
uwsgi_systemd_notify
event_queue_read
uwsgi_websocket_send_binary
uwsgi_legion_lord_scroll
uwsgi_close_all_unshared_sockets
uwsgi_setup_locking
uwsgi_legion_remove_node
emperor_add_scanner
uwsgi_cache_init
uwsgi_fixup_routes
uwsgi_cache_create
emperor_loop
uwsgi_opt_custom
uwsgi_list_has_str
uwsgi_connectn
uwsgi_buffer_append_keynum
uwsgi_setup_log
uwsgi_master_req_log
uwsgi_proto_base_fix_headers
uwsgi_emperor_is_valid
uwsgi_logic_opt_if_hostname_match
uwsgi_64bit2str
uwsgi_offload_setup
uwsgi_real_file_serve
uwsgi_opt_set_str_spaced
uwsgi_tmpfile
uwsgi_opt_legion_scroll
fastcgi_to_uwsgi
uwsgi_get_shared_socket_by_num
wsgi_req_recv
uwsgi_stats_key
uwsgi_simple_wait_milliseconds_hook
uwsgi_opt_extract
uwsgi_imperial_monitor_glob_init
wsgi_req_async_recv
uwsgi_ignition
uwsgi_start
uwsgi_buffer_append_keyval
master_loop
uwsgi_buffer_append_keyipv4
uwsgi_ssl_init
uwsgi_proto_ssl_sendfile
event_queue_ack_timer
uwsgi_legion_i_am_the_lord
event_queue_interesting_fd_has_error
uwsgi_cache_by_name
uwsgi_opt_add_dyn_dict
uwsgi_metric_collector_file
uwsgi_fsmon_setup
uwsgi_cheaper_algo_spare
uwsgi_str_occurence
uwsgi_num2str2n
uwsgi_spool_request
uwsgi_dyn_dict_del
uwsgi_emperor_run_scanners
uwsgi_queue_pop
uwsgi_opt_set_placeholder
uwsgi_405
uwsgi_get_dot_h
uwsgi_sharedarea_read64
uwsgi_register_logchunks
uwsgi_proto_ssl_close
uwsgi_init_queue
uwsgi_map_sockets
uwsgi_rwunlock_ipcsem
uwsgi_master_check_gateways_deadline
uwsgi_master_log
uwsgi_read_response
uwsgi_substitute
uwsgi_offload_request_sendfile_do
uwsgi_http_status_msg
uwsgi_async_queue_is_full
uwsgi_cache_prepare_magic_update
uwsgi_get_exported_opt
uwsgi_master_manage_setns
uwsgi_logic_opt_if_not_file
uwsgi_proto_ssl_accept
uwsgi_envdirs
uwsgi_parse_legion
uwsgi_get_socket_num
uwsgi_read_nb
uwsgi_mule_add_farm_to_queue
uwsgi_fd_is_safe
event_queue_fd_write_to_read
uwsgi_umount_hook
uwsgi_buffer_u16be
uwsgi_offload_run
uwsgi_stats_new
uwsgi_buffer_append_base64
uwsgi_to_http
uwsgi_calloc_shared
uwsgi_run_command
uwsgi_pipe
uwsgi_register_metric_do
uwsgi_opt_set_uid
uwsgi_lower
uwsgi_regexp_match
uwsgi_master_fix_request_counters
gzheader
uwsgi_sharedarea_init_keyval
uwsgi_proto_scgi_parser
uwsgi_manage_command_cron
uwsgi_get_route_var
uwsgi_register_scheme
uwsgi_master_manage_emperor
uwsgi_mount
uwsgi_request_body_readline
event_queue_add_timer
uwsgi_sanitize_cert_filename
uwsgi_read_whole_true_nb
uwsgi_websocket_send_binary_from_sharedarea
uwsgi_str3_num
uwsgi_response_sendfile_do
uwsgi_subscribe_all
uwsgi_register_base_hooks
uwsgi_sharedarea_read16
uwsgi_send_subscription
ZLIB_1.2.0
GLIBC_2.2.5
UUID_1.0
OPENSSL_1.0.0
GLIBC_2.4
LIBXML2_2.4.30
LIBXML2_2.6.0
GLIBC_2.16
GLIBC_2.14
GLIBC_2.8
GLIBC_2.10
GLIBC_2.3.2
GLIBC_2.3.4
GLIBC_2.3
%zh*
%rh*
%jh*
%bh*
%Zh*
%Rh*
%Jh*
%Bh*
%:h*
%2h*
%*h*
%"h*
%zg*
%rg*
%jg*
%bg*
%Zg*
%Rg*
%Jg*
%Bg*
%:g*
%2g*
%*g*
%"g*
%zf*
%rf*
%jf*
%bf*
%Zf*
%Rf*
%Jf*
%Bf*
%:f*
%2f*
%*f*
%"f*
%ze*
%re*
%je*
%be*
%Ze*
%Re*
%Je*
%Be*
%:e*
%2e*
%*e*
%"e*
%zd*
%rd*
%jd*
%bd*
%Zd*
%Rd*
%Jd*
%Bd*
%:d*
%2d*
%*d*
%"d*
%zc*
%rc*
%jc*
%bc*
%Zc*
%Rc*
%Jc*
%Bc*
%:c*
%2c*
%*c*
%"c*
%zb*
%rb*
%jb*
%bb*
%Zb*
%Rb*
%Jb*
%Bb*
%:b*
%2b*
%*b*
%"b*
%za*
%ra*
%ja*
%ba*
%Za*
%Ra*
%Ja*
%Ba*
%:a*
%2a*
%*a*
%"a*
%z`*
%r`*
%j`*
%b`*
%Z`*
%R`*
%J`*
%B`*
%:`*
%2`*
%*`*
%"`*
%z_*
%r_*
%j_*
%b_*
%Z_*
%R_*
%J_*
%B_*
%:_*
%2_*
%*_*
%"_*
%z^*
%r^*
%j^*
%b^*
%Z^*
%R^*
%J^*
%B^*
%:^*
%2^*
%*^*
%"^*
%z]*
%r]*
%j]*
%b]*
%Z]*
%R]*
%J]*
UH-@fl
t&Hc
uGHc
HcT$
u2Hc
uGHc
HcT$
HcT$
ATUA
 []A\
D0hH
D0`H
D0`H
t(Hc
D0pH
ATUA
 []A\
AWAVA
AUATI
[]A\A]A^A_
AVAUATUA
D9rx
t0Hc
4.A9
H9L$X
[]A\A]A^
m fA
?:t'
ATUI
ATUH
\$ H
t#A8
T$(H
AVATH
\$0H
l$@H
d$8I
t+A8
T$HH
[]A\A^
D$(I
t$(M
AUATUH
,7SH
[]A\A]
[]A\A]
ATUH
r4H)
7@8u
[]A\
AWAVAUATUSH
}<Hc
D9-)
([]A\A]A^A_
LcD$
ZYE1
ATUSH
[]A\
AUATI
[]A\A]
AUATI
[]A\A]
tH<"tT<\t`
ATUS
#t]A
%t=A
.tIA
alula
#tZA
[]A\
AVAUH
ATUSL
[]A\A]A^A_
[]A\A]A^A_
T$XH
T$XH9
D$XH
u!H)
 w9H
s)H)
AWAVI
AUATI
t$@H
t$@H
[]A\A]A^A_
(L9|$
x<Hc
=v=E
uASH
x1u(
AWAVAUATUSH
[]A\A]A^A_
ATUI
 []A\
AVAU1
D$(1
t	H9
L$ H
D$(dH3
0[]A\A]A^
AUATUSH
D$(1
PhHc
P(Hc
P0Hc
H;P(
H;D$ 
H;D$
~*Hc
D$(dH3
8[]A\A]
t$ H
T$ Hi
PXHc
AVAUATU
[]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
ATUI
[]A\
[]A\
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATA
[]A\A]A^A_
AWAV1
AUAT
t$ H
D$(1
D$(dH3
8[]A\A]A^A_
AUATI
[]A\A]
ATUH
[]A\
AWAVA
AUATI
D$81
D$`L
L$hH
D$  
t$(H
t$@H
t$0L
D$ H
T$ H
T$(H
D$(H
T$(H
t$8dH34%(
x[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
USHc
AUATI
[]A\A]
[]A\A]
[]A\A]
AWAVAUD
[]A\A]A^A_
$HTTPA
$6USH
[]A\
AUATUSH
[]A\A]
AVAUI
ATUI
[]A\A]A^
D$(1
USE1
D$(1
x3toH
AUATI
[]A\A]
AWAVAUATI
D$81
L$8dH3
H[]A\A]A^A_
l$ H
ATUH
uU[]A\
AVAUATUI
tOA	
]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
ATUA
AVAUATUSH
D95L
[]A\A]A^
AVAUATUI
D$(%
[]A\A]A^
[]A\
AVAU
ATUSH
[]A\A]A^
AUATUSH
[]A\A]
AUATI
[]A\A]
AUATUSH
[]A\A]
~WHc
52|*
ATUI
AUATI
[]A\A]
]A\A]
ATUI
ATUI
AUATI
[]A\A]
]A\A]
]A\A]
AUATI
[]A\A]
]A\A]
AUATI
[]A\A]
]A\A]
]A\A]
AUATI
[]A\A]
[]A\A]
]A\A]
k fD
AUATI
[]A\A]
[]A\A]
AVAUI
u}fE
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\A]A^
AVAUI
ATUI
]A\A]A^
]A\A]A^
]A\A]A^
AVAUI
]A\A]A^
[]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
AWAVL
<7AUATUSH
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
H=(ql
AWAVAUATUSH
D$(1
\$(dH3
8[]A\A]A^A_
D9px
=,~*
-!q*
=i~*
T$ E1
T$ H
%Io*
d$8M
=^}*
=(}*
IcD$
|$(A
=j|*
d$8M
=&|*
D$(A
=B{*
T$ E1
T$ H
=-y*
,7ATUSH
[]A\A]
[]A\A]
AVAUL
,7ATUL9
SsSH
]A\A]A^
]A\A]A^
AWAVE1
AUATI
[]A\A]A^A_
[]A\A]A^A_
]A\A]A^A_
AWAVI
Eleele
AUATE
[]A\A]A^A_
AWAVAUATA
5+q*
PATH_INFE
[]A\A]A^A_
ATU1
[]A\
AVAUATUH
]A\A]A^
ATUH
[]A\
[]A\
AWAVA
AUATA
[]A\A]A^A_
AVAUA
D$81
D$"D
T$"H
L$8dH3
@[]A\A]A^
|$01
|$01
AUAT
D$(1
|$(dH3<%(
8[]A\A]
AUATI
[]A\A]
ATUA
 []A\
AVAUATU
[]A\A]A^
ATUA
[]A\
ATUA
[]A\
AWAVAUATA
[]A\A]A^A_
t!H9
t!H9
t H9
t"H9
5VL*
t"H9
t^H9
AUATUSH
[]A\A]
t\USH
t,H9
AUATUSH
HcD$
D$`E
D$pH
D$`H
D$0HcD$
l$@H
HcT$
t$ 1
[]A\A]
HcD$
D$pH
AWAVA
AUATI
D$81
=RB*
5H,*
L$8dH3
H[]A\A]A^A_
AUATI
D$(1
<$=tw
t$(dH34%(
8[]A\A]
5R=*
AUATUSH
t(H9
D;%a:*
[]A\A]
<$[H
5T9*
=D:*
t$H9
t'H9
t)H9
5t7*
=l8*
t H9
AVAUATUH
d$(M
[]A\A]A^
AUATUSH
-1**
<$[H
t&H9
=H2*
[]A\A]
5k1*
571*
=H2*
t'H9
5}1*
t$H9
t"H9
t!H9
D-}.*
ATUI
[]A\
[]A\
[]A\
AWAVI
AUATI
[]A\A]A^A_
=n%*
AUATH
[]A\A]
AVAUI
l$ H
]A\A]A^
AUATUH
]A\A]A^
AUATH
[]A\A]
AWAVI
AUATUSH
|$`H
t$`Lc
L$(M
D$0H
D$,0
[]A\A]A^A_
L$(M
D$0H
D$,0
t$@H
D$@I
D$HH
D$PH
ucHc
uaHc
AUATI
|$`H
t$`Lc
L$(H
D$0H
D$,0
[]A\A]
t$@H
D$HH
D$PH
t$0H
D$0H
|$kL
D$j 
D$PH
D$XH
D$@H
D$hH
D$ H
t$PHc
 []A\
%w	*
ATUI
[]A\
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
AVAUA
ATE1
[]A\A]A^
[]A\A]A^
H;BX
AWAVAUATA
x1Hc
t$`H
AWASL
\$`AT
AUP1
AWASAT
AUP1
t$ H
T, H
[]A\A]A^A_
D,HH
L,@H
ATUI
[]A\
ATUI
[]A\
AUAT
[]A\A]
[]A\A]
AUATUSH
d$@M
D$0Ic\$
d$@M
t9Hc
[]A\A]
D$ Hc
T$(H
T$8H
AUATA
[]A\A]
AUATI
[]A\A]
[]A\A]
AWAVA
AUATI
[]A\A]A^A_
<(tt<)
t#<%H
AUATUSH
[]A\A]
AUATUSH
[]A\A]
ATUI
[]A\
C0[]A\
[]A\
AVAUATUH
[]A\A]A^
AWAVE1
AUATI
l$(H
$tNH
}tkM
|$(H
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
D$h1
L$hdH3
x[]A\A]A^A_
|$ H
|$ I
AWAVI
AUATI
D$h1
|$(H
L$hdH3
x[]A\A]A^A_
t$ Hc
ATUS
[]A\
ATU1
t$0dH
D$0<ItI<0
T$0H
[]A\
D$0H
t$0D
AUATUS
[]A\A]
ATUH
L;` s
[]A\
Hc3H
AUATUSH
[]A\A]
AUATUS1
K(H9
C0L9
d$(M
[]A\A]
T$(H
AWAVAUATUSH
D$H1
~-Hc
D9-p
~}E1
~fIc
~pE1
~XIc
~nMc
Kct5
Hc5n
t Hc
HD;y
L$HdH3
X[]A\A]A^A_
|$01
HcD$
H9D$0
|$01
D$0H
~WUS
[]A\
AVAUA
[]A\A]A^
~GHc
ATUS
[]A\
[]A\
ATUH
u	[]A\
[]A\
AUATA
tvH9
[]A\A]
]A\A]
[]A\A]
ATUH
ATUHc
[]A\
T2`H
AUATUSH
[]A\A]
t<E1
AWAV
AUATUSH
HcT$
udHc
uLHc
([]A\A]A^A_
D;5:
HcT(
HcT$
D;jx
D;-z
IcT$X
}(E1
HcUP
HcU\
d$(M
ATUI
[]A\
AUATUSH
D$P$~G
D$`H
D$PH
D$ HcD$
l$0H
[]A\A]
HcD$
HcD$
HcD$
AWAV
AUAT1
[]A\A]A^A_
AVLc
AUATM
[]A\A]A^
\$@1
\$@1
ATUH
5.u)
~+H9
dH3<%(
 []A\
%+t)
~@H9
AWAVAUATA
9*t(
t,Ic
t,Ic
t,Hc
t	D9
D;-m
5Lk)
=no)
-xp)
-wp)
-Qo)
-to)
-To)
-1o)
[]A\
[]A\
[]A\
[]A\
[]A\
d$(M
AUATI
[]A\A]
=A^)
=y\)
5P\)
AWAVH
AUAT1
=VX)
=H])
-Q^)
l$pL
d$0H
l$(I
-y[)
-)[)
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
|$01
D$0L
D$8M
H9D$
HcD$
t$@1
=AO)
t$@L
AWAVAUATI
-,@)
l$ E
T$hE1
[]A\A]A^A_
t$XH;
T$ 9
AWAVAUATI
D$h%
\$pE
5<H)
4(AVSH
[A_t
D;$$
T$PL
[]A\A]A^A_
D$h%
D;$$
D;$$
=]E)
D;$$
AUATI
[]A\A]
[]A\A]
ATUI
D$H1
/tBH
D$HdH3
AVAUATUSH
[]A\A]A^
AWAVAUATUSH
D$0H
-t8)
%:C)
5,8)
=~7)
l$,E
=t6)
=q6)
=AK)
~	D9
=<3)
=i2)
D$+<
l$,u
L$,E1
=!/)
=B.)
=+-)
AVAU
ATUSH
[]A\A]A^
AWAVE
AUATE
D$PH
4$AVH
[]A\A]A^A_
t;E9
u	E9
[]A\A]A^A_
[]A\A]A^A_
=Q,)
=n&)
=5&)
D$`H
D$PH
D$ HcD$
\$0H
D$8vtH
-3;)
=j:)
AUAT1
[]A\A]
[]A\A]
AVAUI
ATUI
-)|(
D$x1
T$xdH3
[]A\A]A^
9-`2)
[]A\
AUATUS
5p3)
5d3)
5t0)
ATUH
t@~9H
[]A\
[]A\
%$.)
;8t<
ATUS
[]A\
[]A\
ATUI
[]A\
AWAVAUATUSH
D$81
95D*)
t$ H
\$8dH3
H[]A\A]A^A_
|$7H
D$(I9
AWAVAUATUSH
=o&)
=Y&)
5k&)
9-.&)
=z%)
=d%)
5f%)
t'H9
=~$)
[]A\A]A^A_
AVAU1
ATUH
t4[L
]A\A]A^
[]A\A]A^
AVAUI
ATUI
9D$ u
[]A\A]A^
AUATI
[]A\A]
[]A\A]
wiATU
[]A\
AVAU1
ATUI
t []A\A]A^
u`I9
]A\A]A^
AWAV
AUAT
tiHc
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATA
L$>H
D$0H
t$?H
D$ H
D$(dH
l$ H
l$(H
L$LH
|$0H
D$LE
t$P1
D$PA
[]A\A]A^A_
%IY(
l$`1
t$0AQE
[]A\
[]A\
AVAUATI
]A\A]A^
]A\A]A^
AVAUI
ATUH
dH3<%(
[]A\A]A^
EXH;
AWAVD
AUATA
D$81
t$ H
ATAUH
D$HL
D$8dH3
H[]A\A]A^A_
t$01
L;\$0
\$ L
\$ D
T$(H
\$ L
T$(H
T$ L
HcL$
T$PH
ATAUH
ATAUH
D$8L
HcL$
AUATUS
D$h1
T$pRh
T$xRh
Rh0iH
RhLTH
|$ H
|$(H
|$8H
|$@H
|$0H
|$HH
|$XH
|$PH
|$`H
D$hdH3
x[]A\A]
|$(H
|$ H
D$ H
|$8E1
|$@H
t$`A
t$HE
t$@UH
t$8L
AVAUA
[]A\A]A^
tBUSH
AUATI
ZY~.9
]A\A]
[]A\A]
AVAUI
ATUH
N AUH)
ZY~"9
]A\A]A^
]A\A]A^
AVAUI
ATUH
N ATH)
ZY~"9
]A\A]A^
]A\A]A^
ATUI
\$ I
t$ I
L$ H
L$ H)
[]A\
ATUI
\$ I
t$ I
L$ H
L$ H)
[]A\
AUATD
[]A\A]
[]A\A]
AUATI
ZY~.9
]A\A]
[]A\A]
AUATI
ZY~.9
]A\A]
[]A\A]
AUATUSH
[]A\A]
AUATI
[]A\A]
[]A\A]
AVAUATUI
x;ty1
[]A\A]A^
tyL;k@|s
C(I9
HcC<L
ATUH
[]A\
ATUI
[]A\
[]A\
AVAUATUSH
[]A\A]A^
fD;e
t$ H
t$ H
AUATA
x&tSH
[]A\A]
[]A\A]
H9=)
ATUI
H9h v
AVAUATUS
[]A\A]A^
]A\A]A^
AVAUA
[]A\A]A^
[]A\A]A^
[]A\A]A^
ATUA
[]A\
[]A\
AVAUATUS
[]A\A]A^
]A\A]A^
ATUA
[]A\
[]A\
AWAVAUATUSH
t!H98u
[]A\A]A^A_
~>Hc
ATUS
God A red nugget A fat egg under a dog
PXH9
P`H9
[]A\
~jH;
[]A\
[]A\
~	H;
~[Hc
ATUSH
[]A\
C H;
;{Pu
9{Pt
H+C8
H=@ol
xut3
C H)
[]A\
C H)
[]A\
C H)
CHH;B
D$0H
ATUI
[]A\
AWAVAUATUSH
;EDtTL
;EDu
CHH;C@H
CHH;C@H
AUATI
}tHc
[]A\A]
]A\A]
AUATI
[]A\A]
[]A\A]
[]A\A]
T$@H
D$XA
T$PH
D$XA
t$(L
T$@H
D$XA
T$@H
D$XA
ATUI
[]A\
AUATI
[]A\A]
AVAUI
ATUH
]A\A]A^
AWAVI
AUAT1
[]A\A]A^A_
AWAVI
AUAT
([]A\A]A^A_
ATUI
$u(H
[]A\
ATUA
[]A\
AWAVI
AUATUSH
[]A\A]A^A_
AWAVA
AUATA
[]A\A]A^A_
ATUI
[]A\
D$0H
T$0H
H9D$0
D$0H
ATUI
[]A\
[]A\
AWAVH
AUATI
t$ H
t$x1
t$@1
D$0H
d$`H
\$hH
\$`H
t$xdH34%(
[]A\A]A^A_
D$(H
D$8H
D$01
D$0H
\$hH
d$`H
H9\$(
t$ L
ATUI
[]A\
AVAUA
ATUA
[]A\A]A^
thAUATA
[]A\A]
[]A\A]
AVAUA
ATUA
]A\A]A^
]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
AUATA
[]A\A]
[]A\A]
thAUATA
[]A\A]
[]A\A]
AVAUI
ATUI
[]A\A]A^
]A\A]A^
[]A\A]A^
tXAUATA
[]A\A]
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUI
u'H+\$
[]A\A]A^
AUATUSH
[]A\A]
;:t+
~$A;8tP
t6H9
AUATI
[]A\A]
[]A\A]
AWAVA
AUATI
[]A\A]A^A_
D$8%
D$PH
ucIc
T$PH
D$PH
T$PH
[]A\
[]A\
AUATI
D$H1
d$ H
D$0H
D$8 
L$HdH3
X[]A\A]
AWAVI
AUATI
D$H1
d$ H
D$0H
D$8 
L$HdH3
X[]A\A]A^A_
AWAVI
AUATA
D$X1
t$ H
l$@H
D$H 
d$@M
I9D$
T$XdH3
h[]A\A]A^A_
AWAVI
AUATM
D$X1
t$ H
t$@H
D$H 
T$@H
L$XdH3
h[]A\A]A^A_
AUATI
[]A\A]
RHcP
AWAVI
AUATI
D$(1
L$(dH3
8[]A\A]A^A_
AWAVI
AUATI
D$(1
L$(dH3
8[]A\A]A^A_
AUATI
D$(1
L$(dH3
8[]A\A]
|$XH
AUATI
D$(1
L$(dH3
8[]A\A]
|$XH
AVAUATUS
t8H;P v2H
C8HcC
[]A\A]A^
]A\A]A^
/t)B
[]A\
AWAVAUATI
E0H9
L$`D
[]A\A]A^A_
H9EX
L$`D
D$,A
D$0	
E	<ate<u
<nt{<l
<rt"<g
AWAVAUATI
T$ H
D$8%
%5i(
t$ H
d$(M
[]A\A]A^A_
%6h(
d$(M
d$(M
L$ A
AUATI
[]A\A]
[]A\A]
AVAUI
h@L)
t,[H
]A\A]A^
]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
]A\A]A^A_
RAUAWUSH
[]A\A]A^A_
AWATAVUS
AWAVE
AUATE
D$H1
t<fE
T$(H
D$(H
L$HdH3
X[]A\A]A^A_
AVAUI
[]A\A]A^
[]A\A]A^
ATUI
[]A\
[]A\
[]A\
ATUI
[]A\
AWAVAUATUSH
|$PH
t$XH
|$@1
l$hH
|$HH
t$@H
|$(H
|$(I
t$(H
L$,L
T$(H
h@ol
D$pH
[]A\A]A^A_
T$PH
t$X1
t$`H
D$pH
|$HH
t$@H
|$(H
|$(I
t$(H
L$,L
T$(H
h@ol
ATUH
[]A\
[]A\
AVAUI
ATUI
]A\A]A^
]A\A]A^
]A\A]A^
AWAV
AUATI
5wP(
[]A\A]A^A_
T$0H
D$H%
L$0L
L$(H
T$ H
=YO(
D$(H
L$ H
|$ H
~)Hc
=+M(
AUAT
xdt>
[]A\A]
ATUSH
ATUS
%)I(
AWAVAUATUSH
D$H1
<jv$H
D$HdH3
X[]A\A]A^A_
D<(H
D$0Hc
t$@1
|$HdH3<%(
[]A\A]A^A_
L$81
5[L(
5bA(
5?A(
=#@(
J`s@
D$(1
D$(dH3
[]A\
[]A\
AUATUSH
[]A\A]
ATUI
[]A\
ATUH
upHc
uSHc
[]A\
AUAT
[]A\A]
[]A\A]
AWAVAUATUSH
D$81
D$8dH3
H[]A\A]A^A_
D$ I
D$(tx
=a+(
=`*(
ATUI
[]A\
[]A\
AUATUSH
[]A\A]
= ((
ATUI
[]A\
[]A\
[]A\
ATUA
[]A\
AWAVA
AUATI
=m (
=p"(
[]A\A]A^A_
[]A\A]A^A_
AUATI
D$H1
L$HdH3
X[]A\A]
ATUI
[]A\
AUATI
([]A\A]
AUATI
=tRH
[]A\A]
[]A\A]
AUATI
[]A\A]
[]A\A]
ATUI
ATUI
[]A\
5j)(
ATUS
[]A\
AWAVAUATUSH
H9\$
H9\$
$<;u
$<;t
[]A\A]A^A_
~cAUAT
[]A\A]
[]A\A]
AUATI
=tRH
[]A\A]
[]A\A]
AUATI
[]A\A]
[]A\A]
t";z
AWAV
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUH
tIH)
]A\A]A^
t?9X
AUATUS
Lc5i
D9-3
<$[t}1
[]A\A]A^
AVAUATUS
Hc=A
ht"H
Hc=y
Hc5z
[]A\A]A^H
tEATI
[]A\
ATUSH
r	E1
[]A\
[]A\
sEUSH)
AWAVI
AUATI
[]A\A]A^A_
r/USH
AUATI
szHc
[]A\A]
4)H9
<	t<<
dH3<%(
AWAVE
AUATI
[]A\A]A^A_
AVAUI
]A\A]A^
]A\A]A^
AVAUI
ATUI
D$(1
L$(dH3
0[]A\A]A^
D$(1
L$(dH3
AUATI
dH34%(
[]A\A]
ATUSH
[]A\
[]A\
ATUA
[]A\
ATU1
T$0H
D$0L9
[]A\
ATUI
[]A\
AUATA
([]A\A]
AWAVAUATUSH
[]A\A]A^A_
RAUAWUAVH
RAUAWUAV
AWAVAUATUSH
[]A\A]A^A_
T$ RATH
T$ RH
ATAW
L$(QAT
T$0RH
AWAVAUATI
spH)
[]A\A]A^A_
4*H;
RAUH
AWU1
T$ RUH
T$ RUH
t$ E
L$(QU
T$0RH
AUATUSH
[]A\A]
[]A\A]
[]A\A]
AWAVAUATUSH
H9-!
([]A\A]A^A_
RATH
AWU1
AWAVI
AUATI
[]A\A]A^A_
u^fA
Hc=6
ATUSH
[]A\
Hc=1
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
D$(1
T$(dH3
ATUI
D$(1
\$(dH3
0[]A\
D$(1
T$(dH3
D$X1
GZYw2H
\$XdH3
uhUSH
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
RAUH
AWAT1
L$<E
]A\A]A^A_
AWAVAUATUSH
D$H1
L$HdH3
X[]A\A]A^A_
d$0H
l$8H
T$ H
t$ H
t$ H
l$(H
QAUH
RUAWH
QAUH
RUAW
AWAVAUATUSH
([]A\A]A^A_
QAVH
RATAWH
QAUH
RATAW
AWAVAUATI
[]A\A]A^A_
d$PM9
L$ QAT
T$(RH
L$,A
T$(RH
RATH
AWU1
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_
RATH
ATUI
[]A\
AUATI
[]A\A]
[]A\A]
[]A\A]
D$81
t$ H
D$8dH3
AUATI
L+k(Hc
[]A\A]
AVAUATUH
[]A\A]A^
AVAU
[]A\A]A^
t	H9
AWAVI
AUATI
H;S(u
[]A\A]A^A_
l$ I
T$(L
[]A\A]A^A_
l$ I
T$(L
AWAVAUATUSH
[]A\A]A^A_
ATUI
ZYuHHcD$
e(u8H
[]A\
ATUH
h`[]A\
ATUH
[]A\
AUATI
D$H1
T$PRhv[H
T$XRh
T$`Rh
T$hRh
T$pRh
T$xRh
|$ H
|$(H
|$0H
|$8H
D$HdH3
X[]A\A]
AWAVAUATUS
[]A\A]A^A_
ATUSH
~nHc
[]A\
[]A\
HcCH
AWAVAUATUSH
D$ fB
H9\$
dH34%(
[]A\A]A^A_
D$ H
[]A\
[]A\
[]A\
[]A\
AVAU
ATUH
[]A\A]A^
]A\A]A^
[]A\A]A^
AVAU
ATUH
[]A\A]A^
AVAU
ATUI
[]A\A]A^
AVAU
ATUI
[]A\A]A^
[]A\
[]A\
[]A\
[]A\
ATUI
[]A\
[]A\
[]A\
AWAVI
AUATA
<$!u
[]A\A]A^A_
[]A\A]A^A_
AVAUATI
]A\A]A^
]A\A]A^
AWAVAUATI
[]A\A]A^A_
HcD$
=!x'
|$ L
[]A\
AUATI
d$(M
[]A\A]
[]A\A]
AUATI
C uOH
[]A\A]
u<USH
AVAUATUSH
[]A\A]A^
5Zf'
D$(1
L$(dH3
D$(1
L$(dH3
x/;==
x/;=
AWAVH
AUAT1
[]A\A]A^A_
]A\A]A^A_
o`E1
AVAUI
ATUA
[]A\A]A^
[]A\A]A^
u@fD
u0fD
AWAVI
AUATA
[]A\A]A^A_
AUATI
D$ H
[]A\A]
D$pD
AVAUI
ATUA
uxH9
[]A\A]A^
u H9
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
H;F(s
AWAVI
AUATD
[]A\A]A^A_
M;nxwBH;k
[]A\A]A^A_
[]A^
[]A^
C [H
AVAT
[]A\A^
[]A\A^
[]A\
[]A\
AUATUSH
H9kxw
[]A\A]
H9kxvNH
H9kxw
AVAUI
ATUSH
5I\'
t	H;
L;cxsiH
H9Oxv8H
H9Oxw
AWAVAUATUSH
D$pH
D$pH
D$p H
D$p@
8[]A\A]A^A_
8[]A\A]A^A_
D$(I
} I;E
D$p 
D$(1
T$4L
D$(I
t	I9
D$p@uY
AWAVAUATI
|$ dH
t$ 1
ATUH
[]A\
[]A\
AVAUA
Hc=MP'
]A\A]A^
]A\A]A^
AVAUA
]A\A]A^
]A\A]A^
AUATI
[]A\A]
[]A\A]
AWAVA
AUATI
[]A\A]A^A_
AWAVA
AUATI
[]A\A]A^A_
AWAVI
AUATI
D$h1
Hc=iK'
t$HH
T$0H
D$0M
D$8I
L$hdH3
x[]A\A]A^A_
-1b'
AVAUATUI
D$X1
5t:'
t$8H
L$XdH3
`[]A\A]A^
AWAVM
AUATI
D$x1
t$XH
T$xdH3
[]A\A]A^A_
AVAUATUI
D$h1
t$HH
L$hdH3
p[]A\A]A^
ATUSH
D$X1
t$8H
L$XdH3
`[]A\
H9]xv6E1
AUATUSH
xRHc=
[]A\A]
AUATUSH
[]A\A]
AWAVAUATUSH
H9Kxw
H9D$@
D$(%
AZA[
%KT'
d$(M
M+,$
-AS'
-)R'
[]A\A]A^A_
H9D$@
D$(%
KxH9
ATUI
Rh]ZH
RhxKH
|$ H
|$(H
|$0H
|$8H
|$HH
UxH9U
t$XH
D$@H
t$`H
t$hH
dH3<%(
[]A\
W8I9
G0L9
t#9k
tw9k
t5;k
ATU1
D$0H
T$0H
H9D$0
[]A\
AWAVAUATUSH
[]A\A]A^A_
AUATUSH
D$x1
T$xRh
RhkNH
RhyNH
RhW\H
AQhUHH
AQhr
|$PD
l$0H
D$hH
L$pH
H9\$pw
D$xdH3
[]A\A]
AUATI
t$0L
L$01
[]A\A]
5 !'
ATUI
[]A\
[]A\
[]A\
AUATUS
([]A\A]
t	;h
t	;h
AWAVI
AUATA
Hc5I
-g%'
[]A\A]A^A_
uEL9
[]A\A]A^A_
Hc=U
5Q '
Hc=o
H9D$0
H9=q
[]A\
ATUH
t	H9=
w	[]A\
ATUH
uHH9
[]A\
[]A\
ATUS
D$(1
|$(dH3<%(
0[]A\
AUATI
D$(1
L$(dH3
8[]A\A]
dH34%(
AWAVAUATUSH
[]A\A]A^A_
AUATI
[]A\A]
=]	'
=9	'
[]A\
AUATA
[]A\A]
AUATUS@
[]A\A]
[]A\A]
[]A\A]
[]A\A]
[]A\A]
D$(1
L$(dH3
tfx/
tJATI
t'H9k
[]A\
AUATUSH
t$(H
T$0H
L$8H
D$ L
D$@L
D$ H
$Lc(J
D$ H
X[]A\A]
AUATI
[]A\A]
AWAVAUATI
[]A\A]A^A_
AVAUI
ATUI
[]A\A]A^
AWAVI
AUATI
USHc
[]A\A]A^A_
AWAVI
AUATM
USHc
[]A\A]A^A_
AWAVI
AUATM
USHc
Hcl$
HcT$
[]A\A]A^A_
AWAVI
AUATM
USHc
L$XD
Lcd$
Lct$
HcT$XH
t$PJ
[]A\A]A^A_
AUATUSH
t$(H
T$0H
L$8H
D$ L
D$@L
D$ H
X[]A\A]
D$ H
AWAVI
AUAT1
([]A\A]A^A_
<'tTA
$<\tW<"u
3v;H
P$L9
ATUSH
[]A\
AQI)
Yw61
[]A\
AWAVAUATI
D$(1
t$ H
D$ A
<[tE<;t	<#uQ
D$ H
D$(dH3
8[]A\A]A^A_
AUATI
[]A\A]
[]A\A]
ATUSH
[]A\
t7;k
AWAVM
AUATI
$<,t
[]A\A]A^A_
trH	
AWAVAUATUSH
$<,t
[]A\A]A^A_
AUAT
[]A\A]
D$x1
T$xdH3
AUATUS1
 vTH
[]A\A]
AWAVAUATA
t8L9
t3Hc5
t'HcC
C8I9
tEL93
ExHc
t=USH
AWAVE
AUATI
.u)H
D$`D
Hc5"
[]A\A]A^A_
T$hI
[]A\A]A^A_
ATUI
[]A\
ATUI
[]A\
[]A\
AUAT
D$x1
RhW\H
|$ 1
|$XE1
d$`M
$<;t
\$hH
D$(H
|$@H
D$0H
D$8H
|$HH
|$PH
|$ H
|$@H
|$HH
|$PH
|$XH
|$`H
|$hH
|$pH
t$xdH34%(
[]A\A]
ATUI
t0f.
[]A\
ATUI
t7f.
[]A\
tvUSH
tvUSH
tvUSH
C@H)(H
tvUSH
t}USH
C@H9(|
H9k8|
C@H;(}
AWAVAUATUSH
[]A\A]A^A_
D$0H
D$(AZA[
d$PE1
AXAY
AZA[~
AXAY~
AZA[
AXAY
AZA[
AXAY
AZA[
AXAY
AZA[
AXAY
d$PH
C(E1
|$@L
t$HL
l$8f
D$pPh
D$xPh
\$ H
|$(H
|$@H
|$8H
|$HH
D$0H
|$8H
|$@H
Hc5@
ATUI
[]A\
[]A\
[]A\
AVAUATUI
D$81
D$ H
H9p H
AUATI
USHc
U H9
w>L)
[]A\A]
E@L)
}qAUATI
USHc
} I9
[]A\A]
ATUSH
M H9
[]A\
ATUSH
M H9
[]A\
ATUSH
M H9
[]A\
ATUSH
M H9
[]A\
ATUSH
M H9
D(#H
[]A\
ATUSH
M H9
fD)#H
[]A\
ATUSH
M H9
D)#H
[]A\
ATUSH
M H9
L)#H
[]A\
AWAVA
AUATUSH
L;u(H
[]A\A]A^A_
t$Hc
AWAV1
AUATI
[]A\A]A^A_
AUAT1
USHc
[]A\A]
AVAU1
ATUI
[]A\A]A^
AUATI
D$81
T$@RhY5H
T$HRhSaH
T$PRh
T$XRhSKH
T$`Rh
\$(H
l$0H
|$ H
|$(H
|$0H
L$8dH3
H[]A\A]
ATUI
[]A\
AWAVAUATUSH
A Santa lives evil at NASA
D$(H
D$ H
8[]A\A]A^A_
D$ D
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVA
AUATM
D$81
D$ A
D$ H
L$8dH3
H[]A\A]A^A_
T$(H
t$ E1
D$(H
$tiH
t$(H
|$ H
T$0H;T$(wNH
|$ H
D$ H
T$0H
Hi==
AVAUATUHc
[]A\A]A^1
[]A\A]A^H
AWAVI
AUATUSH
[]A\A]A^A_
AUATI
]A\A]
AUATA
]A\A]
AUATI
[]A\A]
ATUI
[]A\
[]A\
[]A\
AUATI
USHi
5t}&
5d}&
[]A\A]
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATUSH
8;t%
]A\A]A^A_
[]A\A]A^A_
AWAVI
AUAT
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATUSH
8&t%
]A\A]A^A_
[]A\A]A^A_
ATUI
H;j r
[]A\
[]A\
AUATI
[]A\A]
[]A\A]
[]A\A]
AUATI
[]A\A]
4$t?H
[]A\A]
Hc=1d&
AUATI
[]A\A]
[]A\A]
ufHc
~JHc
x?Hi
5sk&
tcSH
=#l&
txUSH
dH34%(
=n^&
=*h&
>@t7H
H9D$
AUAT1
0XZt7L
=iA&
ATU1
P`Hc
H;D$
t'US
t'US
AWAVH
AUAT
[]A\A]A^A_
t+USH
=QG&
=;E&
t+SH
ATUH
[]A\
ATUH
=[]A\
[]A\
AUATH
[]A\A]
AUATI
T$HI
t$@H
[]A\A]
AUAT
}lHc
|(@H9
[]A\A]
| @H9
x@H9
toHc
AUATI
]A\A]A
AUATUSH
58J&
~af.
AXAYH
D9-SH&
[]A\A]
AUATI
[]A\A]
:t[I
AUATI
--8&
[]A\A]
=r)&
5=>&
=R&&
x_u1
AWAVHc
AUATUSH
t#f.
[]A\A]A^A_
AUATUSH
D$(1
=d:&
~'Hc
A[A\
}>Hc
D$(dH3
8[]A\A]
5$7&
~#Hc
5w6&
AXAY
=>4&
="3&
5)6&
AWAVAUATUSH
D9%u@&
<@Ic
=_?&
<@Ic
[]A\A]A^A_
AUATI
[]A\A]
ATUI
[]A\
AUAT
t#f.
[]A\A]
AUATUSH
=A*&
t#f.
=`)&
=p(&
5o%&
=24&
=O%&
=V$&
=	%&
5.!&
=Y#&
D9%g"&
5p/&
[]A\A]
AWAVA
AUATI
|$0dH
t$01
t6f.
[]A\A]A^A_
D$ H
t4f.
t6f.
L;<$H
ATUS
~7Hc
ATUSH
D$(1
AVAUI
h []A\A]A^
AUAT1
HcT$
HcD$
[]A\A]
D;l$
[]A\
AVAUATUSH
[]A\A]A^
AVAUATUSH
[]A\A]A^
AUATUSH
[]A\A]
[]A\A]
[]A\A]
AUATUSH
[]A\A]
]A\A]
AWAVE
AUATI
<$tHA
$H9D$
([]A\B
A]A^A_
[]A\A]A^A_
D8	H
$H9D$
HTTP
AVAUI
ATUA
[]A\A]A^
]A\A]A^
[]A\
AUATI
[]A\A]
AUATI
]A\A]
[]A\A]
[]A\A]
[]A\
ATUI
[]A\
[]A\
AUATE1
t=I9
_tA@
[]A\A]
AWAVH
AUATI
[]A\A]A^A_
T$@H
T$HH
D$PH
D$Xf
AWAV1
AUATI
L$x1
|$(1
T$0f
L$2f
t$4f
t$(D
L$@H
L$PH
L$8H
t$(D
L$HH
D$(D
L9,$t$
L9,$u
|$XL
\$ L
\$XE1
\$XH
|$X1
HTTP
L$(E1
fD9h
L$xdH3
[]A\A]A^A_
t$XH
D$XH
l$(L
\$(M
D$6H
D$XPH
D$DPH
D$`PL
L$RL
D$`H
L$PH
L$8H
D$(H
t$(H
t$XH
D$XH
AWAVAUATI
([]A\A]A^A_
AWAVAUATI
L$ H
u:fA
[]A\A]A^A_
[]A\A]A^A_
t$ H
D$(L)
ATUI
[]A\
AUATI
dH3<%(
[]A\A]
AWAVAUATI
<$H)
[]A\A]A^A_
[]A\A]A^A_
4/L)
AVAUI
ATUI
[]A\A]A^
[]A\A]A^
ATUSH
[]A\
AWAVAUATI
:tIH
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
tDSH
Hc=_
AUATI
[]A\A]
[]A\A]
ATUH
AWAVAUATUSH
d$(M
[]A\A]A^A_
ATUI
uzHc=r
+T$ H
[]A\
ATUE1
jphS
ZYu1H
[]A\
ATUI
[]A\
AVAUI
ATUI
]A\A]A^
]A\A]A^
AVAUI
ATUA
[]A\A]A^
AUATI
[]A\A]
AUATUSH
|$ 1
|$ H
|$ 1
[]A\A]
PAPE1
AWAVAUATUSH
<$Ic
<$tCH
[]A\A]A^A_
Ic2A
4$Hc
[]A\
AUATI
[]A\A]
AUATI
[]A\A]
[]A\A]
twUSH
kht.H
khH)
khH)
ATUH
[]A\
[]A\
AUATUSH
[]A\A]
AUATI
[]A\A]
[]A\A]
ATUI
[]A\
AWAVH
AUATUSL
T$(1
L$(dH3
8[]A\A]A^A_
H;\$
]tgH
L$&A
T$&L
L$&H
AUATI
H+C0I)
[]A\A]
[]A\A]
AVAUI
ATUE1
H+C0I)
]A\A]A^
]A\A]A^
AVAUI
ATUE1
H+C0I)
]A\A]A^
]A\A]A^
AVAUI
ATUE1
H+C0I)
]A\A]A^
]A\A]A^
AVAUI
ATUE1
H+C0I)
]A\A]A^
]A\A]A^
AVAUE1
ATUI
H+C0)
 []A\A]A^
AUATI
H+C0I)
[]A\A]
AVAUI
ATUE1
H+C0I)
]A\A]A^
]A\A]A^
AVAUI
ATUE1
H+C0I)
]A\A]A^
]A\A]A^
AWAVAUATUSH
D$(1
L$(dH3
8[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
FHSL
ATUA
[]A\
[]A\
ATUA
[]A\
[]A\
ATUA
[]A\
[]A\
ATUA
[]A\
[]A\
ATUA
[]A\
Do nine men interpret Nine men I nod
[]A\
ATUA
Beeb
[]A\
[]A\
ATUA
[]A\
[]A\
ATUA
[]A\
[]A\
ATUA
[]A\
[]A\
AVAUA
ATUSH
]A\A]A^
]A\A]A^
ATUA
[]A\
[]A\
AWAVAUATUSH
[]A\A]A^A_
RAVH
AWAT1
AUATA
[]A\A]
[]A\A]
AUATA
[]A\A]
[]A\A]
AVAUI
ATUI
4$A96w
[]A\A]A^
ATUH
[]A\
AWAVAUATUSH
[]A\A]A^A_
tXHc
=To%
=Ho%
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
-`k%
AUATUSH
Hc=9j%
Hc=%j%
C Hc=
[]A\A]
AUATI
[]A\A]
[]A\A]
ATUI
[]A\
ATUI
[]A\
[]A\
[]A\
AYAZH
AYAZH
AWAVAUATUSH
|$`I
|$`L
[]A\A]A^A_
D$pH
AWAVAUATI
[]A\A]A^A_
ATUSH
5be%
[]A\
SDLc
=md%
sHE1
ATUS
[]A\
dH34%(
tiAUATI
[]A\A]
AWAVI
AUATI
=5^%
%7_%
d$(H
[]A\A]A^A_
([]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
([]A\A]A^A_
AVAUD
ATUI
YsEf.
]A\A]A^
ATUI
D$h1
L$hdH3
[]A\
ATUI
D$h1
L$hdH3
[]A\
AVAUI
ATUI
D$h1
L$hdH3
[]A\A]A^
AVAUI
ATUH
[]A\A]A^
[]A\A]A^
[]A\A]A^
ATUH
 []A\
AWAV1
AUATI
=PR%
='R%
D$ H
[]A\A]A^A_
=iQ%
AUATE1
[]A\A]
[]A\A]
AVAUI
ATUA
4$fE
[]A\A]A^
t$ fE
l$([]A\A]A^
T$0I
T$8I
T$@I
T$HA
[]A\A]A^
u=fA
t$xfE
ATUI
[]A\
[]A\
ATUH
[]A\
=w<%
;xXu
9xXt
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
t<H9k
fD9c
[]A\A]A^A_
AUATUSH
D$(1
D$ H
D$ H
L$(dH3
8[]A\A]
AVAUE1
ATUSH
[]A\A]A^
HcK,
AUATH
l$ I
[]A\A]
ATUH
D$\[]A\
ATUH
[]A\
ATUH
D$ []A\
AUATI
[]A\A]H
AWAVI
AUATL
=r;%
[]A\A]A^A_
AUATH
[]A\A]L
AVAUI
ATUI
3[]A\A]A^
]A\A]A^
AWAVAUATUSH
=&7%
D$ E
=^6%
D$4H
[]A\A]A^A_
t$PH
D$(H
A]A^M
d$(M
t$ H
T$8H
Hct$8H
T$<H
T$8H
H9Spt
uPI9
uKI;mXuEA
M9uPu I9mXu
D;{\}{
H;Sp
Y^t\M
|$@1
|$ H
T$@H
L$hH
C,9D$lt0H
H9D$Pu
|$(H
L$hL
D$(H
T$`H
AZA[
ATUI
[]A\
[]A\
=R(%
-C&%
;E,u
ATUI
[]A\
ATUI
[]A\
AVAUATUI
4$E1
[]A\A]A^
AWAVA
AUATL
Degas are we not drawn onward no In union drawn onward to new eras aged
[]A\A]A^A_
core/utils.c
%s: %s [%s line %d]
open("%s"): %s [%s line %d]
read error %s
*** worker %d suspended ***
*** worker %d resumed ***
fcntl()
worker
UWSGI_APPID
sigaction()
/bin/sh
mlockall()
&;`'"|*?~<>^()[]{}$\
/tmp
TMPDIR
/uwsgiXXXXXX
invalid elf file: %s
HTTP/1.0 200 OK
Connection: close
_plugin
/dev/null
uwsgi_set_cgroup()/mkdir()
uwsgi_set_cgroup()/chmod()
/tasks
could not set cgroup
invalid cgroup-opt syntax
set %s to %s
cap_init()
cap_set_proc()
malloc()
[uwsgi-KSM] /proc/self/maps
%llx-%llx %*s
UWSGI_
UWSGI_RELOADS=
UWSGI_VASSALS_DIR=
UWSGI_EMPEROR_FD=
UWSGI_BROODLORD_NUM=
UWSGI_EMPEROR_FD_CONFIG=
UWSGI_EMPEROR_PROXY=
UWSGI_JAIL_PID=
UWSGI_ORIGINAL_PROC_NAME=
/proc/self/exe
pthread_create()
%d entry found
setting capability %s [%d]
Content-Length
Content-Type
getcwd()
execvp()
unable to find user %s
unable to find group %s
writing pidfile to %s
could not write pidfile.
mapping worker %d to CPUs:
sched_setaffinity()
[uwsgi-envdir] opendir()
[uwsgi-envdir] stat()
[uwsgi-envdir] unsetenv
[uwsgi-envdir] setenv
uwsgi_setns()/uwsgi_connect()
uwsgi-setns
uwsgi_setns()/setns()
/../
%s mounted
%s found
unshare()
uwsgi_as_root()/setuid(0)
mounting "%s" (post-jail)...
running "%s" (post-jail)...
re-fork()ing...
chroot() to %s
chroot()
pivot_root()/chdir()
pivot_root()
as root
mounting "%s" (as root)...
running "%s" (as root)...
group %s not found.
user %s not found.
fchown()
setgroups()
set additional group %d (%s)
set additional group %d
as user
unable to call function "%s"
%s ready
dac_override
dac_read_search
fowner
fsetid
kill
setgid
setuid
setpcap
linux_immutable
net_bind_service
net_broadcast
net_admin
net_raw
ipc_lock
ipc_owner
sys_module
sys_rawio
sys_chroot
sys_ptrace
sys_pacct
sys_admin
sys_boot
sys_nice
sys_resource
sys_time
sys_tty_config
mknod
lease
audit_write
audit_control
setfcap
mac_override
mac_admin
wake_alarm
parent
sysvsem
!!! unable to set user harakiri without the master process !!!
unable to add UWSGI_APPID to the uwsgi buffer, consider increasing it
unable to stat() %s, events will be triggered as soon as the file is created
setting request body buffering size to %lu bytes
Access-Control-Allow-Origin: *
Content-Type: application/json
using Linux cgroup %s with mode %o
created Linux cgroup %s with mode %o
assigned process %d to cgroup %s
could not set cgroup option %s to %s
!!! tried memory allocation of %llu bytes !!!
[uwsgi-KSM] unable to read /proc/self/maps data
[uwsgi-KSM] unable to share pages
announcing my loyalty to the Emperor...
building mime-types dictionary from file %s...
[security] unknown capability: %s
realpath() of %s failed: %s [%s line %d]
need a bigger buffer (%lu bytes) for getcwd(). doing reallocation.
unable to allocate %llu bytes (%lluMB)
uwsgi_run_command_and_wait()/waitpid()
uwsgi_run_command_putenv_and_wait()/putenv()
unknown namespace subsystem: %s
FATAL ERROR: you cannot load more than %d apps in a worker
unable to initialize cpu affinity !!!
create_msg_pipe()/socketpair()
create_msg_pipe()/setsockopt()
[uwsgi-envdir] error stating %s
[uwsgi-envdir] unable to unset %s
[uwsgi-envdir] unable to open %s
[uwsgi-envdir] unable to set %s
your system misses setns() syscall !!!
joining namespaces from %s ...
waiting for %s (max %d seconds) ...
%s unavailable after %d seconds
uWSGI running as root, you can use --uid/--gid/--chroot options
[linux-namespace] applied unshare() mask: %d
un-mounting "%s" (post-jail)...
command "%s" exited with non-zero code: %d
*** Warning, on linux system you have to bind-mount the /proc fs in your chroot to get memory debug/report.
invalid pivot_root syntax, new_root and put_old must be separated by a space
waiting for interface %s (max %d seconds) ...
interface %s unavailable after %d seconds
interface %s found with index %u
un-mounting "%s" (as root)...
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
running "%s" (as uid: %d gid: %d) ...
cannot chroot() as non-root user
cannot setgid() as non-root user
cannot setuid() as non-root user
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM>MMM?456789:;<=MMMMMMM
MMMMMM
 !"#$%&'()*+,-./0123MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM
CHTTP_SEC_WEBSOCKET_PROTOCOL
HTTP_X_FORWARDED_FOR
HTTP_X_FORWARDED_SSL
HTTP_ACCEPT_ENCODING
DOCUMENT_ROOT
HTTPS
HTTP_IF_MODIFIED_SINCE
HTTP_SEC_WEBSOCKET_KEY
HTTP_X_FORWARDED_PROTO
HTTP_AUTHORIZATION
UWSGI_TOUCH_RELOAD
SERVER_PROTOCOL
HTTP_USER_AGENT
UWSGI_CACHE_GET
REQUEST_URI
REMOTE_USER
SERVER_NAME
REMOTE_ADDR
HTTP_COOKIE
UWSGI_CHDIR
HTTP_ORIGIN
PATH_INFO
HTTP_HOST
REQUEST_METHOD
CONTENT_LENGTH
UWSGI_POSTFILE
core/protocol.c
UWSGI_CALLABLE
QUERY_STRING
CONTENT_TYPE
HTTP_REFERER
UWSGI_SCHEME
UWSGI_SCRIPT
UWSGI_MODULE
UWSGI_PYHOME
UWSGI_SETENV
HTTP_RANGE
bytes
UWSGI_FILE
UWSGI_HOME
Invalid (too big) CONTENT_LENGTH. skip.
invalid uwsgi array. skip this var.
invalid uwsgi array. skip this request.
uwsgi key cannot be null. skip this request.
max vec size reached. skip this header.
max vec size reached. skip this var.
invalid uwsgi request (current strsize: %d). skip.
uwsgi key cannot be null. skip this var.
not enough buffer space to add %.*s variable, consider increasing it with the --buffer-size option
not enough buffer space to transform the PATH_INFO variable, consider increasing it with the --buffer-size option
max vec size reached for PATH_INFO + index. skip this request.
core/socket.c
SO_REUSEADDR setsockopt()
SO_SNDBUF setsockopt()
SO_RCVBUF setsockopt()
/proc/sys/net/core/somaxconn
0.0.0.0:
unable to find protocol %s
0.0.0.0
invalid socket name
listen()
invalid multicast address
255.255.255.255
setsockopt
connect_to_udp()/socket()
getifaddrs()
getsockopt()
connect_to_tcp()/socket()
fd://
ipv6a = %s
[::]:
zerg: accept()
uwsgi-zerg
[::]
IP_FREEBIND setsockopt()
SO_REUSEPORT setsockopt()
TCP_FASTOPEN setsockopt()
TCP_FASTOPEN enabled on %s
SO_SNDTIMEO setsockopt()
TCP_DEFER_ACCEPT setsockopt()
SO_KEEPALIVE setsockopt()
getsockname()
invalid worker num: %d
inherit fd0: chmod()
puwsgi
suwsgi
https
fastcgi
fastcgi-nph
scgi
scgi-nph
Listen queue size is greater than the system max net.core.somaxconn (%li).
error removing unix socket, unlink()
setting abstract socket mode (warning: only Linux supports this)
chmod() socket to 666 for lazy and brave users
[uwsgi-mcast] joining multicast group: %s:%d
invalid/empty uwsgi socket name
unable to find a valid socket address
[uwsgi-autoip] found %s for %s on interface %s
invalid UNIX socket address: %s
uwsgi zerg socket %d attached to UNIX address %s fd %d
uwsgi socket %d attached to UNIX address %s fd %d
uwsgi socket %d inherited UNIX address %s fd %d
uwsgi zerg socket %d attached to INET address %s fd %d
uwsgi socket %d attached to INET address %s fd %d
uwsgi socket %d inherited INET address %s fd %d
uwsgi zerg socket %d attached to INET6 address %s fd %d
uwsgi socket %d attached to INET6 address %s fd %d
uwsgi socket %d inherited INET6 address %s fd %d
probably another instance of uWSGI is running on the same address (%s).
unable to use shared socket %d
uwsgi shared socket %d bound to UNIX address %s fd %d
uwsgi shared socket %d bound to TCP6 address %s fd %d
uwsgi shared socket %d bound to TCP address %s fd %d
unable to create shared socket on: %s
uwsgi shared socket %d inherited TCP address %s fd %d
uwsgi shared socket %d inherited UNIX address %s fd %d
uwsgi socket %d mapped to shared socket %d (%s) fd %d
unable to find shared socket %d
invalid socket mapping, must be socket:worker[,worker...]
mapped socket %d (%s) to worker %d
uwsgi socket %d bound to UNIX address %s fd %d
uwsgi socket %d bound to TCP6 address %s fd %d
uwsgi socket %d bound to TCP address %s fd %d
unable to create server socket on: %s
uwsgi socket %d inherited UNIX address %s fd 0
chmod() fd0 socket to 666 for lazy and brave users
uwsgi socket %d inherited INET address %s fd 0
WARNING: unable to remap stdin, /dev/null not available
uwsgi socket %d bound to TCP6 address %s (port auto-assigned) fd %d
uwsgi socket %d bound to TCP address %s (port auto-assigned) fd %d
uwsgi_tcp_nodelay()/setsockopt()
uwsgi_socket_passcred()/setsockopt()
%d/%b/%Y:%H:%M:%S %z
core/logging.c
invalid udp address
uwsgi_log_do_rotate()/dup2()
[%d] %s reopened.
/proc/self/stat
unable to find logger %s
var.
metric.
log encoder "%s" not found
[log-encoder] registered %s
msgnl
unix
strftime:
proto
uagent
rsize
tmsecs
tmicros
ltime
ctime
epoch
switches
core
vszM
rssM
pktsize
werr
rerr
ioerr
compress
 via sendfile() 
 via route() 
 via offload() 
fix_logpipe_buf()/getsockopt()
fix_logpipe_buf()/setsockopt()
create_logpipe()/socketpair()
logsize: %llu, triggering rotation to %s...
unable to rotate log: rename()
[%d] logsize: %llu, triggering log-reopen...
uwsgi_check_logrotate()/lseek()
{address space usage: %lld bytes/%lluMB} {rss usage: %llu bytes/%lluMB} 
[pid: %d|app: %d|req: %d/%llu] %.*s (%.*s) {%d vars in %d bytes} [%.*s] %.*s %.*s => generated %llu bytes in %llu %s%s(%.*s %d) %d headers in %llu bytes (%d switches on core %d)
[pid: %d|app: %d|req: %d/%llu] 0.0.0.0 () {%d vars in %d bytes} [%.*s] - - => generated %llu bytes in %llu %s%s(- %d) %d headers in %llu bytes (%d switches on core %d)
%*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %*s %llu %lld
warning: invalid record in /proc/self/stat
falling back to non-threaded logger...
[log-req-encoder] registered %s
*** (SIGTSTP received) resuming workers ***
*** PAUSE (press start to resume, if you do not have a joypad send SIGTSTP) ***
uwsgi_master_manage_udp()/recvfrom()
uwsgi_master_manage_udp()/inet_ntop()
worker %d (pid: %d) is taking too much time to die...NO MERCY !!!
mule %d (pid: %d) is taking too much time to die...NO MERCY !!!
[broodlord] instance not governed by an Emperor !!!
asking Emperor for reinforcements (overload: %llu)...
*** uWSGI listen queue of socket "%s" (fd: %d) full !!! (%llu/%llu) ***
listen queue of socket "%s" (fd: %d) full !!! (%llu/%llu)
asking Emperor for reinforcements (backlog: %llu)...
notification socket enabled on %s (fd: %d)
*** Zerg server enabled on %s ***
*** Stats server enabled on %s fd: %d ***
!!! unable to spawn stats pusher thread !!!
unable to bind to udp socket. SNMP services will be disabled.
cheap mode enabled: waiting for socket connection...
invalid signal timer syntax, must be: <signal> <seconds>
invalid redblack signal timer syntax, must be: <signal> <seconds>
unable to find requested cheaper algorithm, falling back to spare
something horrible happened...
*** %s has been touched... grace them all !!! ***
*** %s has been touched... workers reload !!! ***
*** %s has been touched... chain reload !!! ***
*** %s has been touched... but chain reload is already running ***
[uwsgi-touch-exec] running %s
[uwsgi-touch-signal] raising %u
*** %s has been touched... reloading daemon "%s" (pid: %d) !!! ***
spooler (pid: %d) annihilated
mule %d (pid: %d) annihilated
gateway %d (%s, pid: %d) annihilated
subprocess %d exited with code %d
subprocess %d exited by signal %d
worker %d buried after %d seconds
OOPS ! failed loading app in worker %d (pid %d) :( trying again...
need-app requested, destroying the instance...
...restoring worker %d (pid: %d)...
... monitored exception detected, respawning worker %d (pid: %d)...
!!! inconsistent state reported by worker %d (pid: %d) !!!
worker %d asked for cheap mode (pid: %d)...
DAMN ! worker %d (pid: %d) died, killed by signal %d :( trying respawn ...
DAMN ! worker %d (pid: %d) died :( trying respawn ...
worker %d killed successfully (pid: %d)
DAMN ! worker %d (pid: %d) MISTERIOUSLY killed by signal %d :( trying respawn ...
worker respawning too fast !!! i have to sleep a bit (%d seconds)...
chain reload already running...
core/master.c
sigprocmask()
[udp:%s:%d] %.*s
vassal_sos()/write()
uWSGI master
[emperor-proxy] chmod()
[setns-socket] chmod()
UDP server enabled.
msync()
[uwsgi-daemon/touch] kill()
subprocess %d stopped
uWSGI worker %d cheaped.
chain reload starting...
killing worker %d (pid: %d)
waiting for Emperor death...
binary reloading uWSGI...
fork()'ing uWSGI...
core/master_utils.c
uwsgi_reload()/write()
chdir() to %s
uwsgi_reload()/chdir()
running %s
default
2.0.12-debian
listen_queue_errors
signal_queue
daemons
caches
hash
hashsize
keysize
max_items
blocks
hits
miss
last_modified_at
max_queue
shared
can_offload
harakiri_count
pause
busy
running_time
last_spawn
respawn_count
avg_rt
startup_time
static_requests
routed_requests
offloaded_requests
write_errors
in_request
spoolers
running
crons
minute
hour
month
week
command
unique
started_at
legions
checksum
i_am_the_lord
lord_valor
lord_uuid
nodes
members
last_seen
graceful
brutal
uwsgi_refork_master()/fork()
going cheap...
uwsgi_go_cheap()/waitpid()
/proc/self/ns
/proc/self/ns/
%s !!! worker %d status !!!
/proc/%d/syscall
HARAKIRI: -- syscall> %s
/proc/%d/wchan
HARAKIRI: -- wchan> %s
HARAKIRI
added %s reload monitor for fd %d (read size: %llu)
killing the spooler with pid %d
gateway "%s %d" has been buried (pid: %d)
The Emperor has been buried (pid: %d)
uWSGI: GAME OVER (insert coin)
closing all non-uwsgi socket fds > 2 (max_fd = %d)...
found fd %d mapped to socket %d (%s)
found fd %d mapped to shared socket %d (%s)
Respawned uWSGI worker %d (new pid: %d)
spawned uWSGI worker %d (pid: %d, cores: %d)
cheaper hard rss memory limit exceeded, cheap one of %d workers
BUG! cheaper algo returned %d but it cannot spawn any worker at this time!
uwsgi_master_generate_stats() -> ioctl()
new master copy spawned with pid %d
uwsgi_setns_preopen()/opendir()
uwsgi_master_manage_setns()/accept()
uwsgi_master_manage_setns()/opendir()
uwsgi_master_manage_setns()/sendmsg()
%s !!! end of worker %d status !!!
%s [core %d] %.*s - %.*s %.*s since %llu
*** HARAKIRI ON WORKER %d (pid: %d, try: %d) ***
vassal instance %s (last modified %lld) status %d loyal %d zerg %d
emperor_check_on_demand_socket()pipe()
uwsgi_emperor_spawn_vassal()/setuid(0)
uwsgi_emperor_spawn_vassal()/prctl()
unable to drop capability %lu
capabilities applied for vassal %s (pid: %d)
[emperor-tyrant] dropping privileges to %d %d for instance %s
[emperor] running vassal start-hook: %s %s
[emperor] %s start-hook returned %d
un-mounting "%s" (as-vassal)...
[emperor] trying to use %s as binary wrapper ...
[emperor] is the uwsgi binary in your system PATH ?
[emperor] trying to use %s as binary fallback ...
[uwsgi-emperor] write() header config
[uwsgi-emperor] write() config
emperor_notify_ready()/write()
[emperor] bringing back instance %s to on-demand mode
[emperor] maximum throttle level for vassal %s reached !!!
[emperor] unloyal bad behaving vassal found: %s throttling it...
[uwsgi-emperor] cleaning up blacklist ...
[emperor] running vassal stop-hook: %s %s
[emperor] %s stop-hook returned %d
[emperor] removed uwsgi instance %s
[emperor] stop the uwsgi instance %s
[emperor] *** RAGNAROK ALREADY EVOKED (mercyless in %d seconds)***
[emperor] *** RAGNAROK EVOKED ***
[emperor] curse the uwsgi instance %s (pid: %d)
[emperor] updated configuration for "on demand" instance %s
[emperor] reload the uwsgi instance %s
uwsgi_emperor_spawn_vassal()/fork()
mounting "%s" (as-emperor for vassal "%s" pid: %d uid: %d gid: %d)...
un-mounting "%s" (as-emperor for vassal "%s" pid: %d uid: %d gid: %d)...
running "%s" (as-emperor for vassal "%s" pid: %d uid: %d gid: %d)...
command "%s" exited with code: %d
[emperor] invalid vassal name: %s
[emperor-tyrant] invalid permissions for vassal %s
[uwsgi-emperor] %s -> "on demand" instance detected, waiting for connections on socket "%s" ...
!!! permissions of file %s changed. stopping the instance... !!!
!!! availability of file %s changed. stopping the instance... !!!
uwsgi_imperial_monitor_glob()/chdir()
uwsgi_imperial_monitor_glob()/glob()
*** starting uWSGI sub-Emperor ***
*** starting uWSGI Emperor ***
*** Emperor stats server enabled on %s fd: %d ***
[emperor] NO MERCY for vassal %s !!!
[emperor] vassal %s is now loyal
[emperor] going in broodlord mode: launching zergs for %s
[emperor] vassal %s is ready to accept requests
[emperor] vassal %s has been spawned
[emperor] vassal %s sent no heartbeat in last %d seconds, brutally respawning it...
The Emperor is governing %d vassals
--- MUTINY DETECTED !!! IMPALING VASSALS... ---
[uwsgi-emperor] %s -> back to "on demand" mode, waiting for connections on socket "%s" ...
[emperor] unrecognized vassal event on fd %d
uwsgi_check_emperor()/uwsgi_connect()
uwsgi_check_emperor()/setenv(UWSGI_EMPEROR_FD)
uwsgi_check_emperor()/setenv(UWSGI_EMPEROR_FD_CONFIG)
*** has_emperor mode detected (fd: %d) ***
[emperor-tyrant] !!! permissions of vassal %s changed. stopping the instance... !!!
[uwsgi-emperor] %s -> requested move to "on demand" mode for socket "%s" ...
[uwsgi-emperor] %s -> asked for leaving "on demand" mode for socket "%s" ...
received message %d from emperor
uwsgi_master_manage_emperor()/read()
lost connection with my emperor !!!
uwsgi_master_manage_emperor_proxy()/accept()
uwsgi_master_manage_emperor_proxy()/sendmsg()
.socket
core/emperor.c
--inherit
--xml
--ini
--yaml
--json
UWSGI_RELOADS
NOTIFY_SOCKET
UWSGI_EMPEROR_FD
UWSGI_BROODLORD_NUM
UWSGI_EMPEROR_FD_CONFIG
UWSGI_VASSAL_
unsetenv()
--include
--set
.xml
.ini
.yml
.yaml
.json
--config
exec://
emperor://
UWSGI_VASSALS_DIR
mounting "%s" (as-vassal)...
running "%s" (as-vassal)...
[emperor] binary path: %s
emperor_stop()/write()
emperor_respawn/write()
socketpair()
unable to mount %s
unable to umount %s
UWSGI_VASSAL_CONFIG=
UWSGI_VASSAL_PID=%d
UWSGI_VASSAL_UID=%d
UWSGI_VASSAL_GID=%d
emperor_add()/bind()
[emperor-tyrant]/lstat()
glob://
dir://
emperor_tyrant
throttle_level
vassals
born
last_mod
last_heartbeat
last_loyal
last_ready
last_accepting
first_run
last_run
cursed
on_demand
monitor
first_attempt
last_attempt
getrlimit()
[emperor] kill()
The Emperor is buried.
The Emperor is buried.
uWSGI Emperor
UWSGI_EMPEROR_PROXY
uwsgi-emperor
STATUS=
core/notify.c
[notify-socket] %.*s
uwsgi_notify_msg()/socket()
STATUS=uWSGI is ready
READY=1
uwsgi_notify_socket_manage()/read()
core/mule.c
mule_send_msg()
uwsgi_mule_handler/read()
uwsgi_mule_get_msg()/poll()
uWSGI mule %d
invalid mule id: %s
*** MULE MSG QUEUE IS FULL: buffer size %d bytes (you can tune it with --signal-bufsize) ***
uWSGI mule %d braying: my master died, i will follow him...
error managing signal %d on mule %d
*** mule %d received a %ld bytes message ***
spawned uWSGI mule %d (pid: %d)
invalid farm value (%s) must be in the form name:mule[,muleN].
created farm %d name: %s mules:%s
wlrc
sni_key
sni_crt
sni_ca
notify
sign
core/subscription.c
send_subscription()/socket()
send_subscription()/sendto()
unsubscribing from
subscribing to
[uwsgi-subscription for pid %d] %.*s => marking %.*s as failed (no announce received in %d seconds)
[uwsgi-subscription for pid %d] invalid (sniffed ?) packet sent for slot: %.*s node: %.*s unix_check: %lu
unable to load public key for %.*s
unable to initialize EVP context for %.*s
[uwsgi-subscription for pid %d] %.*s => new node: %.*s
[subscription ack] %.*s => new node: %.*s
[uwsgi-subscription for pid %d] new pool: %.*s (hash key: %d)
"%s":"%s"
"%s":"%s%llu"
"%s":"%.*s"
"%s":
"%s":%llu
"%s":%lld
core/stats.c
ending the stats pusher thread...
[uwsgi-stats-pusher] goodbye...
[uwsgi-stats-pusher] message received from master: %.*s
[uwsgi-stats-pusher] %s failed (%d), retry in %ds
[uwsgi-stats-pusher] %s failed and maximum number of retries was reached (%d)
[uwsgi-stats-pusher] retry succeeded for %s
unable to find "%s" stats_pusher
core/sendfile.c
uwsgi_sendfile_do()/seek()
uwsgi_sendfile_do()/read()
uwsgi_simple_sendfile()
uwsgi_simple_sendfile() TIMEOUT !!!
[DANGER] async queue is full !!!
ASYNC call without async mode !!!
the async loop engine requires async mode (--async <n>)
*** DANGER *** async mode without coroutine/greenthread engine loaded !!!
goodbye to uWSGI.
chain reloading complete
!!! Emperor died !!!
core/master_checks.c
chain is still waiting for worker %d...
chain next victim is worker %d
*** EVIL RELOAD ON WORKER %d ADDRESS SPACE: %lld (pid: %d) ***
*** EVIL RELOAD ON WORKER %d RSS: %lld (pid: %d) ***
worker %d lifetime reached, it was running for %llu second(s)
*** HARAKIRI ON GATEWAY %s %d (pid: %d) ***
*** HARAKIRI ON MULE %d HANDLING SIGNAL %d (pid: %d) ***
*** HARAKIRI ON MULE %d (pid: %d) ***
*** HARAKIRI ON THE SPOOLER (pid: %d) ***
OOOPS the spooler is no more...trying respawn...
OOOPS mule %d (pid: %d) crippled...trying respawn...
workers have been inactive for more than %d seconds (%llu-%llu)
uwsgi_master_check_idle()/waitpid()
[uwsgi-cron] command "%s" running with pid %d exited after %d second(s)
*** HARAKIRI ON CRON "%s" (pid: %d) ***
mountpoint %s failed, triggering detonation...
active master fifo is now %s
subscriptions re-enabled
subscriptions blocked
core/fifo.c
emperor_rescan()/kill()
uwsgi_master_fifo()/mkfifo()
uwsgi_master_fifo()/open()
uwsgi_master_fifo_manage()/read()
core/offload.c
u_offload_pipe_do() -> read()
u_offload_memory_do()
u_offload_sendfile_do()
uwsgi_offload_setup()/pipe()
transfer
memory
u_offload_pipe_do() -> write()
u_offload_transfer_do() -> write()
u_offload_transfer_do() -> read()/fd
u_offload_transfer_do() -> read()/s
u_offload_transfer_do() -> write()/s
u_offload_transfer_do() -> write()/fd
u_offload_sendfile_prepare()/fstat()
u_offload_transfer_prepare()/connect()
unable to find symbol %s
_start
_binary_
_end
core/io.c
lseek()
0 size binary data !!!
invalid http url
domain: %s
unable to resolve address %s
uwsgi_scheme_http()/connect()
GET 
uwsgi_scheme_http()/write()
 HTTP/1.0
Host: 
User-Agent: uWSGI on 
uwsgi_waitfd_event()/poll()
uwsgi_read_fd()/realloc()
fstat()
uwsgi_file_write_do()
writing "%s" to "%s" ...
uwsgi_add_safe_fd()/realloc()
section
callint
uwsgi_remap_fd()/dup2()
uwsgi_pass_cred()/sendmsg()
uwsgi_pass_cred2()/sendmsg()
uwsgi_recv_cred()/recvmsg()
uwsgi_recv_cred2()/recvmsg()
called symbol %s did not return a string
invalid binary data slot requested
requesting binary data slot %d
uwsgi_open_and_read()/realloc()
Not usable HTTP response: %cxx
unable to find section %s in %s
this is not a vassal instance
[uwsgi-vassal] error waiting for config header %s !!!
[uwsgi-vassal] error reading config header from %s !!!
[uwsgi-vassal] invalid config from %s
[uwsgi-vassal] error waiting for config %s !!!
[uwsgi-vassal] error reading config from %s !!!
not enough space for sockets data, consider increasing it
timeout while piping from %d to %d !!!
uwsgi_read_with_realloc()/realloc()
unable to write empty value for "%s"
unable to parse config file %s
unable to inject data in the config file
Expires
304 Not Modified
206 Partial Content
200 OK
Content-Encoding
X-Accel-Redirect
Last-Modified
X-Sendfile
HEAD
%s, %02d %s %4d %02d:%02d:%02d GMT
[uwsgi-fileserve] security error: %s is not under %.*s or a safe path
[uwsgi-websocket] "%.*s %.*s" (%.*s) no PONG received in %d seconds !!!
[uwsgi-websocket] "%.*s %.*s" (%.*s) BUG error in websocket parser
[uwsgi-websocket] "%.*s %.*s" (%.*s) invalid packet size received: %llu, max allowed: %llu
%s: %s [%s line %d] during %.*s %.*s (%.*s)
101 Web Socket Protocol Handshake
258EAFA5-E914-47DA-95CA-C5AB0DC85B11
core/websockets.c
uwsgi_websockets_recv_pkt()
%s %s [%s line %d] 
WebSocket
Upgrade
Connection
Sec-WebSocket-Origin
Sec-WebSocket-Protocol
Sec-WebSocket-Accept
priority
core/spooler.c
[spooler] realpath()
[spooler directory] access()
%s/%.*s
uwsgi_spool_request()/write()
spooler_manage_task()/read()
uwsgi_spoolfile_on_
scandir()
uWSGI spooler
[spooler] something horrible happened to the spooler. Better to kill it.
[uwsgi-spooler] args buffer is limited to 64k, use the 'body' for bigger values
[uwsgi-spooler] no spooler available
[uwsgi-spooler] unable to find spooler "%.*s"
[uwsgi-spooler] error generating spooler filename
%s/%.*s/uwsgi_spoolfile_on_%s_%d_%llu_%d_%llu_%llu
%s/uwsgi_spoolfile_on_%s_%d_%llu_%d_%llu_%llu
[spooler] unable to write header for %s
[spooler] unable to write args for %s
[spooler] unable to write body for %s
uwsgi_spooler_request()/futimes()
[spooler] written %lu bytes to file %s
uwsgi_spool_request()/unlink()
[spooler %s pid: %d] managing request %s ...
[spooler %s pid: %d] done with task %s after %lld seconds
[spooler %s pid: %d] maximum number of tasks reached (%d) recycling ...
unable to find the spooler function, have you loaded it into the spooler process ?
spawned the uWSGI spooler on dir %s with pid %d
core/snmp.c
SNMP server enabled on %s
SNMP agent enabled.
recvfrom()
*** warning the supplied SNMP community string will be truncated to 72 chars ***
unable to bind to udp socket. SNMP service will be disabled.
filename: "
line: 
function: "
text/code: "
custom: "
backtrace
class
500 Internal Server Error
text/plain
" (request plugin: "
", modifier1: 
Exception: 
-Not available-
Exception class: 
Exception message: 
Backtrace:
core/exceptions.c
[uwsgi-exception] error running the handler "%s" args: "%s"
uWSGI exceptions catcher for "
[uwsgi-exception-handler-error] uwsgi_exception_run_handlers()/writev()
unable to find exception handler: %s
unable to spawn exception handler thread
[strict-mode] unknown config directive: %s
uWSGI error: forbidden option "%s" (by blacklist)
uWSGI error: forbidden option "%s" (by whitelist)
you cannot use %s as a placeholder, it is already available as an option
!!! %s (pid: %d) exited with status %d !!!
!!! Fallback config to %s !!!
invalid resolve syntax, must be placeholder=domain
endfor
endif
end-if
end-for
core/config.c
%(_)
uwsgi_logic_opt_for_glob()
unable to resolve name %s
uwsgi_resolve_ip()
LISTEN_PID
LISTEN_FDS
UPSTART_EVENTS
UPSTART_FDS
UPSTART_JOB
zerg sockets attached
- SystemD socket activation detected -
- Upstart socket bridge detected (job: %s) -
unable to set "%s" clock
0700
core/init.c
UWSGI_ORIGINAL_PROC_NAME
uwsgi_
UWSGI_PLUGINS
getopt_long() error
uWSGI worker %d
*** daemonizing uWSGI ***
See Other
Temporary Redirect
Unauthorized
Bad Request
Request Timeout
Continue
Switching Protocols
Created
Accepted
Non-Authoritative Information
No Content
Reset Content
Multiple Choices
Use Proxy
Payment Required
Not Acceptable
Proxy Authentication Required
Conflict
Gone
Length Required
Precondition Failed
Request Entity Too Large
Request-URI Too Long
Unsupported Media Type
Expectation Failed
Not Implemented
Bad Gateway
Service Unavailable
Gateway Timeout
HTTP Version Not Supported
Bandwidth Limit Exceeded
[uwsgi] implicit plugin requested %s
unable to parse command line options
mapped %llu bytes (%llu KB) for %d cores
 *** WARNING: you have enabled harakiri without post buffering. Slow upload could be rejected on post-unbuffered webservers *** 
invalid cheaper value: must be lower than processes
warning: invalid cheaper-initial value (%d), must be equal or higher than cheaper (%d), using %d as initial number of workers
warning: invalid cheaper-initial value (%d), must be lower or equal than worker count (%d), using %d as initial number of workers
invalid min-worker-lifetime value (%d), must be lower than max-worker-lifetime (%d)
enabling cheaper-rss-limit-soft requires enabling also memory-report
enabling cheaper-rss-limit-hard requires setting also cheaper-rss-limit-soft
cheaper-rss-limit-hard value must be higher than cheaper-rss-limit-soft value
Requested Range Not Satisfiable
core/buffer.c
uwsgi_buffer_fix()
uwsgi_buffer_ensure()
uwsgi_buffer_append()
uwsgi_buffer_send()
uwsgi_buffer_append_ipv4() -> inet_ntop()
timeout while sending buffer !!!
core/reader.c
uwsgi_simple_wait_read_hook()/poll()
uwsgi_simple_wait_read_hook2()/poll()
uwsgi_request_body_seek()/fseek()
uwsgi_request_body_readline()/malloc()
consume_body_for_readline()/realloc()
[uwsgi-warning] you are using readline() on request body allocating over than %llu MB, that is really bad and can be avoided...
consume_body_for_readline()/fread()
[uwsgi-body-read] Error reading %llu bytes. Content-Length: %llu consumed: %llu left: %llu message: %s
[uwsgi-body-read] Timeout reading %llu bytes. Content-Length: %llu consumed: %llu left: %llu
uwsgi_request_body_read()/realloc()
[uwsgi-warning] you are using read() on request body allocating over than %llu MB, that is really bad and can be avoided...
uwsgi_request_body_read()/malloc()
uwsgi_request_body_read()/fread()
[uwsgi-body-read] Error reading %llu bytes. Content-Length: %llu consumed: %llu left: %llu message: Client closed connection
uwsgi_postbuffer_do_in_disk()/uwsgi_tmpfile()
invalid X-Progress-ID value: must be a UUID
uwsgi_postbuffer_do_in_disk()/fwrite()
 Unknown
bytes %llu-%llu/%llu
Content-Range
core/writer.c
uwsgi_response_sendfile_do()
uwsgi_simple_write()
uwsgi_response_write_headers_do()
uwsgi_response_write_headers_do() TIMEOUT !!!
uwsgi_response_writev_headers_and_body_do()
uwsgi_response_writev_headers_and_body_do() TIMEOUT !!!
uwsgi_response_write_body_do()
uwsgi_response_write_body_do() TIMEOUT !!!
uwsgi_response_writev_body_do()
uwsgi_response_writev_body_do() TIMEOUT !!!
uwsgi_response_sendfile_do()/fstat()
uwsgi_response_sendfile_do()/dup()
uwsgi_response_sendfile_do() TIMEOUT !!!
uwsgi_simple_wait_write_hook()/poll()
uwsgi_simple_write() TIMEOUT !!!
[uwsgi-alarm] invalid mule_id (%d mules available), fallback to 0
[uwsgi-alarm-error] uwsgi_alarm_trigger()/writev()
[uwsgi-alarm-fd] i will stop monitoring fd %d
ALARM: %s %.*s
ALARM: %.*s
ALARM: %s %.*s
ALARM: %.*s
unable to spawn alarm thread
core/alarm.c
[uwsgi-alarm-fd]/read()
[uwsgi-alarm
unable to find alarm "%s"
[uwsgi-alarm] added fd %d
invalid alarm syntax: %s
invalid alarm: %s
invalid alarm-fd syntax: %s
invalid log-alarm syntax: %s
invalid log-alarm: %s
%d %d %d %d %d %n
invalid cron syntax
core/cron.c
localtime()
invalid %s syntax, must be prefixed with a legion name
unable to parse cron definition: %s
[uwsgi-cron] invalid command in cron definition: %s
you can register max %d cron !!!
uwsgi_manage_command_cron()/localtime()
[uwsgi-cron] running "%s" (pid %d)
unable to find function "%s"
[rpc result from "%s"] %.*s
core/hooks.c
uwsgi_hook_append()/write()
uwsgi_hook_write()/write()
uwsgi_hook_appendn()/write()
uwsgi_hook_writen()/write()
uwsgi_hook_chown2()/chown)
unable to find uid %s
unable to find gid %s
uwsgi_hook_chown()/chown)
invalid hook chmod mask: %s
uwsgi_hook_chmod()/chmod()
uwsgi_hook_unlink()/unlink()
uwsgi_hook_sticky()/stat()
uwsgi_hook_sticky()/chmod()
uwsgi_hook_putenv()
uwsgi_hook_mkdir()
uwsgi_hook_chdir()
mkdir
putenv
chown2
sticky
safeexec
create
creat
writen
appendn
writefifo
unlink
umount
callret
callintret
retryrpc
wait_for_fs
wait_for_file
wait_for_dir
wait_for_socket
unix_signal
hook action not found: %s
uwsgi_hooks_run()/kill()
running "%s" (%s)...
invalid unix_signal syntax, must be <signum> <func>
invalid alarm hook syntax, must be: <alarm> <msg>
invalid hook writefifo syntax, must be: <file> <string>
uwsgi_hook_writefifo()/write()
invalid hook append syntax, must be: <file> <string>
invalid hook write syntax, must be: <file> <string>
invalid hook writen syntax, must be: <file> <string>
invalid hook chown2 syntax, must be: <file> <uid> <gid>
invalid hook chown2 syntax, uid must be a number
invalid hook chown2 syntax, gid must be a number
invalid hook chown syntax, must be: <file> <uid> <gid>
invalid hook chmod syntax, must be: <file> <mode>
unable to call function "%s(%d)"
unable to call function "%s(%s)"
invalid hook syntax, must be hook:args
FATAL hook failed, destroying instance
running --- PRIVATE HOOK --- (%s)...
_plugin.so
/usr/lib/uwsgi/plugins
core/plugins.c
dlclose()
requires
!!! UNABLE to load uWSGI plugin: %s !!!
the loaded plugin (%s) has no .name attribute
you have embedded too much generic plugins !!!
option "%s" found in plugin %s
unable to allocate mutexattr structure
unable to set PTHREAD_PRIO_INHERIT
unable to make the mutex 'robust'
!!! it looks like your kernel does not support pthread robust mutexes !!!
!!! falling back to standard pthread mutexes !!!
[deadlock-detector] a process holding a robust mutex died. recovering...
uwsgi_lock_ipcsem_init()/ftok()
uwsgi_lock_ipcsem_init()/semget()
uwsgi_lock_ipcsem_init()/semctl()
unable to allocate rwlock structure
found ipcsem mapped to alive pid %d. skipping ipcsem removal.
unable to find lock engine "%s"
[deadlock-detector] pid %d was holding lock %s (%p)
unable to share mutex
unable to initialize mutex
core/lock.c
uwsgi_lock_ipcsem()/semop()
uwsgi_unlock_ipcsem()/semop()
unable to share rwlock
unable to initialize rwlock
uwsgi_ipcsem_clear()/semctl()
lock engine: ipcsem
pthread robust mutexes
lock engine: %s
user 
filemon
thunder
legion_
core/cache.c
[cache-udp-node] sendmsg()
[cache-udp-server] read()
cache sweeper thread enabled
clear
update
ftruncate()
uwsgi_cache_init()/mmap()
cache_
[cache-udp-node] socket()
djb33x
no_expire
clear_on_full
sweep_on_full
lazy
lazy_expire
purge_lru
ignore_full
math_initial
lastmod
bitmap
udpserver
udpservers
udp_server
udp_servers
storedelete
store_delete
storesync
store_sync
key_size
hash_size
maxitems
invalid cache hash for "%s"
[cache-sync] invalid cache size, expected %llu received %llu
[cache-sync] invalid cache block size, expected %llu received %llu
ALARM !!! cache-loop (and potential deadlock) detected slot = %lu prev = %lu next = %lu
LRU item will be purged from cache "%s"
*** DANGER cache "%s" is FULL !!! ***
freed %llu items for cache "%s"
[uwsgi-cache] restored %llu items
[cache-udp-server] cannot bind to %s
*** udp server for cache "%s" running on %s ***
[cache-udp-server] unable to update cache
uwsgi_cache_sync_all()/msync()
uwsgi_cache_start_sweepers()/pthread_create()
unable to run the cache sweeper!!!
unable to run the cache udp server !!!
udp server thread enabled for cache "%s"
uwsgi_cache_magic_get()/realloc()
[cache-sync] getting cache dump from %s ...
[cache-sync] unable to connect to the cache server
[cache-sync] unable to write to the cache server
[cache-sync] unable to read from the cache server
[cache-sync] trying with the next sync node...
[cache-udp-node] invalid udp address: %s
added udp node %s for cache "%s"
Removing invalid cache store file: %s
Cannot remove invalid cache store file: %s
creating a new cache store file: %s
invalid cache store file. Please remove it or fix cache blocksize/items to match its size
recovered cache from backing store file: %s
uwsgi_cache_init()/mmap() [with store]
*** Cache "%s" initialized: %lluMB (key: %llu bytes, keys: %llu bytes, data: %llu bytes, bitmap: %llu bytes) preallocated ***
[cache] stored "%.*s" in "%s"
[cache-error] unable to store "%.*s" in "%s"
[cache-error] unable to read file "%.*s"
[cache-gzip] stored "%.*s" in "%s"
[cache] unable to store item %s
unable to parse cache definition
you have to specify a cache name
you have to specify the maximum number of cache items
invalid cache blocksize for "%s"
invalid cache blocks for "%s"
invalid cache hashsize for "%s"
invalid cache keysize for "%s"
invalid number of cache blocks for "%s", must be higher than max_items (%llu)
core/daemons.c
uwsgi_spawn_daemon()/setgid()
uwsgi_spawn_daemon()/setuid()
uWSGI external daemon
uwsgi_spawn_daemon()/chdir()
uwsgi_spawn_daemon()/setsid()
uwsgi_spawn_daemon()/prctl()
uwsgi_spawn_daemon()/clone()
legion-
legion-smart-attach-daemon
legion-smart-attach-daemon2
attach-control-daemon
ns_pid
reload_signal
reloadsignal
stop_signal
stopsignal
daemonize
invalid --%s keyval syntax
[uwsgi-daemons] throttling "%s" for %d seconds
[uwsgi-daemons] %sspawning "%s" (uid: %d gid: %d)
[uwsgi-daemons] unable to spawn "%s"
uwsgi_spawn_daemon()/waitpid()
daemon "%s" (pid: %d) annihilated
[uwsgi-daemons] BUG !!! daemon "%s" has already daemonized !!!
uwsgi-daemons] legion "%s" daemon "%s" (pid: %d) annihilated
[uwsgi_daemons] stopping legion "%s" daemon: %s (pid: %d)
[uwsgi-daemons] "%s" (pid: %d) did not daemonize !!!
[uwsgi-daemons] found changed pidfile for "%s" (old_pid: %d new_pid: %d)
[uwsgi-daemons] found changed pid for "%s" (old_pid: %d new_pid: %d)
[uwsgi-daemons] found valid/active pidfile for "%s" (pid: %d)
[uwsgi-daemons] stopping daemon (pid: %d): %s
[uwsgi-daemons] daemon did not die in time, killing (pid: %d): %s
invalid legion daemon syntax: %s
invalid smart-attach-daemon syntax: %s
--%s: you need to specify a 'command' key
text/html
close
404 Not Found
403 Forbidden
405 Method Not Allowed
301 Moved Permanently
Location
murmur2
random
rand
core/master_events.c
[reload-on-fd] read()
*** fd %d ready: %s ***
*** fd %d ready !!! ***
[brutal-reload-on-fd] read()
lost connection with mules
uwsgi_master_manage_events()/read()
lost connection with workers !!!
lost connection with spoolers
core/chunked.c
uwsgi_chunked_input_recv()
invalid queue size/blocksize %llu: must be a multiple of memory page size (%d bytes)
creating a new queue store file: %s
invalid queue store file. Please remove it or fix queue blocksize/items to match its size
recovered queue from backing store file: %s
*** Queue subsystem initialized: %luMB preallocated ***
core/queue.c
core/event.c
epoll_create()
epoll_ctl()
epoll_wait()
timerfd_create()
timerfd_settime()
[uwsgi-signal] you have registered this signal in worker %d memory area, only that process will be able to run it
you cannot register signals without a master
only the master and the workers can register signal handlers
[uwsgi-signal] you cannot re-register a signal as the master !!!
[uwsgi-signal] signum %d registered (wid: %d modifier1: %d target: default, any worker)
[uwsgi-signal] signum %d registered (wid: %d modifier1: %d target: %s)
uwsgi_add_file_monitor: invalid filename length
you can register max 64 file monitors !!!
you can register max 64 timers !!!
you can register max 64 rb_timers !!!
*** SIGNAL QUEUE IS FULL: buffer size %d bytes (you can tune it with --signal-bufsize) ***
could not deliver signal %d to workers pool
could not deliver signal %d to worker %d
could not deliver signal %d to the spooler
could not deliver signal %d to mule %d
could not deliver signal %d to a mule
could not deliver signal %d to farm %d (%s)
^^^ UNSUPPORTED SIGNAL TARGET: %s ^^^
error managing signal %d on %s %d
uWSGI %s %d screams: UAAAAAAH my master disconnected: i will kill myself !!!
core/signal.c
socketpair()
uwsgi_signal_send()
worker0
active-workers
invalid signal target: %s
mules
farm_
unknown farm: %s
[uwsgi-signal] read()
X-Progress-ID=
upload progress uuid = %.*s
core/progress.c
{ "state" : "uploading", "received" : %llu, "size" : %llu }
uwsgi_upload_progress_update()/lseek()
uwsgi_upload_progress_update()/write()
uwsgi_upload_progress_update()/fsync()
uwsgi_upload_progress_destroy()/unlink()
*** BOOOOOOM ***
core/timebomb.c
unable to setup the time bomb, goodbye
Fire in the hole !!! (%d seconds to detonation)
[uWSGI] getting INI configuration from %s
*** WARNING: Can't find section "%s" in INI configuration file %s ***
core/fsmon.c
fsmon_add()/inotify_init()
uwsgi_fsmon_ack()/ioctl()
uwsgi_fsmon_ack()/read()
[uwsgi-fsmon] invalid syntax: "%s"
fsmon_add()/event_queue_add_fd_read()
fsmon_add()/inotify_add_watch()
[uwsgi-fsmon] registered monitor for "%s"
[uwsgi-fsmon] unable to register monitor for "%s"
[uwsgi-fsmon] detected event on "%s"
unknown mount flag "%s"
unknown umount flag "%s"
/proc/self/mounts
core/mount.c
uwsgi_mount()
uwsgi_umount()
dirsync
mandlock
move
noatime
nodev
noexec
rdonly
readonly
remount
nosuid
force
detach
recursive
private
the /proc filesystem must be mounted for recursive umount
uwsgi_mount_hook() invalid syntax
uwsgi_check_mountpoint()/statfs()
core/metrics.c
%lld
invalid metric name: %s
invalid metric oid: %s
reset_after_push
alias
children
arg3n
arg2n
arg1n
arg3
arg2
arg1
collector
initial_value
gauge
absolute
unable to find metric "%s"
core.routed_signals
core.unrouted_signals
core.busy_workers
core.idle_workers
core.overloaded
5.100
core.total_tx
5.101
core.total_rss
5.102
core.total_vsz
5.103
core.avg_response_time
worker.%d.requests
3.%d.1
worker.%d.delta_requests
3.%d.2
worker.%d.failed_requests
3.%d.13
worker.%d.respawns
3.%d.14
worker.%d.avg_response_time
3.%d.8
worker.%d.total_tx
3.%d.9
worker.%d.rss_size
3.%d.11
worker.%d.vsz_size
3.%d.12
worker.%d.core.%d.requests
3.%d.2.%d.1
3.%d.2.%d.3
3.%d.2.%d.4
3.%d.2.%d.5
3.%d.2.%d.6
worker.%d.core.%d.exceptions
3.%d.2.%d.7
worker.%d.core.%d.read_errors
3.%d.2.%d.8
socket.%d.listen_queue
7.%d.1
added custom metric: %s
initialized %llu metrics
reset
rate
unable to find metric %s
accumulator
adder
multiplier
func
unable to find metric collector "%s"
unable to encode oid %s to asn/ber
uwsgi_register_metric()/lseek()
unable to register metric: %s
uwsgi_register_metric()/write()
uwsgi_register_metric()/mmap()
metrics collector thread started
invalid metric keyval syntax: %s
you need to specify a metric name: %s
uwsgi_setup_metrics()/uwsgi_expand_path()
unable to register metric name %s
unable to register metric oid %s
worker.%d.core.%d.write_errors
worker.%d.core.%d.routed_requests
worker.%d.core.%d.static_requests
worker.%d.core.%d.offloaded_requests
metric alias "%s" requires a mapping !!!
invalid metric threshold keyval syntax: %s
metric's threshold requires a key and a value: %s
added threshold for metric %s (value: %lld)
memory allocated for metrics storage: %llu bytes (%llu MB)
.uwsgi_plugins_builder
core/plugins_builder.c
unable to generate uwsgi.h
invalid uwsgi.h
uwsgi_build_plugin()/write()
invalid uwsgiconfig.py
unable to find cflags
invalid cflags
UWSGI_PLUGINS_BUILDER_CFLAGS
uwsgi_build_plugin()/setenv()
PYTHON
python
--extra-plugin
uwsgi_build_plugin()/mkdir() .uwsgi_plugins_builder/
.uwsgi_plugins_builder/uwsgi.h
unable to generate uwsgiconfig.py
.uwsgi_plugins_builder/uwsgiconfig.py
core/sharedarea.c
sharedarea
pages
offset
uwsgi_sharedarea_init()/realloc()
uwsgi_sharedarea_init_fd()/mmap()
sharedarea %d created at %p (%d pages, area at %p)
invalid sharedarea keyval syntax
you need to set a size for a sharedarea !!! [%s]
only the master and the workers can register RPC functions
registered shared/inherited RPC function "%s"
registered RPC function "%s" on worker %d
local rpc subsystem is still not initialized !!!
core/gateway.c
%s %d setgid() to %d
gateway_respawn()/setgid()
%s %d setuid() to %d
gateway_respawn()/setuid()
respawned %s %d (pid: %d)
you can register max %d gateways
[%s pid %d] no more nodes available. Going cheap...
invalid chmod value: %s
core/uwsgi.c
vacuum()/tcsetattr()
VACUUM: pidfile removed.
VACUUM: pidfile2 removed.
Usage: %s [options...]
    -%c|--%-*s %s
    --%-*s %s
false
immediate gid: %d
immediate uid: %d
invalid file descriptor: %d
undeferred-shared-socket
invalid umask: %s
x-sendfile
xsendfile
x-accel-redirect
xaccelredirect
nginx
true
pthread_cancel()
pthread_join() = %d
;end of configuration
%s = %s
%s = true
	workers total requests: %lu
-----------------
signal_pidfile()/kill()
error: invalid pidfile
invalid signal number
node %s rejected signal %d
*** backtrace of 
*** end of backtrace ***
pthread_key_create()
unavailable loop engine !!!
need-
unable to load plugin "%s"
pre app
running "%s" (pre app)...
mounting %s on %s
invalid mountpoint: %s
post app
running "%s" (post app)...
mounting "%s" (in-jail)...
running "%s" (in-jail)...
setrlimit()
setpriority()
scheduler priority set to %d
/etc/mime.types
!!! no %s file found !!!
VirtualHosting mode enabled.
thunder lock: enabled
snmp
unable to find cache "%s"
spooler on 
initializing uWSGI
TERM
screen
gethostname()
un-mounting "%s" (asap)...
running "%s" (asap)...
simple
async
spare
manual
%d: %s
--- end of plugins list ---
--- end of loggers list ---
--- end of routers list ---
*** uWSGI loaded clocks ***
--- end of clocks list ---
*** uWSGI loaded alarms ***
--- end of alarms list ---
31 August 2017 21:02:04
5.4.0 20160609
uname()
os: %s-%s %s
nodename: %s
machine: %s
clock source: %s
pcre jit enabled
pcre jit disabled
detected binary path: %s
mounting "%s" (pre-jail)...
running "%s" (pre-jail)...
uwsgi_run()/prctl()
%s: invalid address
uwsgi_opt_add_addr_list()
unconfigured
suwsgi-socket
ssl-socket
http-socket
http-socket-modifier1
http-socket-modifier2
https-socket
https-socket-modifier1
https-socket-modifier2
fastcgi-socket
fastcgi-nph-socket
fastcgi-modifier1
fastcgi-modifier2
scgi-socket
scgi-nph-socket
scgi-modifier1
scgi-modifier2
raw-socket
raw-modifier1
raw-modifier2
puwsgi-socket
socket-protocol
thunder-lock
set harakiri timeout
harakiri-verbose
harakiri-no-arh
no-harakiri-arh
no-harakiri-after-req-hook
backtrace-depth
set backtrace depth
mule-harakiri
xmlconfig
load config from xml file
fallback-config
strict
skip-zero
skip-atexit
set-placeholder
set a placeholder
set-ph
declare-option
declare-option2
resolve
(opt logic) for cycle
for-glob
for-times
for-readline
(opt logic) end for cycle
if-opt
(opt logic) check for option
if-not-opt
if-env
if-not-env
ifenv
if-reload
(opt logic) check for reload
if-not-reload
if-hostname
if-not-hostname
if-hostname-match
if-not-hostname-match
if-exists
if-not-exists
ifexists
if-plugin
(opt logic) check for plugin
if-not-plugin
ifplugin
if-file
if-not-file
if-dir
if-not-dir
ifdir
if-directory
(opt logic) end if
set options blacklist context
end-blacklist
set options whitelist context
end-whitelist
ignore-sigpipe
ignore-write-errors
write-errors-tolerance
write-errors-exception-only
disable-write-exception
inject-before
inject-after
daemonize uWSGI
daemonize2
stop an instance
reload an instance
pause an instance
suspend
suspend an instance
resume
resume an instance
connect-and-read
extract
listen
max-vars
max-apps
buffer-size
set internal buffer size
memory-report
enable memory report
enable the specified profiler
cgi-mode
abstract-socket
chmod-socket
chown-socket
chown unix sockets
set umask
freebind
put socket in freebind mode
map-socket
enable-threads
enable threads
no-threads-wait
auto-procname
procname-prefix
procname-prefix-spaced
procname-append
set process names
procname-master
set master process name
single-interpreter
need-app
exit if no app can be loaded
enable master process
run the Emperor
emperor-proxy-socket
emperor-wrapper
emperor-wrapper-override
emperor-wrapper-fallback
emperor-nofollow
emperor-procname
set the Emperor process name
emperor-freq
emperor-required-heartbeat
emperor-curse-tolerance
emperor-pidfile
emperor-tyrant
emperor-tyrant-nofollow
emperor-stats
run the Emperor stats server
emperor-stats-server
early-emperor
emperor-broodlord
emperor-throttle
emperor-max-throttle
emperor-magic-exec
emperor-on-demand-extension
emperor-on-demand-ext
emperor-on-demand-directory
emperor-on-demand-dir
emperor-on-demand-exec
emperor-extra-extension
emperor-extra-ext
emperor-no-blacklist
emperor-use-clone
emperor-cap
set vassals capability
vassals-cap
vassal-cap
imperial-monitor-list
imperial-monitors-list
vassals-inherit
vassals-include
vassals-inherit-before
vassals-include-before
vassals-start-hook
vassals-stop-hook
vassal-sos
vassal-sos-backlog
vassals-set
vassal-set
worker-reload-mercy
mule-reload-mercy
exit-on-reload
die-on-term
force-gateway
show this help
usage
print-sym
print-symbol
reaper
max-requests
min-worker-lifetime
max-worker-lifetime
set internal sockets timeout
no-fd-passing
lock-engine
set the lock engine
ftok
persistent-ipcsem
safe-fd
fd-safe
cache-blocksize
set cache blocksize
cache-store
cache-store-sync
cache-no-expire
cache-expire-freq
cache-report-freed-items
cache-udp-server
cache-udp-node
cache-sync
cache-use-last-modified
add-cache-item
add an item in the cache
load-file-in-cache
load-file-in-cache-gzip
cache2
enable shared queue
queue-blocksize
set queue blocksize
queue-store
queue-store-sync
spooler-external
spooler-ordered
spooler-chdir
spooler-processes
spooler-quiet
spooler-max-tasks
spooler-harakiri
spooler-frequency
set spooler frequency
spooler-freq
add a mule
add a mule farm
mule-msg-size
set mule message buffer size
signal-bufsize
signals-bufsize
signal-timer
signal-rbtimer
rpc-max
disable-logging
disable request logging
flock
flock-wait
flock2
flock-wait2
pidfile2
pivot-root
pivot_root
add-gid
immediate-uid
immediate-gid
no-initgroups
set process capability
unshare
unshare2
setns-socket
setns-socket-skip
setns-skip
setns-preopen
jailed
refork
re-fork
refork-as-root
re-fork-as-root
refork-post-jail
re-fork-post-jail
hook-asap
hook-pre-jail
hook-post-jail
hook-in-jail
hook-as-root
hook-as-user
hook-as-user-atexit
hook-pre-app
hook-post-app
hook-post-fork
hook-accepting
hook-accepting1
hook-accepting-once
hook-accepting1-once
hook-master-start
hook-touch
hook-emperor-start
hook-emperor-stop
hook-emperor-reload
hook-emperor-lost
hook-as-vassal
hook-as-emperor
hook-as-mule
hook-as-gateway
after-request-hook
after-request-call
exec-asap
exec-pre-jail
exec-post-jail
exec-in-jail
exec-as-root
exec-as-user
exec-as-user-atexit
exec-pre-app
exec-post-app
exec-as-vassal
exec-as-emperor
umount-asap
umount-pre-jail
umount-post-jail
umount-in-jail
umount-as-root
umount-as-vassal
umount-as-emperor
wait-for-interface
wait-for-interface-timeout
wait-interface
wait-interface-timeout
wait-for-iface
wait-for-iface-timeout
wait-iface
wait-iface-timeout
wait-for-fs
wait-for-file
wait-for-dir
wait-for-mountpoint
wait-for-fs-timeout
wait-for-socket
wait-for-socket-timeout
call-asap
call-pre-jail
call-post-jail
call-in-jail
call-as-root
call-as-user
call-as-user-atexit
call-pre-app
call-post-app
call-as-vassal
call-as-vassal1
call-as-vassal3
call-as-emperor
call-as-emperor1
call-as-emperor2
call-as-emperor4
load config from ini file
load config from yaml file
load config from json file
auto-weight
no-server
force no-server mode
command-mode
force command mode
no-defer-accept
tcp-nodelay
so-keepalive
enable TCP KEEPALIVEs
so-send-timeout
set SO_SNDTIMEO
socket-send-timeout
so-write-timeout
socket-write-timeout
socket-sndbuf
set SO_SNDBUF
socket-rcvbuf
set SO_RCVBUF
limit-as
limit-nproc
evil-reload-on-as
evil-reload-on-rss
mem-collector-freq
brutal-reload-on-fd
enable Linux KSM
pcre-jit
never-swap
touch-reload
touch-workers-reload
touch-chain-reload
touch-logrotate
touch-logreopen
touch-exec
touch-signal
fs-reload
fs-brutal-reload
fs-signal
check-mountpoint
mountpoint-check
check-mount
mount-check
propagate-touch
limit-post
limit request body
no-orphans
prio
cpu-affinity
set cpu affinity
post-buffering
post-buffering-bufsize
body-read-warning
upload-progress
no-default-app
manage-script-name
ignore-script-name
ignore SCRIPT_NAME
catch-exceptions
reload-on-exception
reload-on-exception-type
reload-on-exception-value
reload-on-exception-repr
exception-handler
add an exception handler
enable-metrics
enable metrics subsystem
add a custom metric
metric-threshold
add a metric threshold/alarm
metric-alarm
alarm-metric
metrics-dir
metrics-dir-restore
metric-dir
metric-dir-restore
metrics-no-cores
stats-http
stats-minified
minify statistics json output
stats-min
stats-push
stats-pusher-default-freq
stats-pushers-default-freq
stats-no-cores
stats-no-metrics
multicast
multicast-ttl
set multicast ttl
multicast-loop
master-fifo
enable the master fifo
subscription-notify-socket
became a member of a legion
legion-mcast
legion-node
add a node to a legion
legion-freq
legion-tolerance
legion-death-on-lord-error
legion-skew-tolerance
legion-lord
legion-unlord
legion-setup
legion-death
legion-join
legion-node-joined
legion-node-left
legion-quorum
set the quorum of a legion
legion-scroll
set the scroll of a legion
legion-scroll-max-size
legion-scroll-list-max-size
subscriptions-sign-check
subscriptions-sign-skip-uid
subscriptions-use-credentials
subscription-algo
subscription-dotsplit
subscribe-to
subscribe
subscribe2
subscribe-freq
subscription-tolerance
start-unsubscribed
subscribe-with-modifier1
snmp-community
set the snmp community string
ssl-verbose
be verbose about SSL errors
ssl-sessions-use-cache
ssl-session-use-cache
ssl-sessions-timeout
ssl-session-timeout
sni-dir
sni-dir-ciphers
ssl-enable3
enable SSLv3 (insecure)
ssl-option
sni-regexp
ssl-tmp-dir
check-interval
forkbomb-delay
binary-path
force binary path
unprivileged-binary-patch
unprivileged-binary-patch-arg
max-fd
logto
set logfile/udp address
logto2
log-format
logformat
logformat-strftime
log-format-strftime
logfile-chown
chown logfiles
logfile-chmod
chmod logfiles
log-syslog
log to syslog
log-socket
req-logger
set/append a request logger
logger-req
set/append a logger
logger-list
list enabled loggers
loggers-list
threaded-logger
log-encoder
log-req-encoder
log-drain
log-filter
log-route
log-req-route
use-abort
alarm-cheap
alarm-freq
alarm-fd
alarm-segfault
segfault-alarm
alarm-backlog
backlog-alarm
lq-alarm
alarm-lq
alarm-listen-queue
listen-queue-alarm
not-log-alarm
not-alarm-log
alarm-list
list enabled alarms
alarms-list
alarm-msg-size
log-master
log-master-bufsize
log-master-stream
log-master-req-stream
log-reopen
reopen log after reload
log-truncate
truncate log on startup
log-maxsize
set maximum logfile size
log-backupname
logdate
log-date
log-prefix
prefix logs with a string
log-zero
log responses without body
log-slow
log-4xx
log-5xx
log-big
log-sendfile
log sendfile requests
log-ioerror
log requests with io errors
log-micros
log-x-forwarded-for
master-as-root
drop-after-init
drop-after-apps
force-cwd
binsh
chdir2
lazy-apps
cheaper
cheaper-initial
cheaper-algo
cheaper-step
cheaper-overload
cheaper-algo-list
cheaper-algos-list
cheaper-list
cheaper-rss-limit-soft
cheaper-rss-limit-hard
die-on-idle
shutdown uWSGI when idle
worker-mount
thread-stacksize
set threads stacksize
threads-stacksize
thread-stack-size
threads-stack-size
vhost
vhost-host
add a route
path_info
http_host
request_uri
query_string
remote_addr
user_agent
remote_user
final-route
add a final route
final-route-status
final-route-host
final-route-uri
final-route-qs
final-route-remote-addr
final-route-user-agent
final-route-remote-user
final-route-referer
final-route-label
final-route-if
final-route-if-not
final-route-run
error-route
add an error route
error-route-status
error-route-host
error-route-uri
error-route-qs
error-route-remote-addr
error-route-user-agent
error-route-remote-user
error-route-referer
error-route-label
error-route-if
error-route-if-not
error-route-run
response-route
add a response route
response-route-status
response-route-host
response-route-uri
response-route-qs
response-route-remote-addr
response-route-user-agent
response-route-remote-user
response-route-referer
response-route-label
response-route-if
response-route-if-not
response-route-run
router-list
list enabled routers
routers-list
error-page-403
error-page-404
error-page-500
websockets-ping-freq
websocket-ping-freq
websockets-pong-tolerance
websocket-pong-tolerance
websockets-max-size
websocket-max-size
chunked-input-limit
chunked-input-timeout
clock
set a clock source
clock-list
list enabled clocks
clocks-list
add-header
rem-header
del-header
collect-header
response-header-collect
pull-header
check-static
check-static-docroot
static-check
static-map
static-map2
static-skip-ext
static-index
static-safe
static-cache-paths
static-cache-paths-name
mimefile
mime-file
static-expires-type
static-expires-type-mtime
static-expires
static-expires-mtime
static-expires-uri
static-expires-uri-mtime
static-expires-path-info
static-gzip
static-gzip-all
static-gzip-dir
static-gzip-prefix
static-gzip-ext
static-gzip-suffix
honour-range
offload-threads
offload-thread
file-serve-mode
set static file serving mode
fileserve-mode
disable-sendfile
check-cache
close-on-exec
close-on-exec2
set uWSGI custom mode
early-envdir
unenv
unset environment variable
vacuum
file-write
cgroup-opt
cgroup-dir-mode
namespace-keep-mount
namespace-net
add network namespace
ns-net
enable-proxy-protocol
reuse-port
tcp-fast-open
tcp-fastopen
tcp-fast-open-client
tcp-fastopen-client
attach to a zerg server
zerg-fallback
zerg-server
add a cron task
cron2
unique-cron
add a unique cron task
cron-harakiri
unique-legion-cron
unique-cron-legion
select the uWSGI loop engine
loop-list
list enabled loop engines
loops-list
worker-exec
worker-exec2
legion-attach-daemon
daemons-honour-stdin
load uWSGI plugins
need-plugins
need-plugin
plugins-dir
plugin-dir
plugins-list
list enabled plugins
plugin-list
autoload
dlopen
blindly load a shared library
allowed-modifiers
remap-modifier
dump-options
show-config
binary-append-data
simple print
iprint
force exit() of the instance
cflags
dot-h
config-py
build-plugin
print uWSGI version
-- unavailable modifier requested: %d --
F*CK !!! i must kill myself (pid: %d app_id: %d)...
*** if you want your workers to be automatically respawned consider enabling the uWSGI master process ***
SIGPIPE: writing to a closed pipe/socket/fd (probably the client disconnected) on request %.*s (ip %.*s) !!!
SIGPIPE: writing to a closed pipe/socket/fd (probably the client disconnected) !!!
VACUUM WARNING: unix socket %s changed inode. Skip removal
VACUUM: unix socket %s removed.
VACUUM: unix socket %s (stats) removed.
mem-collector thread started for worker %d
uwsgi_opt_binary_append_data()/write()
uwsgi_opt_set_immediate_gid(): invalid gid %d
uwsgi_opt_set_immediate_gid()/setgid()
uwsgi_opt_set_immediate_gid()/setgroups()
uwsgi_opt_set_immediate_uid(): invalid uid %d
uwsgi_opt_set_immediate_uid()/setuid()
invalid https-socket syntax must be socket,crt,key
[uwsgi-static] added check for %s
invalid value for option "%s": must be > 0
recursive logic in options is not supported (option = %s)
invalid custom regexp syntax: must be <custom> <regexp>
invalid placeholder/--set value
invalid syntax for '%s', must be: <digest>:<directory>
unable to find digest algorithm: %s
[security] empty capabilities mask !!!
invalid document root in static map, syntax mountpoint=docroot
[uwsgi-static] added mapping for %s => %s
invalid dictionary syntax for %s
uWSGI ERROR: %s is locked by another instance
pthread_cancel() on initial thread
pthread_join() = %d on initial thread
Gracefully killing worker %d (pid: %d)...
graceful shutdown triggered...
;uWSGI instance configuration
[uwsgi]
	worker %d app %d [%.*s] requests: %lu exceptions: %lu
worker %d total requests: %lu
	app %d [%.*s] requests: %lu exceptions: %lu
unable to load configuration from %s
...The work of process %d is done. Seeya!
SIGINT/SIGQUIT received...killing workers...
...gracefully killing workers...
...brutally killing workers...
invalid syntax for signal, must be addr,signal
unable to deliver signal %d to node %s
signal %d delivered to node %s
HARAKIRI: --- uWSGI worker %d core %d (pid: %d) WAS managing request %.*s since %.*s ---
SIGUSR2: --- uWSGI worker %d core %d (pid: %d) is managing request %.*s since %.*s ---
HARAKIRI: --- uWSGI worker %d (pid: %d) WAS managing request %.*s since %.*s ---
SIGUSR2: --- uWSGI worker %d (pid: %d) is managing request %.*s since %.*s ---
HARAKIRI: --- uWSGI worker %d (pid: %d) WAS handling signal %d ---
!!! uWSGI process %d got Segmentation Fault !!!
!!! uWSGI process %d got Floating Point Exception !!!
emperor-i-am-ready-to-accept/write()
lost communication with the Emperor, goodbye...
*** running %s loop engine [addr:%p] ***
your loop engine died. R.I.P.
invalid %s syntax, must be newoption=template
*** no app loaded. GAME OVER ***
*** no app loaded. going in full dynamic mode ***
un-mounting "%s" (in-jail)...
*** WARNING: you are running uWSGI without its master process manager ***
limiting number of processes to %d...
your processes number limit is %d
!!! number of workers adjusted to %d due to system limits !!!
limiting address space of processes...
your process address space limit is %lld bytes (%lld MB)
your memory page size is %d bytes
detected max file descriptor number: %lu
- your current max open files limit is %lu, this is lower than requested async cores !!! -
max open files limit raised to %lu
- async cores set to %d - fd table size: %d
thunder lock: disabled (you can enable it with --thunder-lock)
caching of static paths requires uWSGI caching !!!
threads stack size set to %luk
!!! unable to set requested threads stacksize !!!
The -s/--socket option is missing and stdin is not a socket.
...you should enable the master process... really...
your server socket listen backlog is limited to %d connections
your mercy for graceful operations on workers is %d seconds
[uwsgi-cron] command "%s" registered as cron task for legion "%s"
[uwsgi-cron] command "%s" registered as cron task
*** Operational MODE: command ***
*** Operational MODE: no-workers ***
*** Operational MODE: preforking+threaded ***
*** Operational MODE: threaded ***
*** Operational MODE: preforking+async ***
*** Operational MODE: async ***
*** Operational MODE: preforking ***
*** Operational MODE: single process ***
unable to find symbol/function "%s"
added "%s(struct wsgi_request *)" to the after-request chain
no-server mode requested. Goodbye.
*** uWSGI is running in multiple interpreter mode ***
!!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!
no request plugin is loaded, you will not be able to manage requests.
you may need to install the package for your language of choice, or simply load it with --plugin.
!!!!!!!!!!! END OF WARNING !!!!!!!!!!
[uwsgi-KSM] enabled with frequency: %d
gracefully (RE)spawned uWSGI master process (pid: %d)
spawned uWSGI master process (pid: %d)
spawned uWSGI worker 1 (and the only) (pid: %d, cores: %d)
spawned uWSGI worker 1 (pid: %d, cores: %d)
*** uWSGI loaded generic plugins ***
*** uWSGI loaded request plugins ***
*** uWSGI loaded loggers ***
*** uWSGI loaded cheaper algorithms ***
--- end of cheaper algorithms list ---
*** uWSGI loaded routers ***
*** uWSGI loaded loop engines ***
--- end of loop engines list ---
*** uWSGI loaded imperial monitors ***
--- end of imperial monitors list ---
*** Starting uWSGI %s (%dbit) on [%.*s] ***
compiled with version: %s on %s
detected number of CPU cores: %d
current working directory: %s
*** running under screen session %s ***
un-mounting "%s" (pre-jail)...
unable to start offload thread %d for worker %d !!!
spawned %d offload threads for uWSGI worker %d
--- unable to connect to zerg server %s ---
--- invalid data received from zerg-server ---
[WARNING] option "%s" is deprecated: %s
2d4f32202d492e202d57616c6c202d576572726f72202d445f4c4152474546494c455f534f55524345202d445f46494c455f4f46465345545f424954533d3634202d67202d4f32202d66737461636b2d70726f746563746f722d7374726f6e67202d57666f726d6174202d576572726f723d666f726d61742d7365637572697479202d57616c6c202d666e6f2d7374726963742d616c696173696e67202d576578747261202d576e6f2d756e757365642d706172616d65746572202d576e6f2d6d697373696e672d6669656c642d696e697469616c697a657273202d4455575347495f4841535f49464144445253202d4455575347495f5a4c4942202d4455575347495f4c4f434b5f5553455f4d55544558202d4455575347495f4556454e545f5553455f45504f4c4c202d4455575347495f4556454e545f54494d45525f5553455f54494d45524644202d4455575347495f4556454e545f46494c454d4f4e49544f525f5553455f494e4f5449465920202d4455575347495f50435245202d4455575347495f524f5554494e47202d4455575347495f434150202d4455575347495f55554944202d4455575347495f56455253494f4e3d225c22322e302e31322d64656269616e5c2222202d4455575347495f56455253494f4e5f424153453d223222202d4455575347495f56455253494f4e5f4d414a4f523d223022202d4455575347495f56455253494f4e5f4d494e4f523d22313222202d4455575347495f56455253494f4e5f5245564953494f4e3d223022202d4455575347495f56455253494f4e5f435553544f4d3d225c2264656269616e5c2222202d4455575347495f59414d4c202d4455575347495f4c494259414d4c202d4455575347495f4a534f4e202d4455575347495f53534c202d492f7573722f696e636c7564652f6c6962786d6c32202d4455575347495f584d4c202d4455575347495f584d4c5f4c4942584d4c32202d4455575347495f504c5547494e5f4449523d225c222f7573722f6c69622f75777367692f706c7567696e735c2222
bind to the specified UNIX/TCP socket using default protocol
bind to the specified UNIX/TCP socket using uwsgi protocol
bind to the specified UNIX/TCP socket using uwsgi protocol over SSL
bind to the specified UNIX/TCP socket using HTTP protocol
force the specified modifier1 when using HTTP protocol
force the specified modifier2 when using HTTP protocol
bind to the specified UNIX/TCP socket using HTTPS protocol
force the specified modifier1 when using HTTPS protocol
force the specified modifier2 when using HTTPS protocol
bind to the specified UNIX/TCP socket using FastCGI protocol
bind to the specified UNIX/TCP socket using FastCGI protocol (nph mode)
force the specified modifier1 when using FastCGI protocol
force the specified modifier2 when using FastCGI protocol
bind to the specified UNIX/TCP socket using SCGI protocol
bind to the specified UNIX/TCP socket using SCGI protocol (nph mode)
force the specified modifier1 when using SCGI protocol
force the specified modifier2 when using SCGI protocol
bind to the specified UNIX/TCP socket using RAW protocol
force the specified modifier1 when using RAW protocol
force the specified modifier2 when using RAW protocol
bind to the specified UNIX/TCP socket using persistent uwsgi protocol (puwsgi)
force the specified protocol for default sockets
create a shared socket for advanced jailing or ipc
create a shared socket for advanced jailing or ipc (undeferred mode)
spawn the specified number of workers/processes
serialize accept() usage (if possible)
enable verbose mode for harakiri
do not enable harakiri during after-request-hook
set harakiri timeout for mule tasks
load configuration using the pluggable system
re-exec uwsgi with the specified config when exit code is 1
enable strict mode (placeholder cannot be used)
skip check of file descriptor 0
skip atexit hooks (ignored by the master)
set a placeholder or an option
print the specified option value and exit
declare a new uWSGI custom option
declare a new uWSGI custom option (non-immediate)
place the result of a dns query in the specified placeholder, sytax: placeholder=name (immediate option)
(opt logic) for cycle (expand glob)
(opt logic) for cycle (expand the specified num to a list starting from 1)
(opt logic) for cycle (expand the specified file to a list of lines)
(opt logic) check for environment variable
(opt logic) check for hostname
(opt logic) try to match hostname against a regular expression
(opt logic) check for file/directory existence
(opt logic) check for file existance
(opt logic) check for directory existance
clear options blacklist context
clear options whitelist context
do not report (annoying) SIGPIPE
do not report (annoying) write()/writev() errors
set the maximum number of allowed write errors (default: no tolerance)
only raise an exception on write errors giving control to the app itself
disable exception generation on write()/writev()
use the specified file as config template
include the specified file as immediate configuration
inject a text file before the config file (advanced templating)
inject a text file after the config file (advanced templating)
daemonize uWSGI after app loading
connect to a socket and wait for data from it
fetch/dump any supported address to stdout
set the socket listen queue size
set the amount of internal iovec/vars structures
set the maximum number of per-worker applications
force CGI-mode for plugins supporting it
force UNIX socket in abstract mode (Linux only)
map sockets to specific workers
do not wait for threads cancellation on quit/reload
automatically set processes name to something meaningful
add a prefix to the process names
add a spaced prefix to the process names
append a string to process names
do not use multiple interpreters (where available)
do not remap stdin to /dev/null
force the vassal to became an Emperor proxy
set a binary wrapper for vassals
set a binary wrapper for vassals to try before the default one
set a binary wrapper for vassals to try as a last resort
do not follow symlinks when checking for mtime
set the Emperor scan frequency (default 3 seconds)
set the Emperor tolerance about heartbeats
set the Emperor tolerance about cursed vassals
write the Emperor pid in the specified file
put the Emperor in Tyrant mode
do not follow symlinks when checking for uid/gid in Tyrant mode
spawn the emperor as soon as possibile
run the emperor in BroodLord mode
set throttling level (in milliseconds) for bad behaving vassals (default 1000)
set max throttling level (in milliseconds) for bad behaving vassals (default 3 minutes)
prefix vassals config files with exec:// if they have the executable bit
search for text file (vassal name + extension) containing the on demand socket name
enable on demand mode binding to the unix socket in the specified directory named like the vassal + .socket
use the output of the specified command as on demand socket name (the vassal name is passed as the only argument)
allows the specified extension in the Emperor (vassal will be called with --config)
disable Emperor blacklisting subsystem
use clone() instead of fork() passing the specified unshare() flags
list enabled imperial monitors
add config templates to vassals config (uses --inherit)
include config templates to vassals config (uses --include instead of --inherit)
add config templates to vassals config (uses --inherit, parses before the vassal file)
include config templates to vassals config (uses --include instead of --inherit, parses before the vassal file)
run the specified command before each vassal starts
run the specified command after vassal's death
ask emperor for reinforcement when overloaded
ask emperor for sos if backlog queue has more items than the value specified
automatically set the specified option (via --set) for every vassal
announce healthiness to the emperor
set the maximum time (in seconds) we wait for workers and other processes to die during reload/shutdown
set the maximum time (in seconds) a worker can take to reload/shutdown (default is 60)
set the maximum time (in seconds) a mule can take to reload/shutdown (default is 60)
force exit even if a reload is requested
exit instead of brutal reload on SIGTERM
force the spawn of the first registered gateway without a master
print content of the specified binary symbol
call waitpid(-1,...) after each request to get rid of zombies
reload workers after the specified amount of managed requests
number of seconds worker must run before being reloaded (default is 60)
reload workers after the specified amount of seconds (default is disabled)
disable file descriptor passing
create the specified number of shared locks
set the ipcsem key via ftok() for avoiding duplicates
do not remove ipcsem's on shutdown
create a raw shared memory area of specified pages (note: it supports keyval too)
do not close the specified file descriptor
create a shared cache containing given elements
enable persistent cache to disk
set frequency of sync for persistent cache
disable auto sweep of expired items
set the frequency of cache sweeper scans (default 3 seconds)
constantly report the cache item freed by the sweeper (use only for debug)
bind the cache udp server (used only for set/update/delete) to the specified socket
send cache update/deletion to the specified cache udp server
copy the whole content of another uWSGI cache server on server startup
update last_modified_at timestamp on every cache item modification (default is disabled)
load a static file in the cache
load a static file in the cache with gzip compression
create a new generation shared cache (keyval syntax)
enable persistent queue to disk
set frequency of sync for persistent queue
run a spooler on the specified directory
map spoolers requests to a spooler directory managed by an external instance
try to order the execution of spooler tasks
chdir() to specified directory before each spooler task
set the number of processes for spoolers
do not be verbose with spooler tasks
set the maximum number of tasks to run before recycling a spooler
set harakiri timeout for spooler tasks
add the specified number of mules
send a uwsgi signal to a server
set buffer size for signal queue
add a timer (syntax: <signal> <seconds>)
add a redblack timer (syntax: <signal> <seconds>)
maximum number of rpc slots (default: 64)
lock the specified file before starting, exit if locked
lock the specified file before starting, wait if locked
lock the specified file after logging/daemon setup, exit if locked
lock the specified file after logging/daemon setup, wait if locked
create pidfile (before privileges drop)
create pidfile (after privileges drop)
chroot() to the specified directory
pivot_root() to the specified directories (new_root and put_old must be separated with a space)
setuid to the specified user/uid
setgid to the specified group/gid
add the specified group id to the process credentials
setuid to the specified user/uid IMMEDIATELY
setgid to the specified group/gid IMMEDIATELY
disable additional groups set via initgroups()
unshare() part of the processes and put it in a new namespace
unshare() part of the processes and put it in a new namespace after rootfs change
expose a unix socket returning namespace fds from /proc/self/ns
skip the specified entry when sending setns file descriptors
join a namespace created by an external uWSGI instance
open /proc/self/ns as soon as possible and cache fds
mark the instance as jailed (force the execution of post_jail hooks)
Tacocat
fork() again after privileges drop. Useful for jailing systems
fork() again before privileges drop. Useful for jailing systems
fork() again after jailing. Useful for jailing systems
run the specified hook as soon as possible
run the specified hook before jailing
run the specified hook after jailing
run the specified hook in jail after initialization
run the specified hook before privileges drop
run the specified hook after privileges drop
run the specified hook before app exit and reload
run the specified hook before app loading
run the specified hook after app loading
run the specified hook after each fork
run the specified hook after each worker enter the accepting phase
run the specified hook after the first worker enters the accepting phase
run the specified hook after each worker enter the accepting phase (once per-instance)
run the specified hook after the first worker enters the accepting phase (once per instance)
run the specified hook when the Master starts
run the specified hook when the specified file is touched (syntax: <file> <action>)
run the specified hook when the Emperor starts
run the specified hook when the Emperor send a stop message
run the specified hook when the Emperor send a reload message
run the specified hook when the Emperor connection is lost
run the specified hook before exec()ing the vassal
run the specified hook in the emperor after the vassal has been started
run the specified hook in each mule
run the specified hook in each gateway
run the specified function/symbol after each request
run the specified command as soon as possible
run the specified command before jailing
run the specified command after jailing
run the specified command in jail after initialization
run the specified command before privileges drop
run the specified command after privileges drop
run the specified command before app exit and reload
run the specified command before app loading
run the specified command after app loading
run the specified command before exec()ing the vassal
run the specified command in the emperor after the vassal has been started
mount filesystem as soon as possible
mount filesystem before jailing
mount filesystem after jailing
mount filesystem in jail after initialization
mount filesystem before privileges drop
mount filesystem before exec()ing the vassal
mount filesystem in the emperor after the vassal has been started
unmount filesystem as soon as possible
unmount filesystem before jailing
unmount filesystem after jailing
unmount filesystem in jail after initialization
unmount filesystem before privileges drop
unmount filesystem before exec()ing the vassal
unmount filesystem in the emperor after the vassal has been started
wait for the specified network interface to come up before running root hooks
set the timeout for wait-for-interface
wait for the specified filesystem item to appear before running root hooks
wait for the specified file to appear before running root hooks
wait for the specified directory to appear before running root hooks
wait for the specified mountpoint to appear before running root hooks
set the timeout for wait-for-fs/file/dir
wait for the specified socket to be ready before loading apps
set the timeout for wait-for-socket
call the specified function as soon as possible
call the specified function before jailing
call the specified function after jailing
call the specified function in jail after initialization
call the specified function before privileges drop
call the specified function after privileges drop
call the specified function before app exit and reload
call the specified function before app loading
call the specified function after app loading
call the specified function() before exec()ing the vassal
call the specified function(char *) before exec()ing the vassal
call the specified function(char *, uid_t, gid_t) before exec()ing the vassal
call the specified function() in the emperor after the vassal has been started
call the specified function(char *) in the emperor after the vassal has been started
call the specified function(char *, pid_t) in the emperor after the vassal has been started
call the specified function(char *, pid_t, uid_t, gid_t) in the emperor after the vassal has been started
weight of the instance (used by clustering/lb/subscriptions)
set weight of the instance (used by clustering/lb/subscriptions) automatically
disable deferred-accept on sockets
enable TCP NODELAY on each request
limit processes address space/vsz
limit the number of spawnable processes
reload if address space is higher than specified megabytes
reload if rss memory is higher than specified megabytes
force the master to reload a worker if its address space is higher than specified megabytes
force the master to reload a worker if its rss memory is higher than specified megabytes
set the memory collector frequency when evil reloads are in place
reload if the specified file descriptor is ready
brutal reload if the specified file descriptor is ready
enable pcre jit (if available)
lock all memory pages avoiding swapping
reload uWSGI if the specified file is modified/touched
trigger reload of (only) workers if the specified file is modified/touched
trigger chain reload if the specified file is modified/touched
trigger logrotation if the specified file is modified/touched
trigger log reopen if the specified file is modified/touched
run command when the specified file is modified/touched (syntax: file command)
signal when the specified file is modified/touched (syntax: file signal)
graceful reload when the specified filesystem object is modified
brutal reload when the specified filesystem object is modified
raise a uwsgi signal when the specified filesystem object is modified (syntax: file signal)
destroy the instance if a filesystem is no more reachable (useful for reliable Fuse management)
over-engineering option for system with flaky signal management
automatically kill workers if master dies (can be dangerous for availability)
set processes/threads priority
set size in bytes after which will buffer to disk instead of memory
set buffer size for read() in post buffering mode
set the amount of allowed memory allocation (in megabytes) for request body before starting printing a warning
enable creation of .json files in the specified directory during a file upload
do not fallback to default app
automatically rewrite SCRIPT_NAME and PATH_INFO
report exception as http output (discouraged, use only for testing)
reload a worker when an exception is raised
reload a worker when a specific exception type is raised
reload a worker when a specific exception value is raised
reload a worker when a specific exception type+value (language-specific) is raised
export metrics as text files to the specified directory
restore last value taken from the metrics dir
disable generation of cores-related metrics
run the udp server on the specified address
enable the stats server on the specified address
prefix stats server json output with http headers
push the stats json to the specified destination
set the default frequency of stats pushers
disable generation of cores-related stats
do not include metrics in stats output
subscribe to specified multicast group
set multicast loop (default 1)
enable the notification socket
set the notification socket for subscriptions
became a member of a legion (shortcut for multicast)
set the frequency of legion packets
set the tolerance of legion subsystem
declare itself as a dead node for the specified amount of seconds if one of the lord hooks fails
set the clock skew tolerance of legion subsystem (default 30 seconds)
action to call on Lord election
action to call on Lord dismiss
action to call on legion setup
action to call on legion death (shutdown of the instance)
action to call on legion join (first time quorum is reached)
action to call on new node joining legion
action to call node leaving legion
set max size of legion scroll buffer
set max size of legion scroll list buffer
set digest algorithm and certificate directory for secured subscription system
subscriptions-sign-check-tolerance
set the maximum tolerance (in seconds) of clock skew for secured subscription system
skip signature check for the specified uid when using unix sockets credentials
subscriptions-credentials-check
add a directory to search for subscriptions key credentials
enable management of SCM_CREDENTIALS in subscriptions UNIX sockets
set load balancing algorithm for the subscription system
try to fallback to the next part (dot based) in subscription key
subscribe to the specified subscription server
subscribe to the specified subscription server using advanced keyval syntax
send subscription announce at the specified interval
set tolerance for subscription servers
unsubscribe-on-graceful-reload
force unsubscribe request even during graceful reload
configure subscriptions but do not send them (useful with master fifo)
force the specififed modifier1 when subscribing
enable the embedded snmp server
use uWSGI cache for ssl sessions storage
set SSL sessions timeout (default: 300 seconds)
add an SNI-governed SSL context
check for cert/key/client_ca file in the specified directory and create a sni/ssl context on demand
set ssl ciphers for sni-dir option
set a raw ssl option (numeric value)
add an SNI-governed SSL context (the key is a regexp)
store ssl-related temp files in the specified directory
set the interval (in seconds) of master checks
sleep for the specified number of seconds when a forkbomb is detected
patch the uwsgi binary with a new command (before privileges drop)
patch the uwsgi binary with a new command (after privileges drop)
patch the uwsgi binary with a new command and arguments (before privileges drop)
patch the uwsgi binary with a new command and arguments (after privileges drop)
enable async mode with specified cores
set maximum number of file descriptors (requires root privileges)
log to specified file or udp address after privileges drop
set advanced format for request logging
apply strftime to logformat output
send logs to the specified socket
offload log writing to a thread
add an item in the log encoder chain
add an item in the log req encoder chain
drain (do not show) log lines matching the specified regexp
show only log lines matching the specified regexp
log to the specified named logger if regexp applied on logline matches
log requests to the specified named logger if regexp applied on logline matches
call abort() on segfault/fpe, could be useful for generating a core dump
create a new alarm, syntax: <alarm> <plugin:args>
use main alarm thread rather than create dedicated threads for curl-based alarms
tune the anti-loop alarm system (default 3 seconds)
raise the specified alarm when an fd is read for read (by default it reads 1 byte, set 8 for eventfd)
raise the specified alarm when the segmentation fault handler is executed
raise the specified alarm when the socket backlog queue is full
raise the specified alarm when a log line matches the specified regexp, syntax: <alarm>[,alarm...] <regexp>
skip the specified alarm when a log line matches the specified regexp, syntax: <alarm>[,alarm...] <regexp>
set the max size of an alarm message (default 8192)
delegate logging to master process
set the buffer size for the master logger. bigger log messages will be truncated
create the master logpipe as SOCK_STREAM
create the master requests logpipe as SOCK_STREAM
set logfile name after rotation
prefix logs with date or a strftime string
log requests slower than the specified number of milliseconds
log requests with a 4xx response
log requests with a 5xx response
log requestes bigger than the specified size
report response time in microseconds instead of milliseconds
use the ip from X-Forwarded-For header instead of REMOTE_ADDR
leave master process running as root
run privileges drop after plugin initialization
run privileges drop after apps loading
force the initial working directory to the specified value
override /bin/sh (used by exec hooks, it always fallback to /bin/sh)
chdir to specified directory before apps loading
chdir to specified directory after apps loading
set lazy mode (load apps in workers instead of master)
load apps in each worker instead of the master
set cheap mode (spawn workers only after the first request)
set cheaper mode (adaptive process spawning)
set the initial number of processes to spawn in cheaper mode
choose to algorithm used for adaptive process spawning
number of additional processes to spawn at each overload
increase workers after specified overload
list enabled cheapers algorithms
don't spawn new workers if total resident memory usage of all workers is higher than this limit
if total workers resident memory usage is higher try to stop workers
set idle mode (put uWSGI in cheap mode after inactivity)
load application under mountpoint
load application under mountpoint in the specified worker or after workers spawn
run each worker in prethreaded mode with the specified number of threads
enable virtualhosting mode (based on SERVER_NAME variable)
enable virtualhosting mode (based on HTTP_HOST variable)
add a route based on Host header
add a route based on REQUEST_URI
add a route based on QUERY_STRING
add a route based on REMOTE_ADDR
add a route based on HTTP_USER_AGENT
add a route based on REMOTE_USER
add a route based on HTTP_REFERER
add a routing label (for use with goto)
add a route based on condition
add a route based on condition (negate version)
always run the specified route action
add a final route for the specified status
add a final route based on Host header
add a final route based on REQUEST_URI
add a final route based on QUERY_STRING
add a final route based on REMOTE_ADDR
add a final route based on HTTP_USER_AGENT
add a final route based on REMOTE_USER
add a final route based on HTTP_REFERER
add a final routing label (for use with goto)
add a final route based on condition
add a final route based on condition (negate version)
always run the specified final route action
add an error route for the specified status
add an error route based on Host header
add an error route based on REQUEST_URI
add an error route based on QUERY_STRING
add an error route based on REMOTE_ADDR
add an error route based on HTTP_USER_AGENT
add an error route based on REMOTE_USER
add an error route based on HTTP_REFERER
add an error routing label (for use with goto)
add an error route based on condition
add an error route based on condition (negate version)
always run the specified error route action
add a response route for the specified status
add a response route based on Host header
add a response route based on REQUEST_URI
add a response route based on QUERY_STRING
add a response route based on REMOTE_ADDR
add a response route based on HTTP_USER_AGENT
add a response route based on REMOTE_USER
add a response route based on HTTP_REFERER
add a response routing label (for use with goto)
add a response route based on condition
add a response route based on condition (negate version)
always run the specified response route action
add an error page (html) for managed 403 response
add an error page (html) for managed 404 response
add an error page (html) for managed 500 response
set the frequency (in seconds) of websockets automatic ping packets
set the tolerance (in seconds) of websockets ping/pong subsystem
set the max allowed size of websocket messages (in Kbytes, default 1024)
set the max size of a chunked input part (default 1MB, in bytes)
set default timeout for chunked input
automatically add HTTP headers to response
automatically remove specified HTTP header from the response
store the specified response header in a request var (syntax: header var)
store the specified response header in a request var and remove it from the response (syntax: header var)
check for static files in the specified directory
check for static files in the requested DOCUMENT_ROOT
map mountpoint to static directory (or file)
like static-map but completely appending the requested resource to the docroot
skip specified extension from staticfile checks
search for specified file if a directory is requested
skip security checks if the file is under the specified path
put resolved paths in the uWSGI cache for the specified amount of seconds
use the specified cache for static paths
set mime types file path (default /etc/mime.types)
set the Expires header based on content type
set the Expires header based on content type and file mtime
set the Expires header based on filename regexp
set the Expires header based on filename regexp and file mtime
set the Expires header based on REQUEST_URI regexp
set the Expires header based on REQUEST_URI regexp and file mtime
set the Expires header based on PATH_INFO regexp
static-expires-path-info-mtime
set the Expires header based on PATH_INFO regexp and file mtime
if the supplied regexp matches the static file translation it will search for a gzip version
check for a gzip version of all requested static files
check for a gzip version of all requested static files in the specified dir/prefix
check for a gzip version of all requested static files with the specified ext/suffix
enable support for the HTTP Range header
set the number of offload threads to spawn (per-worker, default 0)
disable sendfile() and rely on boring read()/write()
check for response data in the specified cache (empty for default cache)
set close-on-exec on connection sockets (could be required for spawning processes in requests)
set close-on-exec on server sockets (could be required for spawning processes in requests)
load a daemontools compatible envdir
load a daemontools compatible envdir ASAP
try to remove all of the generated file/sockets
write the specified content to the specified file (syntax: file=value) before privileges drop
put the processes in the specified cgroup
set value in specified cgroup option
set permission for cgroup directory (default is 700)
run in a new namespace under the specified rootfs
keep the specified mountpoint in your namespace
enable PROXY1 protocol support (only for http parsers)
enable REUSE_PORT flag on socket (BSD only)
enable TCP_FASTOPEN flag on TCP sockets with the specified qlen value
use sendto(..., MSG_FASTOPEN, ...) instead of connect() if supported
fallback to normal sockets if the zerg server is not available
enable the zerg server on the specified UNIX socket
add a cron task (key=val syntax)
set the maximum time (in seconds) we wait for cron command to complete
add a cron task runnable only when the instance is a lord of the specified legion
add a unique cron task runnable only when the instance is a lord of the specified legion
run the specified command as worker
run the specified command as worker (after post_fork hook)
attach a command/daemon to the master process (the command has to not go in background)
attach a command/daemon to the master process (the command has to not go in background), when the daemon dies, the master dies too
attach a command/daemon to the master process managed by a pidfile (the command has to daemonize)
attach a command/daemon to the master process managed by a pidfile (the command has to NOT daemonize)
same as --attach-daemon but daemon runs only on legion lord node
same as --smart-attach-daemon but daemon runs only on legion lord node
same as --smart-attach-daemon2 but daemon runs only on legion lord node
do not change the stdin of external daemons to /dev/null
attach-daemon keyval variant (supports smart modes too)
load uWSGI plugins (exit on error)
add a directory to uWSGI plugin search path
try to automatically load plugins when unknown options are found
comma separated list of allowed modifiers
remap request modifier from one id to another
dump the full list of available options
show the current config reformatted as ini
return the content of a resource to stdout for appending to a uwsgi binary (for data:// usage)
simple print (immediate version)
report uWSGI CFLAGS (useful for building external plugins)
dump the uwsgi.h used for building the core  (useful for building external plugins)
dump the uwsgiconfig.py used for building the core  (useful for building external plugins)
build a uWSGI plugin for the current binary
HTTP/1.0 
Status: 
proto/base.c
[WARNING] unable to add %.*s=%.*s to uwsgi packet, consider increasing buffer size
uwsgi_proto_ssl_write()/SSL_write()
uwsgi_proto_ssl_read_body()/SSL_read()
!!! the current protocol does not support request body !!!
invalid request block size: %u (max %u)...skip
uwsgi_proto_suwsgi_parser()/SSL_read()
proto/uwsgi.c
uwsgi_proto_uwsgi_parser()
PROXY 
SERVER_ADDR
SERVER_PORT
REMOTE_PORT
proto/http.c
inet_ntop()
invalid HTTP request
uwsgi_proto_http_parser()
HTTP_
Content-Type: 
X-Forwarded-For: 
Content-Length: 
CONNECTION
KEEP_ALIVE
TRAILER
not enough space in wsgi_req http proto_parser_buf to decode PATH_INFO, consider tuning it with --buffer-size
[WARNING] unable to add HTTP_%.*s=%.*s to uwsgi packet, consider increasing buffer size
invalid HTTP request size (max %u)...skip
uwsgi_proto_http_parser() -> client closed connection
invalid HTTPS request size (max %u)...skip
uwsgi_proto_https_parser()/SSL_read()
uwsgi_proto_https_parser() -> client closed connection
proto/fastcgi.c
uwsgi_proto_fastcgi_parser()
uwsgi_proto_fastcgi_read_body()/realloc()
uwsgi_proto_fastcgi_parser()/realloc()
invalid SCGI request size (max %u)...skip
proto/scgi.c
uwsgi_proto_scgi_parser()
proto/puwsgi.c
*** jailing uWSGI in %s ***
lib/linux_ns.c
UWSGI_JAIL_PID
pid %d ended. Respawning...
sethostname()
/.uwsgi_ns_tmp_mountpoint
mkdir() ns_tmp_mountpoint
mkdir() ns_tmp_mountpoint2
none
remounting /proc
/proc
remounting %s to %s
rmdir()
waiting for jailed master (pid: %d) death...
jailed master process exited and exit-on-reload is enabled, shutting down
your kernel does not support linux pid namespace
/.uwsgi_ns_tmp_mountpoint/.uwsgi_ns_tmp_mountpoint
1.2.8
pcre error: %s at offset %d
pcre (study) error: %s
rtime
core/routing.c
final
response
invalid route syntax
continue
last
break
return
break-with-status
donotlog
logvar
goto
addvar
addheader
delheader
remheader
clearheaders
resetheaders
disableheaders
send
send-crnl
setapp
setuser
sethome
setfile
setscriptname
setmethod
seturi
setremoteaddr
setpathinfo
fixpathinfo
setdocroot
setscheme
setprocname
setmodifier1
setmodifier2
flush
fixcl
forcecl
isfile
isdir
islink
isexec
isequal
startswith
endswith
ishigher
islower
ishigherequal
islowerequal
contains
contain
empty
cookie
mime
httptime
base64
[rule: %llu] label: %s
[rule: %llu] action: %s
[uwsgi-route] invalid addvar syntax, must be KEY=VAL
invalid logvar syntax, must be key=value
uwsgi_router_chdir_func()/chdir()
[uwsgi-route] ERROR "goto" instruction can only jump forward (check your label !!!)
invalid route condition syntax
unable to find "%s" route condition
unable to register route "%s"
*** dumping internal routing table ***
[rule: %llu] subject: %s %s: %s%s action: %s
*** end of the internal routing table ***
*** dumping internal error routing table ***
*** end of the internal error routing table ***
*** dumping internal response routing table ***
*** end of the internal response routing table ***
*** dumping internal final routing table ***
*** end of the internal final routing table ***
invalid collect header syntax, must be <header> <var>
collecting header %.*s to var %s
invalid pull header syntax, must be <header> <var>
pulling header %.*s to var %s
[uWSGI] getting YAML configuration from %s
unable to initialize YAML parser (libyaml)
error parsing YAML file: %s (%c)
unsupported YAML token in %s block
[uWSGI] getting JSON configuration from %s
error parsing JSON data: line %d %s
you must define a object named %s in your JSON data
[uwsgi-ssl] unable to store session of size %d
[uwsgi-ssl] unable to store session of size %d in the cache
[uwsgi-ssl] error removing cache item
[uwsgi-ssl] client certificate verify error: num=%d:%s:depth=%d:%s
unable to write pem data in file %s
uwsgi_write_pem_to_file()/write()
[uwsgi-ssl] unable to initialize context "%s"
[uwsgi-ssl] unable to set requested ciphers (%s) for context "%s"
you have to enable uWSGI cache to use it as SSL session store !!!
cache blocksize for SSL session store must be at least 4096 bytes
[uwsgi-ssl] unable to assign certificate %s for context "%s"
[uwsgi-ssl] unable to assign key %s for context "%s"
[uwsgi-ssl] unable to set ssl verify locations (%s) for context "%s"
unable to load client CA certificate (%s) for context "%s"
invalid RSA signature syntax, must be: <digest>:<pemfile>
unable to load private key: %s
invalid %s syntax, must be sni_key<space>crt,key[,ciphers,client_ca]
[uwsgi-ssl] DANGER unable to initialize context for "%s"
[uwsgi-sni for pid %d] added SSL context for %s
[uwsgi-sni for pid %d] destroyed SSL context for %s
[uwsgi-ssl] cache miss
core/ssl.c
-----BEGIN 
.crt
.key
unknown digest algo: %s
.pem
dead
core/legion.c
[uwsgi-legion] sendto()
unknown legion: %s
EVP_EncryptInit_ex()
EVP_DecryptInit_ex()
arbiter
node_left
[uwsgi-legion] read()
node_joined
[DANGER] you have configured a too much tiny buffer for the scrolls list !!! tune it with --legion-scroll-list-max-size
invalid alarm action syntax, must be: <alarm> <msg>
[uwsgi-legion] EVP_EncryptInit_ex()
[uwsgi-legion] EVP_EncryptUpdate()
[uwsgi-legion] EVP_EncryptFinal_ex()
[uwsgi-legion] invalid udp address: %s
invalid legion-node syntax, must be <legion> <addr>
invalid legion-quorum syntax, must be <legion> <quorum>
invalid legion-scroll syntax, must be <legion> <scroll>
[uwsgi-legion] invalid event: %s
[uwsgi-legion] invalid %s action: %s
[uwsgi-legion] invalid option name (%s), this should not happen (possible bug)
[uwsgi-legion] invalid %s syntax, must be <legion> <action>
[uwsgi-legion] unknown legion: %s
[uwsgi-legion] unable to find algorithm/cipher %s
invalid legion syntax, must be <legion> <addr> <valor> <algo:secret>
[uwsgi-legion] ERROR unable to find legion_action "%s"
[uwsgi-legion] (phase: %s legion: %s) %s
[uwsgi-legion] (phase: %s legion: %s) calling %s
[uwsgi-legion] %s: %.*s valor: %llu uuid: %.*s left Legion %s
[uwsgi-legion] ERROR, node_left hook returned: %d
[uwsgi-legion] invalid packet size: %d
[uwsgi-legion] invalid modifier1
[uwsgi-legion] EVP_DecryptInit_ex()
[uwsgi-legion] EVP_DecryptUpdate()
[uwsgi-legion] EVP_DecryptFinal_ex()
[uwsgi-legion] invalid packet size
[uwsgi-legion] invalid packet
[uwsgi-legion] invalid legion name
[uwsgi-legion] untolerable packet received for Legion %s , check your clock !!!
[uwsgi-legion] %s: %.*s valor: %llu uuid: %.*s joined Legion %s
[uwsgi-legion] ERROR, node_joined hook returned: %d
[uwsgi-legion] %s: %.*s valor: %llu uuid: %.*s announced its death to Legion %s
[uwsgi-legion] ERROR, join hook returned: %d
[uwsgi-legion] --- WE HAVE QUORUM FOR LEGION %s !!! (valor: %llu uuid: %.*s checksum: %llu votes: %d) ---
[uwsgi-legion] --- END OF QUORUM REPORT ---
[uwsgi-legion-node] %s: %.*s valor: %llu uuid: %.*s last_seen: %d vote_valor: %llu vote_uuid: %.*s
[uwsgi-legion] attempting to become the Lord of the Legion %s
[uwsgi-legion] ERROR, lord hook returned: %d
[uwsgi-legion] suspending myself from Legion "%s" for %d seconds
[uwsgi-legion] i am now the Lord of the Legion %s
[uwsgi-legion] a new Lord (valor: %llu uuid: %.*s) raised for Legion %s...
*********** The New Lord Scroll ***********
*********** End of the New Lord Scroll ***********
[uwsgi-legion] ERROR, unlord hook returned: %d
[uwsgi-legion] no quorum: only %d vote(s) for Legion %s, %d needed to elect a Lord
[uwsgi-legion] i cannot be The Lord of The Legion %s without a quorum ...
[uwsgi-legion] action "%s" is already registered !!!
[uwsgi-legion] unable to activate legion %s
[uwsgi-legion] ERROR, setup hook returned: %d
unable to run the legion server !!!
legion manager thread enabled
[uwsgi-legion] ERROR, death hook returned: %d
invalid xml id
eval
domain
[uWSGI] using xml uwsgi id: %s
[uWSGI] could not parse file %s.
[uWSGI] parsing config file %s
[uWSGI] invalid xml config file.
[uWSGI] invalid xml root element, <uwsgi> expected.


;*3$"
b4b84221637bde79b42aa1ff79111d0f2855bf.debug
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
