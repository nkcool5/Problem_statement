/lib64/ld-linux-x86-64.so.2
libpci.so.3
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
pci_free_dev
pci_get_param
pci_filter_match
pci_read_byte
pci_set_name_list_path
pci_alloc
pci_filter_parse_slot
pci_filter_init
pci_walk_params
pci_read_vpd
pci_cleanup
pci_fill_info
pci_lookup_method
pci_read_block
pci_filter_parse_id
pci_get_dev
pci_get_method_name
pci_scan_bus
pci_read_word
pci_set_param
pci_lookup_name
pci_init
pci_setup_cache
libkmod.so.2
kmod_module_get_module
kmod_load_resources
kmod_unref
kmod_module_new_from_lookup
kmod_module_get_name
kmod_list_next
kmod_module_unref_list
kmod_module_unref
kmod_new
libc.so.6
__printf_chk
exit
_IO_putc
optind
strrchr
strncpy
__stack_chk_fail
putchar
realloc
strlen
memset
getopt
__fprintf_chk
stdout
fputc
fputs
memcpy
malloc
optarg
stderr
__snprintf_chk
readlink
fwrite
strchr
__vfprintf_chk
qsort
__sprintf_chk
uname
strcmp
__libc_start_main
free
LIBPCI_3.1
LIBPCI_3.3
LIBPCI_3.0
GLIBC_2.14
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.4
LIBKMOD_5
ATUH
t0f.
[]A\
UH-x
r'w*
t!<"u
AUATSH
[A\A]]
AUATMcf
[]A\A]A^
[]A\A]A^
ATUH
[]A\
AWAVA
AUAT
([]A\A]A^A_
AVAUATUSH
[]A\A]A^
[]A\A]A^H
AVAUI
g USI
[]A\A]A^
U.[]A\
A]A^
AUATUSH
[]A\A]
AUATUSH
[]A\A]
AWAVI
AUATUSH
X[]A\A]A^A_
[]A\A]A^A_
D$HI
\$ A
ARAQD
M+APD
C+WVP
ASPf
ARAQf
\$?A
T$D1
\$(D
T$ A
l$HA
D$NA
ASARAPD
AXAY
AZA[
T$H1
D$(D
L$ D
L$(D
ATUA
[]A\
AWAVI
AUAT
D$"A
l$ A
[]A\A]A^A_
l$ 1
|$ D
AWAVAUATA
[]A\A]A^A_
WAVf
@ASA
|$ A
WARA
WAVf
@ASA
|$ A
WARA
j-j-AQE
H+ASD
G+ARV
j-j-AQE
H+ASD
G+ARV
+AVAUATASARAQAPW
D$hD
D$lD
[]A\A]A^A_
AWAVA
AUATI
s5I9
[]A\A]A^A_
<non
[]A\A]A^A_
AWAVI
God A red nugget A fat egg under a dog
AUATUS
[]A\A]A^A_
ASAR
+APWE
D$TH
t$	L
j-j-APD
F+ASAR
+AQD
 AQA
+PAUUSASARAQAPWV
D$hD
D$dD
K+APWVA
+SAQAUASARAPA
SAQE
J+WV
 AQA
ARAQ
ASAU
\$$L
t$(L
t$0L
t$2L
ARW1
_AXu
t$ L
AWAV1
AUATA
[]A\A]A^A_1
[]A\A]A^A_
[]A\A]A^A_
AWAV
AUATI
T$0dH
[]A\A]A^A_
AYAZ
A[[A
D9l$
ATSH
[A\]
=U~ 
=1~ 
=6} 
=y~ 
ATUH
[]A\
5!| 
5^{ 
AUATI
[]A\A]
[]A\A]
ATUL
[]A\
AVAU
ATUI
H;k0tJH
[]A\A]A^
K,E9
=:z 
AVAUATUA
tHH9
x 9z u
J$;H(r
N,+x$+N$9
%Yx 
[]A\A]A^
;X u
9h(w
9h,r
AUATHc
[]A\A]
AUATI
[]A\A]
AWAVAUATA
([]A\A]A^A_
AVAUATUS
=7s 
[]A\A]A^
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
=>o 
AWAVA
AUATL
[]A\A]A^A_
%04x:
%02x:%02x.%d
 [size=%u%s]
<ignored>
<unassigned>
non-
64-bit
32-bit
type 3
low-1M
	Region %d: 
[virtual] 
I/O ports at 
%04lx
 [disabled]
<invalid-64bit-slot>
%08lx
 (%s, %sprefetchable)
Expansion ROM at 
 [disabled by cmd]
Slot:	
Device:	
Class:	%s
SVendor:	%s
SDevice:	%s
PhySlot:	%s
Rev:	%02x
ProgIf:	%02x
 -r%02x
 -p%02x
 "" ""
 %s: %s
 (rev %02x)
 (prog-if %02x
 [%s]
	DeviceName: %s
	Subsystem: %s
slow
medium
fast
 (prefetchable)
	Physical Slot: %s
	Latency: %d
%dns min
%dns max
, Cache Line Size: %d bytes
	Flags: 
bus master, 
VGA palette snoop, 
stepping, 
fast Back2Back, 
66MHz, 
user-definable features, 
%s devsel
, latency %d
, IRQ %d
	BIST is running
	BIST result: %02x
	I/O window %d: %08x-%08x%s
	Secondary status: SERR
	<access denied to the rest>
%02x:
--version
lspci version 3.3.1
-s: %s
-d: %s
Internal bug: Accessing non-read configuration byte at position %x
lspci: Unable to read the standard configuration space header of device %04x:%02x:%02x.%d
	!!! Invalid class %04x for header type %02x
	!!! Unknown header type %02x
	Control: I/O%c Mem%c BusMaster%c SpecCycle%c MemWINV%c VGASnoop%c ParErr%c Stepping%c SERR%c FastB2B%c DisINTx%c
	Status: Cap%c 66MHz%c UDF%c FastB2B%c ParErr%c DEVSEL=%s >TAbort%c <TAbort%c <MAbort%c >SERR%c <PERR%c INTx%c
	Interrupt: pin %c routed to IRQ %d
	Bus: primary=%02x, secondary=%02x, subordinate=%02x, sec-latency=%d
	!!! Unknown I/O range types %x/%x
	I/O behind bridge: %08x-%08x
	!!! Unknown memory range types %x/%x
	Memory behind bridge: %08x-%08x
	!!! Unknown prefetchable memory range types %x/%x
	Prefetchable memory behind bridge: %08x-%08x
	Prefetchable memory behind bridge: %08x%08x-%08x%08x
	Secondary status: 66MHz%c FastB2B%c ParErr%c DEVSEL=%s >TAbort%c <TAbort%c <MAbort%c <SERR%c <PERR%c
	BridgeCtl: Parity%c SERR%c NoISA%c VGA%c MAbort%c >Reset%c FastB2B%c
		PriDiscTmr%c SecDiscTmr%c DiscTmrStat%c DiscTmrSERREn%c
	Memory window %d: %08x-%08x%s%s
	BridgeCtl: Parity%c SERR%c ISA%c VGA%c MAbort%c >Reset%c 16bInt%c PostWrite%c
	16-bit legacy interface ports at %04x
lspci
\x%02x
Read-only
Read/write
good
large
small
Vital Product Data
		End
		Product Name: 
		%s fields:
			[%c%c] %s: 
%d byte(s) free
		Not readable
		No end tag found
Extended capability
Engineering changes
Manufacture ID
Part number
Reserved
Read-write area
Serial number
Asset tag
Vendor specific
System specific
Unknown
checksum %s, %d byte(s) reserved
		Unknown %s resource type %02x, will not decode more.
		Command: BaseUnitID=%u UnitCnt=%u MastHost%c DefDir%c DUL%c
		Command: BaseUnitID=%u UnitCnt=%u MastHost%c DefDir%c
		Link Control 0: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x IsocEn%c LSEn%c ExtCTL%c 64b%c
		Link Control 0: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x
		Link Config 0: MLWI=%1$s DwFcIn%5$c MLWO=%2$s DwFcOut%6$c LWI=%3$s DwFcInEn%7$c LWO=%4$s DwFcOutEn%8$c
		Link Config 0: MLWI=%s MLWO=%s LWI=%s LWO=%s
		Link Control 1: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x IsocEn%c LSEn%c ExtCTL%c 64b%c
		Link Control 1: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x
		Link Config 1: MLWI=%1$s DwFcIn%5$c MLWO=%2$s DwFcOut%6$c LWI=%3$s DwFcInEn%7$c LWO=%4$s DwFcOutEn%8$c
		Link Config 1: MLWI=%s MLWO=%s LWI=%s LWO=%s
HyperTransport: Slave or Primary Interface
		!!! Possibly incomplete decoding
		Link Error 0: <Prot%c <Ovfl%c <EOC%c CTLTm%c
		Link Frequency Capability 0: 200MHz%c 300MHz%c 400MHz%c 500MHz%c 600MHz%c 800MHz%c 1.0GHz%c 1.2GHz%c 1.4GHz%c 1.6GHz%c Vend%c
		Feature Capability: IsocFC%c LDTSTOP%c CRCTM%c ECTLT%c 64bA%c UIDRD%c
		Link Error 1: <Prot%c <Ovfl%c <EOC%c CTLTm%c
		Link Frequency Capability 1: 200MHz%c 300MHz%c 400MHz%c 500MHz%c 600MHz%c 800MHz%c 1.0GHz%c 1.2GHz%c 1.4GHz%c 1.6GHz%c Vend%c
		Error Handling: PFlE%c OFlE%c PFE%c OFE%c EOCFE%c RFE%c CRCFE%c SERRFE%c CF%c RE%c PNFE%c ONFE%c EOCNFE%c RNFE%c CRCNFE%c SERRNFE%c
		Prefetchable memory behind bridge Upper: %02x-%02x
		Command: WarmRst%c DblEnd%c DevNum=%u ChainSide%c HostHide%c Slave%c <EOCErr%c DUL%c
		Command: WarmRst%c DblEnd%c
		Link Control: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x IsocEn%c LSEn%c ExtCTL%c 64b%c
		Link Control: CFlE%c CST%c CFE%c <LkFail%c Init%c EOC%c TXO%c <CRCErr=%x
		Link Config: MLWI=%1$s DwFcIn%5$c MLWO=%2$s DwFcOut%6$c LWI=%3$s DwFcInEn%7$c LWO=%4$s DwFcOutEn%8$c
		Link Config: MLWI=%s MLWO=%s LWI=%s LWO=%s
		Flags: PMEClk%c DSI%c D1%c D2%c AuxCurrent=%dmA PME(D0%c,D1%c,D2%c,D3hot%c,D3cold%c)
		Status: D%d NoSoftRst%c PME-Enable%c DSel=%d DScale=%d PME%c
		Status: RQ=%d Iso%c ArqSz=%d Cal=%d SBA%c ITACoh%c GART64%c HTrans%c 64bit%c FW%c AGP3%c Rate=%s
		Command: RQ=%d ArqSz=%d Cal=%d SBA%c AGP%c GART64%c 64bit%c FW%c Rate=%s
Slot ID: %d slots, First%c, chassis %02x
MSI: Enable%c Count=%d/%d Maskable%c 64bit%c
		Masking: %08x  Pending: %08x
		Command: DPERE%c ERO%c RBC=%d OST=%d
		Status: Dev=%02x:%02x.%d 64bit%c 133MHz%c SCD%c USC%c DC=%s DMMRBC=%u DMOST=%u DMCRS=%u RSCEM%c 266MHz%c 533MHz%c
		Secondary Status: 64bit%c 133MHz%c SCD%c USC%c SCO%c SRD%c Freq=%s
		Status: Dev=%02x:%02x.%d 64bit%c 133MHz%c SCD%c USC%c SCO%c SRD%c
		Upstream: Capacity=%u CommitmentLimit=%u
		Downstream: Capacity=%u CommitmentLimit=%u
HyperTransport: Host or Secondary Interface
		Link Error: <Prot%c <Ovfl%c <EOC%c CTLTm%c
		Link Frequency Capability: 200MHz%c 300MHz%c 400MHz%c 500MHz%c 600MHz%c 800MHz%c 1.0GHz%c 1.2GHz%c 1.4GHz%c 1.6GHz%c Vend%c
		Feature Capability: IsocFC%c LDTSTOP%c CRCTM%c ECTLT%c 64bA%c UIDRD%c ExtRS%c UCnfE%c
HyperTransport: Interrupt Discovery and Configuration
HyperTransport: Revision ID: %u.%02u
HyperTransport: UnitID Clumping
HyperTransport: Extended Configuration Space Access
HyperTransport: Address Mapping
HyperTransport: MSI Mapping Enable%c Fixed%c
		Mapping Address Base: %016llx
HyperTransport: X86 (reserved)
Debug port: BAR=%d offset=%04x
CompactPCI central resource control <?>
PCI-Express to PCI/PCI-X Bridge
PCI/PCI-X to PCI-Express Bridge
Root Complex Integrated Endpoint
		DevCap:	MaxPayload %d bytes, PhantFunc %d
		DevCtl:	Report errors: Correctable%c Non-Fatal%c Fatal%c Unsupported%c
			RlxdOrd%c ExtTag%c PhantFunc%c AuxPwr%c NoSnoop%c
			MaxPayload %d bytes, MaxReadReq %d bytes
		DevSta:	CorrErr%c UncorrErr%c FatalErr%c UnsuppReq%c AuxPwr%c TransPend%c
		LnkCap:	Port #%d, Speed %s, Width x%d, ASPM %s, Exit Latency L0s %s, L1 %s
			ClockPM%c Surprise%c LLActRep%c BwNot%c ASPMOptComp%c
 Disabled%c CommClk%c
			ExtSynch%c ClockPM%c AutWidDis%c BWInt%c AutBWInt%c
		LnkSta:	Speed %s, Width x%d, TrErr%c Train%c SlotClk%c DLActive%c BWMgmt%c ABWMgmt%c
		SltCap:	AttnBtn%c PwrCtrl%c MRL%c AttnInd%c PwrInd%c HotPlug%c Surprise%c
			Slot #%d, PowerLimit %.3fW; Interlock%c NoCompl%c
		SltCtl:	Enable: AttnBtn%c PwrFlt%c MRL%c PresDet%c CmdCplt%c HPIrq%c LinkChg%c
			Control: AttnInd %s, PwrInd %s, Power%c Interlock%c
		SltSta:	Status: AttnBtn%c PowerFlt%c MRL%c CmdCplt%c PresDet%c Interlock%c
			Changed: MRL%c PresDet%c LinkState%c
		RootSta: PME ReqID %04x, PMEStatus%c PMEPending%c
		DevCap2: Completion Timeout: %s, TimeoutDis%c, LTR%c, OBFF %s
		DevCtl2: Completion Timeout: %s, TimeoutDis%c, LTR%c, OBFF %s
		LnkCtl2: Target Link Speed: %s, EnterCompliance%c SpeedDis%c
			 Transmit Margin: %s, EnterModifiedCompliance%c ComplianceSOS%c
			 Compliance De-emphasis: %s
alula
		LnkSta2: Current De-emphasis Level: %s, EqualizationComplete%c, EqualizationPhase1%c
			 EqualizationPhase2%c, EqualizationPhase3%c, LinkEqualizationRequest%c
Eleele
MSI-X: Enable%c Count=%d Masked%c
		Vector table: BAR=%d offset=%08x
		RootCtl: ErrCorrectable%c ErrNon-Fatal%c ErrFatal%c PMEIntEna%c CRSVisible%c
800-1200mV(full-swing)/400-700mV(half-swing)
200-400mV(full-swing)/100-200mV(half-swing)
		Revision ID: %u.%02u
		Link Frequency 0: %s
		Link Frequency 1: %s
		Bus Number: %02x
bridge
simple
unknown
Not Supported
-6dB
-3.5dB
	Capabilities: 
<access denied>
[%02x] 
<chain looped>
<chain broken>
Power Management version %d
		Bridge: PM%c B3%c
AGP version %x.%x
CompactPCI hot-swap <?>
PCI-X non-bridge device
PCI-X bridge device
		Link Frequency: %s
HyperTransport: Switch
HyperTransport: DirectRoute
HyperTransport: VCSet
HyperTransport: Retry Mode
HyperTransport: #%02x
Hot-plug capable
AGP3 <?>
Secure device <?>
Express 
(v%d) 
Legacy Endpoint
Root Port (Slot%c)
Upstream Port
Downstream Port (Slot%c)
Root Complex Event Collector
Unknown type %d
, MSI %02x
, Latency L0s %s, L1 %s
			ExtTag%c
 AttnBtn%c AttnInd%c PwrInd%c
 RBE%c
 FLReset%c
 SlotPowerLimit %.3fW
 BrConfRtry%c
		LnkCtl:	ASPM %s;
 RCB %d bytes
		RootCap: CRSVisible%c
 ARIFwd%c
, Selectable De-emphasis: %s
		PBA: BAR=%d offset=%08x
SATA HBA v%d.%d
 BAR%d Offset=%08x
 InCfgSpace
 BAR??%d
PCI Advanced Features
		AFCap: TP%c FLR%c
		AFCtrl: FLR%c
		AFStatus: TP%c
#%02x [%04x]
		Address: 
%08x  Data: %04x
Normal Operating Range
2.5GT/s
8GT/s
16GT/s
Disabled
Via message A
Via message B
Via WAKE#
Via message
Via message/WAKE#
50us to 50ms
50us to 100us
1ms to 10ms
16ms to 55ms
65ms to 210ms
260ms to 900ms
1s to 3.5s
4s to 13s
17s to 64s
Range A
Range B
Range AB
Range BC
Range ABC
Range BCD
Range ABCD
not supported
L0s L1
Blink
L0s Enabled
L0s L1 Enabled
<64ns
<128ns
<256ns
<512ns
<1us
<2us
<4us
unlimited
<8us
<16us
<32us
<64us
200MHz
300MHz
400MHz
500MHz
600MHz
800MHz
1.0GHz
1.2GHz
Degas are we not drawn onward no In union drawn onward to new eras aged
1.4GHz
1.6GHz
Vend
8bit
16bit
32bit
4bit
conv
66MHz
100MHz
133MHz
<unknown>
Vendor Specific Information: 
VirtIO: %s
 multiplier=%08x
Len=%02x <?>
CommonCfg
Notify
DeviceCfg
Do nine men interpret Nine men I nod
		BAR=%d offset=%08x size=%08x
	Capabilities: [%03x
 v%d
Advanced Error Reporting
Virtual Channel
??%d
%c%s%c
		Ctrl:	ArbSelect=%s
		Status:	InProgress%c
		VC%d:	
			Arb:
			Port Arbitration Table <?>
Power Budgeting <?>
Root Complex Link
		Link%d:	
			Addr:	%08x%08x
Root Bridge Control Block <?>
ID=%04x Rev=%d Len=%03x <?>
Access Control Services
		IOVSta:	Migration%c
		Initial VFs: %d, 
Total VFs: %d, 
Number of VFs: %d, 
		VF offset: %d, 
stride: %d, 
Device ID: %04x
		Supported Page Size: %08x, 
System Page Size: %08x
Borrow or rob
		Region %d: Memory at 
Transaction Processing Hints
		Extended requester support
		No steering table available
Latency Tolerance Reporting
		Max snoop latency: %lldns
L1 PM Substates
		<unreadable>
		L1SubCap: 
PortTPowerOnTime=
%dus
<error>
Config
MemMapped
		UESta:	DLP%c SDES%c TLP%c FCP%c CmpltTO%c CmpltAbrt%c UnxCmplt%c RxOF%c MalfTLP%c ECRC%c UnsupReq%c ACSViol%c
		UEMsk:	DLP%c SDES%c TLP%c FCP%c CmpltTO%c CmpltAbrt%c UnxCmplt%c RxOF%c MalfTLP%c ECRC%c UnsupReq%c ACSViol%c
		UESvrt:	DLP%c SDES%c TLP%c FCP%c CmpltTO%c CmpltAbrt%c UnxCmplt%c RxOF%c MalfTLP%c ECRC%c UnsupReq%c ACSViol%c
		CESta:	RxErr%c BadTLP%c BadDLLP%c Rollover%c Timeout%c NonFatalErr%c
		CEMsk:	RxErr%c BadTLP%c BadDLLP%c Rollover%c Timeout%c NonFatalErr%c
		AERCap:	First Error Pointer: %02x, GenCap%c CGenEn%c ChkCap%c ChkEn%c
		Caps:	LPEVC=%d RefClk=%s PATEntryBits=%d
		Port Arbitration Table [%x] <?>
Caps:	PATOffset=%02x MaxTimeSlots=%d RejSnoopTrans%c
Beeb
			Ctrl:	Enable%c ID=%d ArbSelect=%s TC/VC=%02x
			Status:	NegoPending%c InProgress%c
Device Serial Number %02x-%02x-%02x-%02x-%02x-%02x-%02x-%02x
		Desc:	PortNumber=%02x ComponentID=%02x EltType=%s
			Addr:	%02x:%02x.%d  CfgSpace=%08x%08x
Root Complex Internal Link <?>
Root Complex Event Collector <?>
Multi-Function Virtual Channel <?>
		ACSCap:	SrcValid%c TransBlk%c ReqRedir%c CmpltRedir%c UpstreamFwd%c EgressCtrl%c DirectTrans%c
		ACSCtl:	SrcValid%c TransBlk%c ReqRedir%c CmpltRedir%c UpstreamFwd%c EgressCtrl%c DirectTrans%c
Alternative Routing-ID Interpretation (ARI)
		ARICap:	MFVC%c ACS%c, Next Function: %d
		ARICtl:	MFVC%c ACS%c, Function Group: %d
Address Translation Service (ATS)
		ATSCap:	Invalidate Queue Depth: %02x
		ATSCtl:	Enable%c, Smallest Translation Unit: %02x
Single Root I/O Virtualization (SR-IOV)
		IOVCap:	Migration%c, Interrupt Message Number: %03x
		IOVCtl:	Enable%c Migration%c Interrupt%c MSE%c ARIHierarchy%c
Function Dependency Link: %02x
%08x (%s-bit, %sprefetchable)
		VF Migration: offset: %08x, BIR: %x
		Interrupt vector mode supported
A Santa lives evil at NASA
		Device specific mode supported
		Steering table in TPH capability structure
		Steering table in MSI-X table
		Reserved steering table location
		Max no snoop latency: %lldns
PCI-PM_L1.2%c PCI-PM_L1.1%c ASPM_L1.2%c ASPM_L1.1%c L1_PM_Substates%c
			  PortCommonModeRestoreTime=%dus 
Desc:	TargetPort=%02x TargetComponent=%02x AssocRCRB%c LinkType=%s LinkValid%c
Config
Egress
Internal
Fixed
WRR32
WRR64
WRR128
TWRR128
WRR256
Fixed
WRR32
WRR64
WRR128
100ns
uname() failed: %m
/lib/modules/%s
<name-too-long>
sysfs.path
	Kernel modules:
	Kernel driver in use: %s
%s %s
Driver:	%s
Module:	%s
lspci: Unable to initialize libkmod context
lspci: Unable to load libkmod resources: error %d
%s/devices/%04x:%02x:%02x.%d/driver
show_driver: sysfs device name too long, why?
lspci: libkmod lookup failed: error %d
+-[%04x:%02x]-
\-[%04x:%02x]-
%02x.%x
-[%02x]-
-[%02x-%02x]-
Tacocat
  %s
## %02x:%02x.%d is a bridge from %02x to %02x-%02x
!!! Bridge points to invalid primary bus.
!!! Bridge points to invalid bus range.
Discovered device %02x:%02x.%d
WARNING: Bus mapping can be reliable only with direct hardware access enabled.
Mapping bus %02x
But it was filtered out.
Summary of buses:
%02x: 
Entered via %02x:%02x.%d
Primary host bus
Secondary host bus (?)
	%02x.%d Bridge to %02x-%02x
 <overlap bug>
 <crossing bug>
dump.name
help
Known PCI access methods:
Known PCI access parameters:
%-20s %s (%s)
Unable to allocate %d bytes of memory
Unknown hardware configuration type %s
No such PCI access method: %s (see `-A help' for a list)
Invalid PCI access parameter syntax: %s
Unrecognized PCI access parameter: %s (see `-O help' for a list)
;*3$"
Usage: lspci [<switches>]
Basic display modes:
-mm		Produce machine-readable output (single -m for an obsolete format)
-t		Show bus tree
Display options:
-v		Be verbose (-vv for very verbose)
-k		Show kernel drivers handling each device
-x		Show hex-dump of the standard part of the config space
-xxx		Show hex-dump of the whole config space (dangerous; root only)
-xxxx		Show hex-dump of the 4096-byte extended config space (root only)
-b		Bus-centric view (addresses and IRQ's as seen by the bus)
-D		Always show domain numbers
Resolving of device ID's to names:
-n		Show numeric ID's
-nn		Show both textual and numeric ID's (names & numbers)
-q		Query the PCI ID database for unknown ID's via DNS
-qq		As above, but re-query locally cached entries
-Q		Query the PCI ID database for all ID's via DNS
Selection of devices:
-s [[[[<domain>]:]<bus>]:][<slot>][.[<func>]]	Show only devices in selected slots
-d [<vendor>]:[<device>][:<class>]		Show only devices with specified ID's
Other options:
-i <file>	Use specified ID database instead of %s
-p <file>	Look up kernel modules in a given file instead of default modules.pcimap
-M		Enable `bus mapping' mode (dangerous; root only)
PCI access options:
-A <method>	Use the specified PCI access method (see `-A help' for a list)
-O <par>=<val>	Set PCI access parameter (see `-O help' for a list)
-G		Enable PCI access debugging
-H <mode>	Use direct hardware access (<mode> = 1 or 2)
-F <file>	Read PCI configuration dump from a given file
nvbxs:d:ti:mgp:qkMDQA:GO:H:F:
8085c36aab9c599c679aa5a8e9c2c0c27fd175.debug
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
