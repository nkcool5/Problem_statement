/lib64/ld-linux-x86-64.so.2
libc.so.6
fflush
strcpy
__printf_chk
setlocale
mbrtowc
strncmp
optind
strrchr
dcgettext
error
mbstowcs
__stack_chk_fail
iswprint
realloc
abort
stdin
_exit
strspn
program_invocation_name
__assert_fail
__ctype_get_mb_cur_max
strtol
calloc
strlen
ungetc
memset
__errno_location
memcmp
getdelim
mempcpy
__fprintf_chk
wcswidth
stdout
lseek
memcpy
fclose
malloc
__strndup
mbsinit
__uflow
nl_langinfo
__ctype_b_loc
getenv
optarg
Borrow or rob
__freading
stderr
wcwidth
__snprintf_chk
fscanf
getopt_long
__strncat_chk
fileno
fwrite
__fpending
strchr
program_invocation_short_name
fdopen
qsort
wcstombs
memmove
bindtextdomain
strcmp
__libc_start_main
fseeko
__overflow
__strtoul_internal
fputs_unlocked
free
__progname
__progname_full
__cxa_atexit
__gmon_start__
GLIBC_2.3
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
AWAVAUATA
D$81
dtb=}
\$8dH3
H[]A\A]A^A_
l$0L
L9|$0t>M
|$0L
ft8L
:%tEL
l$0H
d$(H
|$(H
9"tMH
+t&H
alula
\$0L)
<$Hc
ATUSH
 []A\
<$iI
0<	v
AWAVAUATI
[]A\A]A^A_
v.H)
|$pwN
L$^H
T$pH
t$`L
L$`1
L$ L
|$`A
T$ H
D$`A
L$_H
A[A_
t$`H
$.*LfA
A^A_
A\A]
H;=_
l$NH
D$@H
AYAZ
H+\$`
|$pH
D$ 1
$.*LfD
,$v4
Beeb
D$ H
l$NH
D$@H
D$ H
|$0H
AZA[
|$ H
AXAYH
AWAVA
AUATE1
G(H;G0
[]A\A]A^A_
H;O0s;H
D$x1
D$@=
AWAV
AUATH
H9|$
w?H9G
([]A\A]A^A_
AWAVI
AUATI
([]A\A]A^A_
[]A\A]A^A_
[]A\1
AWAVI
AUAT1
G(H;G0s
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AVAUATUSL
]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
D$(H
T$(H
t$(H
D$ H
T$ H
t$(H
AWAVI
AUATE1
t,H9
[]A\A]A^A_
D$81
L$8dH3
D$ H
D$(H
D$0H
AWAVE
AUATI
L$8H
D$(H
D$XH
D$PdH
D$xD
D$ I
D$<D
T$0D
D$<D
L$|I
T$0M9
T$ H
t$HD
D$@D
T$<D
L$0H
L$|H
L$|D
L$0D
T$<D
t$(H
v L9
T$HH
t$hL
L$XL
T$8A
dH34%(
[]A\A]A^A_
D"D$
s2L9
v2I9
T$0D
s2L9
D$XL
D$PL
l$PL
l$HH
\$pD
L$~H
t$@L
|$hL
l$0D
T$<H
T$0H
48L)
D"D$
L$~D
t$@H
\$pL
|$hL
l$0D
T$<H
t$@L
T$hL
l$0D
T$<D
T$<I
L$~H
\$pD
t$@E1
|$hL
l$0D
l$0M
L$~H
\$pD
t$@L
|$hD
T$<v$A
AWAVI
AUATLc
=sy 
u(AWL
T$(L
L$<H
T$(H
t$0I
[]A\A]A^A_
5}x 
=~x 
ATUSH
[]A\
AWAV
AUATI
L$(L
8[]A\A]A^A_
AWAV
AUATI
s(AR1
D$HH
T$8A
D$,H
\$(M
8[]A\A]A^A_
D$81
L$8dH3
ATUI
D$81
T$8dH3
@[]A\
D$81
D$ H
D$(H
t$8dH34%(
D$x1
T$PH
D$@H
T$XH
T$ H
D$HH
T$`H
T$(H
T$hH
T$0H
\$xdH3
D$81
L$ H
L$(H
L$0t2H
t$(H
T$0H
|$8dH3<%(
AWAVAUATM
AQAUATAWAVL
L$0L
([]A\A]A^A_
[]A\A]A^A_H
[]A\A]A^A_1
[]A\A]A^A_
([]A\A]A^A_
ATAWAVL
D$ H
Eleele
([]A\A]A^A_
AUATAWAVL
D$X1
D$XdH3
D$@L
L$Ht7
)D$P
)L$`
)T$p
=eh 
AWAVAUATUSH
uCE1
dH3<%(
([]A\A]A^A_
<Dtw<i
<Btk
AWAVAUATUSH
dH3<%(
([]A\A]A^A_
5wS@
ATUH
t)[]A\
[]A\
8	[]A\
AWAV
AUATUSH
=c\ 
[]A\A]A^A_
charset.
aliaf
L$PH
D$PI
t$PM
ATUSH
u0[]A\
[]A\
G H9G(u
ATUA
[]A\
AWAVA
AUATL
%.P 
-.P 
[]A\A]A^A_
KMGTPEZY
KMGTPEZY0
invalid unit size: %s
invalid number: %s
invalid suffix in input: %s
(error)
trimming suffix %s
no valid suffix found
  suffix power=%d^%d = %Lf
  returning value: %Lf (%LG)
0%ld
double_to_human:
  returning value: %s
  After padding: %s
numfmt
UNIT options:
test invocation
Multi-call invocation
sha224sum
sha2 utilities
sha256sum
sha384sum
sha512sum
%s online help: <%s>
GNU coreutils
Left
Right
/usr/share/locale
--from
--to
--round
invalid padding value %s
multiple field specifications
invalid header value %s
--invalid
Assaf Gordon
failed to set locale
format %s has no %% directive
format %s ends in %%
error reading input
from-unit
to-unit
padding
suffix
grouping
delimiter
field
Degas are we not drawn onward no In union drawn onward to new eras aged
-debug
header
format
zero-terminated
help
version
abort
fail
warn
ignore
down
from-zero
towards-zero
nearest
none
iec-i
auto
value too large to be converted: %s
rejecting suffix in input: %s (consider using --from)
missing 'i' suffix in input: %s (e.g Ki/Mi/Gi)
  no scaling, returning (grouped) value: %'.*Lf
  no scaling, returning value: %.*Lf
setting Auto-Padding to %ld characters
simple_strtod_human:
  input string: %s
  locale decimal-point: %s
  MAX_UNSCALED_DIGITS: %d
  parsed numeric value: %Lf
  input precision = %d
  Auto-scaling, found 'i', switching to base %d
invalid suffix in input %s: %s
large input value %s: possible precision loss
value/precision too large to be printed: '%Lg/%lu' (consider using --to)
A Santa lives evil at NASA
value too large to be printed: '%Lg' (consider using --to)
value too large to be printed: '%Lg' (cannot handle values > 999Y)
failed to prepare value '%Lf' for printing
  scaled value to %Lf * %0.f ^ %u
  after rounding, value=%Lf * %0.f ^ %u
formatting output:
  value: %Lf
  humanized: %s
Try '%s --help' for more information.
Usage: %s [OPTION]... [NUMBER]...
Reformat NUMBER(s), or the numbers from standard input if none are specified.
Mandatory arguments to long options are mandatory for short options too.
      --debug          print warnings about invalid input
  -d, --delimiter=X    use X instead of whitespace for field delimiter
      --field=FIELDS   replace the numbers in these input fields (default=1)
                         see FIELDS below
      --format=FORMAT  use printf style floating-point FORMAT;
                         see FORMAT below for details
      --from=UNIT      auto-scale input numbers to UNITs; default is 'none';
                         see UNIT below
      --from-unit=N    specify the input unit size (instead of the default 1)
      --grouping       use locale-defined grouping of digits, e.g. 1,000,000
                         (which means it has no effect in the C/POSIX locale)
      --header[=N]     print (without converting) the first N header lines;
                         N defaults to 1 if not specified
      --invalid=MODE   failure mode for invalid numbers: MODE can be:
                         abort (default), fail, warn, ignore
      --padding=N      pad the output to N characters; positive N will
                         right-align; negative N will left-align;
                         padding is ignored if the output is wider than N;
                         the default is to automatically pad if a whitespace
                         is found
      --round=METHOD   use METHOD for rounding when scaling; METHOD can be:
                         up, down, from-zero (default), towards-zero, nearest
      --suffix=SUFFIX  add SUFFIX to output numbers, and accept optional
                         SUFFIX in input numbers
      --to=UNIT        auto-scale output numbers to UNITs; see UNIT below
      --to-unit=N      the output unit size (instead of the default 1)
  -z, --zero-terminated    line delimiter is NUL, not newline
      --help     display this help and exit
      --version  output version information and exit
  none       no auto-scaling is done; suffixes will trigger an error
  auto       accept optional single/two letter suffix:
               1K = 1000,
               1Ki = 1024,
               1M = 1000000,
               1Mi = 1048576,
  si         accept optional single letter suffix:
               1K = 1000,
               1M = 1000000,
               ...
  iec        accept optional single letter suffix:
               1K = 1024,
               1M = 1048576,
               ...
  iec-i      accept optional two-letter suffix:
               1Ki = 1024,
Do nine men interpret Nine men I nod
               1Mi = 1048576,
               ...
FIELDS supports cut(1) style field ranges:
  N    N'th field, counted from 1
  N-   from N'th field, to end of line
  N-M  from N'th to M'th field (inclusive)
  -M   from first to M'th field (inclusive)
  -    all fields
Multiple fields/ranges can be separated with commas
FORMAT must be suitable for printing one floating-point argument '%f'.
Optional quote (%'f) will enable --grouping (if supported by current locale).
Optional width value (%10f) will pad output. Optional zero (%010f) width
will zero pad the number. Optional negative values (%-10f) will left align.
Optional precision (%.1f) will override the input determined precision.
Exit status is 0 if all input numbers were successfully converted.
By default, %s will stop at the first conversion error with exit status 2.
With --invalid='fail' a warning is printed for each conversion error
and the exit status is 2.  With --invalid='warn' each conversion error is
diagnosed, but the exit status is 0.  With --invalid='ignore' conversion
errors are not diagnosed and the exit status is 0.
Examples:
  $ %s --to=si 1000
            -> "1.0K"
  $ %s --to=iec 2048
           -> "2.0K"
  $ %s --to=iec-i 4096
           -> "4.0Ki"
  $ echo 1K | %s --from=si
           -> "1000"
  $ echo 1K | %s --from=iec
           -> "1024"
  $ df -B1 | %s --header --field 2-4 --to=si
  $ ls -l  | %s --header --field 5 --to=iec
  $ ls -lh | %s --header --field 5 --from=iec --padding=10
  $ ls -lh | %s --header --field 5 --from=iec --format %%10f
http://www.gnu.org/software/coreutils/
Report %s translation bugs to <http://translationproject.org/team/>
Full documentation at: <%s%s>
or available locally via: info '(coreutils) %s%s'
the delimiter must be a single character
--grouping cannot be combined with --format
no conversion option specified
invalid format %s (width overflow)
--format padding overriding --padding
invalid precision in format %s
invalid format %s, directive must be %%[0]['][-][N][.][N]f
format %s has too many %% directives
format String:
  input: %s
  grouping: %s
  padding width: %ld
  alignment: %s
  prefix: %s
  suffix: %s
God A red nugget A fat egg under a dog
grouping cannot be combined with --to
grouping has no effect in this locale
--header ignored with command-line input
failed to convert some of the input numbers
invalid byte or character range
byte/character positions are numbered from 1
invalid range with no endpoint: -
byte/character offset %s is too large
invalid byte/character position %s
missing list of byte/character positions
invalid field range
fields are numbered from 1
invalid decreasing range
0123456789
field number %s is too large
invalid field value %s
missing list of fields
8.25
invalid argument %s for %s
ambiguous argument %s for %s
Valid arguments are:
  - %s
, %s
write error
%s: %s
A NULL argv[0] was passed through an exec system call.
/.libs/
literal
shell
shell-always
shell-escape
shell-escape-always
c-maybe
clocale
%s (%s) %s
%s %s
Tacocat
Written by %s.
Written by %s and %s.
Written by %s, %s, and %s.
Report bugs to: %s
bug-coreutils@gnu.org
%s home page: <%s>
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Written by %s, %s, %s,
and %s.
Written by %s, %s, %s,
%s, and %s.
Written by %s, %s, %s,
%s, %s, and %s.
Written by %s, %s, %s,
%s, %s, %s, and %s.
Written by %s, %s, %s,
%s, %s, %s, %s,
and %s.
Written by %s, %s, %s,
%s, %s, %s, %s,
%s, and %s.
Written by %s, %s, %s,
%s, %s, %s, %s,
%s, %s, and others.
General help using GNU software: <http://www.gnu.org/gethelp/>
Copyright %s %d Free Software Foundation, Inc.
memory exhausted
lib/xstrtol.c
0 <= strtol_base && strtol_base <= 36
xstrtol
xstrtoumax
/usr/lib/x86_64-linux-gnu
ASCII
CHARSETALIASDIR
%50s %50s
;*3$"
56411dcadcfc08cadf30830f45e6ad18093eea.debug
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
