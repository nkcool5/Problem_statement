/lib64/ld-linux-x86-64.so.2
|fUa
libpcre.so.3
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
pcre_study
_fini
pcre_free
pcre_exec
pcre_compile
libz.so.1
inflateInit2_
deflate
deflateBound
deflateInit2_
inflate
inflateInit_
crc32
inflateEnd
deflateEnd
deflateInit_
libresolv.so.2
ns_initparse
__res_query
ns_parserr
__dn_expand
libpthread.so.0
pthread_cond_init
pthread_mutex_destroy
pthread_self
pthread_mutex_init
pthread_cond_wait
pthread_exit
pthread_cond_destroy
pthread_mutexattr_settype
fsync
__errno_location
pthread_key_delete
raise
pthread_mutex_lock
pthread_mutexattr_init
pthread_setspecific
pread64
pthread_cond_signal
lseek64
fcntl
pthread_create
pthread_join
sigaction
pthread_getspecific
funlockfile
pthread_mutexattr_destroy
pthread_key_create
connect
pthread_cond_broadcast
flockfile
pthread_mutex_unlock
waitpid
librt.so.1
clock_gettime
libc.so.6
strcasestr
socket
__xpg_basename
mkdtemp
fflush
strcpy
gmtime_r
__printf_chk
execl
_IO_putc
setlocale
srand
gai_strerror
strncmp
dcngettext
strrchr
regexec
pipe
__strdup
perror
dcgettext
__open64_2
ftruncate64
getpwuid
mmap64
closedir
ftell
__read_chk
fork
sigprocmask
regfree
__stack_chk_fail
unlink
putchar
mkdir
realloc
abort
stdin
memchr
strpbrk
getpid
kill
strspn
bind_textdomain_codeset
strftime
chmod
__assert_fail
localtime_r
gmtime
strtol
isatty
feof
strchrnul
symlink
fgetc
execlp
fgets
getpwnam
calloc
strlen
ungetc
setitimer
sigemptyset
getaddrinfo
memset
dirname
strstr
strcspn
rmdir
tcsetattr
fseek
chdir
memcmp
getpagesize
getnameinfo
getdelim
dup2
clearerr
unsetenv
__fxstat64
shutdown
poll
__fprintf_chk
sigaddset
putenv
stdout
fputc
fputs
regerror
memcpy
freopen64
fclose
__memmove_chk
__strtol_internal
__vsnprintf_chk
strtoul
setsockopt
malloc
umask
strcasecmp
__lxstat64
__uflow
nl_langinfo
opendir
__xstat64
__ctype_b_loc
getenv
sscanf
regcomp
stderr
ioctl
munmap
_obstack_newchunk
__snprintf_chk
__memset_chk
getuid
readlink
fscanf
getpgid
execvp
strncasecmp
drand48
fileno
gethostname
getcwd
fwrite
fread
iconv_close
gettimeofday
rename
mkstemp64
__memcpy_chk
srand48
__fread_chk
localtime
strchr
obstack_free
utime
__vfprintf_chk
mktime
iconv
fdopen
readdir64
qsort
iconv_open
tcgetattr
sleep
__strcpy_chk
freeaddrinfo
setvbuf
setsid
getrlimit64
memmove
uname
fopen64
_obstack_begin
bindtextdomain
access
memmem
strcmp
tcgetpgrp
__libc_start_main
ferror
__strtoul_internal
sysconf
__cxa_atexit
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.9
ZLIB_1.2.0
GLIBC_2.3.2
GLIBC_2.3
GLIBC_2.7
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
ATU1
=9)<
|$ H
.rej
t$ H
=/(<
HcC<H
dH34%(
[]A\
AWAVAUATUSH
umA9
[]A\A]A^A_
t$HH
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
T$ H
D$(H
D$@H
D$$0
AUATI
9-u<D
:=upA
:=u5A
Bu"H
AWAVAUATUSH
t$8dH
|$81
t$8H
d$@H
\$8H
D$Pd2
D$PL
D$8H
t$0H
T$,L
t$@Lc
HcT$0I
|$@H
HcT$0H
D$@H
HcT$
D$8H
D$@H
[]A\A]A^A_
D$Hp\}
D$Xp\}
D$8L
\$8H
D$8H
AWAVAUATUSH
[]A\A]A^A_
pu A
[]L)
A]A^A_
cutA
AUATA
 t%H
[]A\A]
D$(%
AWAVI
AUATE1
E9l$
[]A\A]A^A_
E9l$
E9l$
|$`H
ATUH
$p\}
A9\$
 []A\
D$(1
L$(dH3
AWAVI
AUATI
|$@H
D$HE
|$HE1
\$(L
5!	<
T$<H
9\$H
\$(H
[]A\A]A^A_
D$Hp\}
D$Xp\}
D$XH
Hc|$H
~SE1
Hc|$H
\$,L
t$ L
D$(f
/tgE1
D$ L
D$ y
D$ H+
\$,H
L$XH
D$XJ
dH34%(
ATUH
 []A\
T$yH
L${@
AUAT
D$X1
t$pL
T$XdH3
h[]A\A]
t$pL
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$(1
D$(dH3
AVAUA
ATUH
t$PH
[]A\A]A^
ATU1
[]A\
AVAUATUSH
D$X1
<Ety<V
L$XdH3
`[]A\A]A^
AUATA
[]A\A]
[]A\A]
ATUH
 []A\
ATUE1
 []A\
AUATUSH
dH34%(
[]A\A]
AUAT1
D$0d2
|$@1
|$`H
L$(H
|$ L)
|$0H
[]A\A]
AWAVAUATI
[]A\A]A^A_
]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
HUSH
D$(1
D$ d2
|$ H
D$ H
\$(dH3
8[]A\A]A^A_
AUATI
[]A\A]
|$P1
|$P1
gtbH
ATUI
 []A\
AWAV
AUATA
D$ d2
T$pH
D$@d2
D$`d2
D$XL
t$PH
|$pH
T$PL
t$PH
D$XH
T$XH
D$XH
|$p1
t$PH
[]A\A]A^A_
T$pH
AWAV
AUATI
USE1
[]A\A]A^A_
D$ p\}
|$ I
l$ H
D$@d2
D$`d2
|$PL
|$01
|$p1
|$pL
AUAT1
$p\}
([]A\A]
tDUSH
ATUH
tUH)
=%4;
[]A\
[]A\H
=l3;
5g3;
AUATI
[]A\A]
|$XH
tuH9
AUATA
[]A\A]
D@0H
AWAVAUATA
[]A\A]A^A_
[]A\A]A^A_
ATUS
t;Lc5");
]A\A]A^
]A\A]A^
AUATI
AUATI
[]A\A]
D$ I
D$([]A\
AWAVI
AUATI
|$ L
D$X1
T$HH
D$(H
l$ I
D$0I
D$8I
D$@I
D$HI
Lcl$
D$XdH3
h[]A\A]A^A_
H9L$
AUATI
[]A\A]
]A\A]
AVAUI
ATUI
 []A\A]A^
AUATI
[]A\A]
T$ H
AWAVAUATUSH
[]A\A]A^A_
AWAVA
AUATI
E<@uHL
[]A\A]A^A_
xXIc
T$ L
t$ L
itgH
[]A\
;[]A\
AVAUATUSu
[]A\A]A^
[]A\A]A^
uX[1
]A\A]A^
AVAUATUSH
 []A\A]A^
<$,t9L
tLHc
uBATL
[]A\
/t6H
AWAVAUATUS1
L$(H
t$ H
LcD$8E1
gfff
dH3<%(
[]A\A]A^A_
|$@H
|$@I
ubL;
c0trL
D$ H
8HcD$<H
ATUH
^(1969-1
0-9]
D$`H
2-31|197H
D$hH
0-01-01)H
D$pH
 [0-2][0H
D$xH
-9]:[0-5H
][0-9]:0H
0(\.0+)?H
 ([-+][0H
-2][0-9]H
:?[0-5][H
dH34%(
[]A\
HcD$(H
HcT$(
t$`H
ATUH
[]A\
T$0H
t[[]A\
T$0H
I;D$0u+H
AWAVI
AUATI
D$(1
D$ d2
L$<H
\$(dH3
8[]A\A]A^A_
AWAVI
AUATUSH
D$PH
Lc`<H
D$@D
D$P1
D$PH
[]A\A]A^A_
L$DH
T$DD
L9t$XD
H+l$XH
\$PH
|$8H
\$PL
\$XH
L$@E
D$@D
l$(H
l$ H
\$(A
L$xH
l$`H
|$h1
L$DE1
\$hL
T$HD
L$DH
T$HH
l$hH
D$xH
D$HH
|$`I
D$HI
|$xL
w*H9
D$pH
D$pI
D9t$h
\$`D
l$hD
L$HH
t$HH
D$pH
H;D$0r
H;D$8
H)D$ H
\$8H9\$0vvL
\$8H
H;\$0
D9l$`
l$HD
l$`L
L$DH
t$HH
d$HH9
\$HH
=<f;
D$PH
|$8H98u
|$0H9x
L$0H
T$8E
,$H)
Hcl$
E(H9
4+Hc
|$XM
v	E8
T$DD
H+l$XH
t%H+l$XH
D$H1
\$xH9
Hcu<H
HcM<H
AWAVAUATUSH
=(\;
D$`d2
|$PL
|$pD
t$@L
T$@H
|$ L
D$PH
|$ A
D$pE
D$xH
K<@E
dH34%(
[]A\A]A^A_
5?S;
|$PL
|$pL
=3N;
AWAVAUATUS
t$xH
H;D$
L)l$
52I;
C<@t
L)l$
l$(I
l$@A
D$ H
t$< 
HcD$(
D$0I
D$ +D$@
t$@L
|$(A
|$(J
T$0H
D)|$
t$@L
D$0Hc
=gE;
L$xH)
|$`L
d$hE1
D$pM
D$@L
D$ D
|$`L
d$hL
\$`L
L$@L
D$HL
\$`u
D$(A
H<Hc
x0I)
|$8L
|$0L
\$PH
D$(H
L$XI
< uh
D$ I
\$HD
D$@L
~r<\t
L$ L
L$ D
L$ L
H;D$
d$hL
D$pL
D$xM)
thL)
D$xJ
%I3;
[]A\A]A^A_
F~	A
<	~#A
h@8U
D$xH
HcP<H
AXAY
%_,;
=^);
D$HH
x	A9
AVAUA
D$X}
D$p 0U
[]A\A]A^
AVAUA
|$0H
L$0D
D$0	
D$4o
D$@H
D$H01X
D$p	
L$ L
|$$H
|$$1
|$ 1
8AtO
|$ 1
[]A\A]A^
D$ H
D$XQ
D$`H
G`Hc
BHD)
D$X1
L$ H
T$ L
T$HH
T$XdH3
Gx H
F0t,H
dH34%(
AWAVI
AUATM
D$h1
|$ H
T$ H
D$(H
|$@H)
T$0H
D$8H
t$PH
T$XH
D$hdH3
x[]A\A]A^A_
G@Hc
ATUI
[]A\
tJH9
t4H9
AWAVAUATUSH
t$ H
|$(9
D$(H
D$(H
D$ H
D$ H
8[]A\A]A^A_
D$ H
AVAUH)
ATUSI;@
[]A\A]A^
ATUI
$[]A\
[]A\
ATUH
[]A\
[]A\
[]A\
AWAVAUATUSH
 A9m
[]A\A]A^A_
AUATM
T$ H
d$(H
T$89
|$@M
T$@H
[]A\A]
AWAVAUATI
D$(1
t$ H
t$ Hc
D$(dH3
8[]A\A]A^A_
@uoH
AUATI
[]A\A]
AVAUI
ATUH
[]A\A]A^
]A\A]A^
AVAUI
ATUI
[]A\A]A^
<Tt8<At4
L$8H
L$@H
AVAUI
ATUSH
[]A\A]A^
AWAVI
AUATI
P(dH
D$x1
~GA9
|$xdH3<%(
[]A\A]A^A_
AWAVA
AUATI
[]A\A]A^A_
[]A\A]A^A_
AUATL
f8USH
([]A\A]
AWAV
AUATI
u-f.
H+D$
D9-C
D$XH
D$HL
H;D$HH
\$H1
H;S(
D$ H
t$8H
D$01
t$ H
l$(u$
T$8L
t$81
L$(A
[]A\A]A^A_
D$HH
D$`H
\$(H
|$(H
D$(H9
D$HH
t$8H
t$ H
D$(J
t$ H
t$hH
D$(H
L$xH
D$pH
D$0H
D$hH
\$hH
D$hH
D$0H
l$ H
D$TH
|$0H
t$ H
tRf.
l$ E
D$TH
l$@L
l$@H
t$8H
D$8H
D$@H
D$@H
\$hH
L$@H
D$pH
L$xH
t$hH
D$0H
D$8H
t$ H
D$@H
D$@L
D$(I
T$0H
T$ M
T$ H
T$ M
PTHc
\$<%
 u'H
D$ I
t$ E
D$HD
D%Ra:
T$(H
D$ H
D$0E
\$ D
T$(H
\$ I
Hc|$
Lcl$
PTHc
 t!L
AVAUI
F[]A\A]A^H
]A\A]A^
]A\A]A^
]A\A]A^
AUATUSH
D$0d2
D$Pd2
D$pd2
L$0H
|$@1
T$PH
t$0H
t$01
D$0H
[]A\A]
AWAVI
AUATA
T$HH
L$ H
T$pH
T$<H
L$DH
T$TH
T$XH
T$dH
T$hH
T$\H
T$TA
D$pH
D$lH
[]A\A]A^A_
=eG:
=OG:
d$(H
T$ L
T$ t
A[A\H
L$hH
D$pE
T$ E
t$8L
D$0|MU
L$(H
L$(H
D$tE1
D$lD
|$(H
D$0L
D$@L
D$8H9
D$HH
T$@L
T$@9
|$0H
t$(H
t$(H
T$0H
t$(H
T$|H
t$xH
t$xE
t$|E
t$8L
T$ H
AVAUATUSH
<$/t1H
d$ A
[]A\A]A^
ATUI
[]A\
ATUI
[]A\
AVAUL
ATUI
[]A\A]A^
ATUI
D$(1
D$ d2
D$(dH3
0[]A\
AWAV
AUATI
d$PM
t$hH
D$@d2
|$0L
L$`E
|$@E
\$TM
D$@d2
L$ L
[]A\A]A^A_
D$@d2
\$0H
T$ H
T$ H
D$ H
t$p1
t$p1
|$pH
l$ L
D$h(`U
T$ H
AVAUA
XZtcH
[]A\A]A^
AWAVI
AUATI
D$X1
D9d$
L;|$
D9d$
L$XdH3
h[]A\A]A^A_
D;d$
|$ E
|$@1
|$ D
L$0t
D$PH
|$@1
L$@H
t$ H
T$(H
D$0H
L$ H
L$HH
t$@H
T$HH
L$(H
L$PH
D$PH
AWAVAUATUSH
D$X1
L$XdH3
h[]A\A]A^A_
|$0I
\$8H
(9\$8
D$HH
T$,L
F(AQE1
D$HA
AUATI
d$P1
=U|:
[]A\A]
|$ 1
L$@L
=O{:
5L{:
D$0H
|$ 1
D$ H
D$(H
t$ H
L$(H
D$0H
T$0H
D$h1
D$ H
L$(H
\$8L
D$0H
D$hdH3
ATUI
D$H1
l$ 1
=<x:
5;x:
L$HdH3
P[]A\
l$ A
ATUA
D$(1
\$(dH3
0[]A\
D$ d2
D$ H
AUATI
[]A\A]
5_s:
5Bs:
5)s:
AWAVE1
AUATUSH
%m/=
4(E9n<uuH
([]A\A]A^A_
[]A\A]A^A_
AWAV
AUATA
D$4H
D$8H
D$<H
D$0H
L$8D
t$,H
|$,H
l$0H
\$,H
D$Pd2
D$pd2
52l:
T$PE
D$pH
|$`1
T$`H
t$@H
L$HH
D$PH
T$@H
T$hH
t$`H
L$hH
T$HH
T$pH
D$pH
T$,E
[]A\A]A^A_
%0o:
t1E9n<
A<A;F<L
D9=k&=
56n:
AUATHc
-j%=
[]A\A]
AWAV
AUATU
A49C4t)
([]A\A]A^A_
AUAT
[]A\A]H
ATUH
 []A\
ATUI
 []A\
ATUI
\$0dH
D$HH
[]A\
5aB:
[]A\
AWAV
AUATI
t$8H
]A\Hc
@uYH
=\]:
}XD9
L;|$
L$@L
D$pd2
d$`H
L$P1
[]A\A]A^A_
D$`H
L;t$
|$p1
D$X9
L$8L
D$`L
L$P1
D$XH
L;l$ M
=4B:
|$@L
t$(L
D$pH
T$`H
|$@A
=X=:
=^;:
AVAUI
ATUI
F[]A\A]A^H
t@[L
]A\A]A^
]A\A]A^
]A\A]A^
]A\A]A^
D$h1
|$@H
T$ H
|$@H
|$@1
D$hdH3
AVAUATU
D$ d2
|$ H
[]A\A]A^
AWAVAUATUSH
D$81
l$ H
D$0d2
l$ I
L$8dH3
H[]A\A]A^A_
5Y0:
AWAVAUATUSH
D$Pd2
D$ H
D$pd2
d$ A
|$`D
t$pH
D$pH
t$pH
D$pH
l$@H
|$PH
??uT
t$HH
D$ E
T$hH
D$hH
D$pD
D$hH
D8#t!H
D$`H
T$hH
D$`E
T$hH
D$hH
D$pD
D$hH
|$`A
T$hH
D$(H
D$(H
D$6H
Hct$0H
t$ 1
|$ H
[]A\A]A^A_
*t2L
L$ E
L$0f
t$H1
d$7H
\$8I
\$8E
D$7A8
\$8E
D$(1
v#Hc
\$(dH3
AWAV
AUATA
D$@d2
/t?H
t$@H
HcD$
9\$Xv%H
D$PE
|$P1
dH34%(
[]A\A]A^A_
L$,H
AWAV
AUATA
D$Pd2
D$pd2
D$(H
T$`H
D$`E1
d$@H
D$PH
t$PL
/t>E1
[]A\A]A^A_
D$`1
d$@H
t$0H
 []A\
AWAVI
AUATUSH
D$8%
D$8%
[]A\A]A^A_
D$8%
ATUI
D$81
L$8dH3
@[]A\
|$ H
D$0d2
AWAVAUATI
D$X%
$Lcs
Mc|$
D$X%
Hct$
D$0d2
</t5H
[]A\A]A^A_
AWAVAUATI
D$`d2
t$DL
/t-I
</t	
<:t	H
,$I)
L$ H
|$p1
|$P1
|$`H
D$`H
t$DH
L$DE
D$pH
[]A\A]A^A_
T$ I
D$8H
D$ H
t$(L
T$(H
AVAU
ATUA
l$pH
D$ d2
D$p	
D$x?
t$ H
|$PH
[]A\A]A^
AUATI
[]A\A]
]A\A]
[]A\A]
AWAVAUATI
D$x1
D$0d2
t$`I
t$(H
l$ H
t$(H
L$(H
|$@L
D$pH
\$xdH3
[]A\A]A^A_
t$@L
D$(H
|$ H
D$(H
L$ H
D$(H
D$(H
?-uz
|$ 1
D$(H
L$ H
T$0H
|$ 1
T$ H
T$(H
D$(H
T$ H
T$(H
D$(H
D$(L
D$(L
AVAUI
[]A\A]A^
ou<A
AUATI
[]A\A]
]A\A]
[]A\A]
[]A\A]
[]A\A]
l$0H
AVAUATUSH
[]A\A]A^
AWAVLc
AUATUSH
tPHc
t5A9
[]A\A]A^A_
[]A\A]A^A_
AUATI
([]A\A]
txH)
AWAVA
AUATI
D$X1
|$0A
T$8E
L$XdH3
h[]A\A]A^A_
Hct$8
|$0H
|$0L
G;@t
t$0L
Hct$8
ATUA
 []A\
ATUA
\$0I
$u	H
D$ H
[]A\
AWAVI
AUAT
t$ H
T$(H
D$Pd2
D$pd2
T$8H
T$`H
|$`1
T$hH
T$hH9
|$@H
t$HH
T$PH
|$`1
|$`E1
D$(H
Y^ut
[]A\A]A^A_
8au"
=vj9
d$pH
#;@!$%^&
 u[f
|$`1
|$`1
T$ L
|$`L
ATUH
A\XtU1
T$`L
|$`1
|$`1
|$`1
AWAVAUATI
D$0d2
D$Pd2
D$pd2
[]A\A]A^A_
L$@H
D$0L
t$ H
L$0H
A:T$
H+T$0I
L$`H
t$8H
|$@H
L$ L
A\A_
L$ H
L$@H
AZA[
D$ H
T$(H
D$(A
D$(H
d$0H
AUATUSH
<.t_f
<.t#Hc
dH34%(
([]A\A]
ATUH
[]A\
ATUH
[]A\
[]A\
AUATI
[]A\A]
-`K9
t+[1
[]A\
AVAUI
ATUH
>/t0M
=YG9
[]A\A]A^
D$Pd2
|$@L
|$@1
|$@1
l$ H
D$(L
d$ H
D$(H
D$ I9
D$0H
D$@H
AVAUA
L$pD
D$tv
D$ d2
D$@d2
D$`d2
l$0H
\$PL
[]A\A]A^
D$`d2
L$`H
l$0H
\$PL
\$PH
D$X1
\$XdH3
AWAVAUATI
D$(1
T$(dH3
8[]A\A]A^A_
u1H9P(
AUATUSH
[]A\A]1
AWAVAUATUSH
t$$H
t$0E1
|$0M
;-B09
D$XH
t$0L
[]A\A]A^A_
5\.9
t$0H
|$0H
t$`H
|$0H
l$(E1
t$0L
=oz9
AUATA
D$@X
D$hT?U
L$ E1
[]A\A]
:-u;
AWAVAUATUS
[]A\A]A^A_
t$0H
t$pL
|$PH
t$pL
t$pL
AWAVI
AUATM
d$`L
l$hD
tGLc
[]A\A]A^A_
([]A\A]A^A_
AWAVAUATA
\$,H
l$8H
[]A\A]A^A_
L$`H
L$pH
l$@I
L$pH
AWAVAUATUSH
[]A\A]A^A_
AVAUI
ATUI
D$81
L$8dH3
@[]A\A]A^
ATUSH
D$(1
D$(dH3
0[]A\
D$ d2
AWAVAUATI
D$h1
|$ L
T$ H
D$8H
t$@H
T$XH)
D$hdH3
x[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AVAUI
C@f%
C@fA9F@
[]A\A]A^
AWAVAUATI
D$81
=6d9
G@f%
D95{
5gb9
L$(H
D$HI
D$@1
D$8dH3
H[]A\A]A^A_
tZE1
t$0H
|$(I
t$ H
AWAV
AUATA
D$0H
\$pH
D$8H
L$xH
T$pH
=p\9
\$8H
t$X1
|$XH9
L$XH
=KZ9
53Z9
|$XM
T$`1
D$hH
D$`u
T$@H
D$XM)
D$XL
D$HH
AVVH
l$0H
;-=U9
-1U9
[]A\A]A^A_
t$PH
5!S9
L$XL
D$XI
D$XI
AUATI
([]A\A]
AWAVI
AUATA
D$ 1
\$ A
\$ A9
D$0 tf
D$pd2
L$pH
5"49
d$H1
<$ATH
L$0H
L$(H
T$8H
D$(H
=U39
$~6H
FP u
[]A\A]A^A_
T$ H
d$0A
L$0 
L$0@
L$1 
L$1@
5.J9
=5H9
AUATI
=9G9
|$0I
Y^t:H
XZtPL
[]A\A]
ATUH
 []A\
AUATI
[]A\A]
AWAVAUATI
D$H1
L$(H
T$ H
L$(A
T$ L
D$HdH3
X[]A\A]A^A_
ATUI
x7t0H
[]A\1
[]A\
AWAVAUATUSH
D$X1
L$(~(H
=m=9
|$01
D$ H
=h"9
t$(H
=7"9
L$(H
L$XdH3
D$,uTH
h[]A\A]A^A_
AWAVI
AUATI
$p\}
([]A\A]A^A_
AWAVAUATUSH
t$(H
t$(H
[]A\A]A^A_
D$pd2
D$(H
T$X1
D$(H
t$XH
FTD9
t$XH
D$pH
l$pH
D$pH
D$XL
=	59
L$8H
t$8L
L$0H
|$p)
AZA[H
D	l$
t$XH
D$ L
T$@H
L$8A
t$@1
t$ L
D$@E
|$`A
t$ L
t$ H
t$HH
|$`H
D$ DPX
|$ I
D$ AU
t$8L
L$HC
|$p1
D$Xt
+T$(A
t$8H
AWAVAUATUSH
~2Hc
=g(9
5Y(9
D$ H
D$0H
D$8H
D$@H
D$8L
D$0L
52'9
=+'9
|$0H
T$HL
D$8H
T$@H
D$@H
T$8H
t$hH
|$pH
L$hH
t$HL
t$HH
T$PL
l$HH
=g%9
l$HH
D$8H
=c$9
[]A\A]A^A_
t$hH
D$8E1
\$$L
l$(H
D$0H
D;kp|
\$$E
T$8H
t$0L
l$0L
|$8H
D;s0|
T$8H
AVAUA
D$H1
$p\}
L$HdH3
P[]A\A]A^
d$ ~3A
d$ H
d$ H
AVAUA
ATUH
[]A\A]A^
ATUI
[]A\
AVAUH
ATUL
[]A\A]A^H
AVAUI
ATUI
[]A\A]A^
]A\A]A^
AWAV1
AUATI
T$ H
L;4$scM
$L;4$r
=taH
t$XH
D$X1
t<Hc
t$TA
~(	t1
~)	u
D$XH
[]A\A]A^A_
D$XH
D$P9
D$PHc
|$XH
D$XHc
\$TH
D$pd2
\$ H
v0;,$}
t3L)
|$`1
D$0D
'twA
L$0H
D$@H
L$HL
L$HL
AUAT
|$pH
D$(H
D$ H
D$@d2
D$`d2
L$pE1
|$ H
|$01
\$(H
l$PH
l$PH
\$(H
|$0H
T$XH
[]A\A]
T$ 9
AUATI
[]A\A]
AUATI
[]A\A]
[]A\A]
AUATI
[]A\A]
ATUS
[]A\
[]A\
D$(1
\$(dH3
D$ d2
AUATI
[]A\A]
ATUI
AWAVE1
AUATA
D$H1
t$0H
L$HdH3
X[]A\A]A^A_
D$ d2
8nu+
AUATUSH
[]A\A]
ATUH
[]A\
AVAU
D$ H
D$0d2
|$ Hc
T$(H
t$0D
=p~8
=G~8
[]A\A]A^
D$0d2
|$ 1
D$0d2
=:z8
(~)1
St)H
AUATI
[]A\A]
AUATE1
[]A\A]
AVAUM
[]A\A]A^
[]A\A]A^
ATUH
D$X1
|$ I
t$ H
L$XdH3
`[]A\
AWAVI
AUATM
D$X1
|$ M
t$ H
T$XdH3
h[]A\A]A^A_
AVAUI
ATUA
 []A\A]A^
AWAVAUATE1
D$x1
t$0L
|$0H
t$8M)
D$@%
L$xdH3
[]A\A]A^A_
LcD$
t$0H
T$(H
t$$L
|$PL
T$PD
AWAV
AUATI
D$(H
D$,H
D$<H
D$0H
|$<H
t$@H
\$PE
L$(E
D$$E
t$P1
[]A\A]A^A_
\$$E
T$HH
D$hH
L$`H
|$`A
 L9l$
D$X1
L$XI
T$H1
|$`H
|$`Hc
D$`H
T$hH
D$hH
D$hH
D95)U;
G; u
T$hH
8-u(
AVAUI
ATUI
T$ dH
T$ E
[]A\A]A^
AWAVA
AUAT
USE1
D$@1
D$@H
D$<H
D$,H
D$8H
T$0E
L$,E
T$HA
T$HH
|$4E1
D$8D
t$HM
H9\$
D$0E
[]A\A]A^A_
t$8D
l$<D
d$4H
l$@H
D$`d2
|$p1
t$pH
L$PH
T$XH
D$`H
t$PH
t$xH
L$pH
T$xH
\$`H
L$<1
ATUH
[]A\
AUATUSH
[]A\A]
ATUI
|$ L
D$0d2
[]A\
|$ 1
D$pH
|$ H
D$(p\}
D$8p\}
D$pB
D$x<
D$h 
D$0d2
L$0E1
D$0d2
	v/H
|$ L
L$0E1
AVAUI
ATUI
 []A\A]A^
Hcl$
trHcl$
AWAVE1
AUATA
[]A\A]A^A_
|$ 1
|$ L
L$0E1
D$0d2
|$ H
T$ H
D$(H
T$(H
D$(H
|$ H
D$(H
T$@H
D$X%
|$ I
T$ H
AUATI
5WZ8
+T$x
[]A\A]
AWAVM
AUATI
~*Hc
t$ Hc
[]A\A]A^A_
_AXH
AZA[H
D$@M
D$@M
t5USH
[]A\
AWAVI
AUATI
OHdH
[]A\A]A^A_
@ H9
AWAVM
AUATI
D$X1
H9C 
T$(H
t$$1
D$8D
D$(H9C 
C);D$$
t$0L
D$0M9
T$0H
L;D$0
D;L$(
D$0H
D$XdH3
h[]A\A]A^A_
AWAVAUATUSH
uTD9
H;l$
L$ L
S u*H
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATE1
HcC0;C4
C0;C4
t~HcC(9
~CHc
|C~L
2HcR
t$*L
C(;C,t
t$*t
[]A\A]A^A_
~PHc
AVAUI
ATUI
SH9r
tFxmM
]A\A]A^
AWAVI
AUATA
~DHc
<$-u
8PACK
t&Hc
D$ H
l$PL
f)y<
l$PH
l$8E
l$8D
D$8E
Hc=D
t$(E
L$ H)
W(E1
E;w(
UUUUUUU
D$pH
Hc5Q
l$xH
\$PL
D$(D
T$ H
T$hH
t$`H
\$PL
L$8H
D$(D
T$ H
l$xH
+\$l
|$p1
L$@H
L$@L
D$hH
[]A\A]A^A_
l$LD
l$LM
C M)
L$ L
L$01
D$ H
C)AXAY
5>E8
l$8D
l$LD
T$(E
JcD(
<$-uhA
<vu+A
<ou/A
,u%H
PACK
AWAVI
AUATUSH
[]A\A]A^A_
AUAT
D$0d2
D$Pd2
|$@H
l$HH
|$PH
/t@H
D$@H
D$HH
l$HH
t$P1
D$@H
D$PH
\$ H
T$`H
[]A\A]
D$(H
/t6H
L$ H
D$(H
t$@L
t$xH
|$PH
t$x;
D$x@
T$0H
T$`H
D$x%
AVAUI
ATUA
T$ H
t$8D
[]A\A]A^
AUATA
|$ H
L$ D
D$ 	
D$0H
D$h:
D$p|T|
t0H)
[]A\A]
%:"9
ATUA
|$0H
L$0D
D$@H
tV~$
[]A\
Gx  t
Gy t
Gy t
ATUA
[]A\
[]A\
[]A\
AUATI
dH34%(
([]A\A]
AUAT
[]A\A]
[]A\A]
[]A\A]
[]A\A]
]A\A]
[]A\A]
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
ATUA
D$0(
D$ H
D$XrEV
D$`H
D$p=
Cz@uU
Cx@t
[]A\
ATUH
[]A\
[]A\
[]A\
[]A\
[]A\
ATUH
 []A\
AVAUATUSH
[]A\A]A^
$`ND
AWAVI
AUATA
D$(1
D$ d2
/t6H
\$(dH3
8[]A\A]A^A_
D$ H
ATUI
|$ H
L$ I
[]A\
AWAVAUATI
D$XpND
D$PH
T$(H
t$(Mc
D$@d2
T$0H
t$(L9
[]A\A]A^A_
XZ9l$
D$0H
t$0H
ATUI
|$ H
L$ H
[]A\
ATUI
|$ H
L$ H
[]A\
AWAV
AUATA
D$DH
D$`H
D$PH
D$TH
D$pH
D$hH
D$`H
l$pH
d$@E
L$XE
D$PE
l$hH
d$\D
l$<H
D$(u,D
t$ H
D$dH
d$dE
T$dE
L$(H
D$dH
t$xH
t$xH
D$ I
[]A\A]A^A_
D;%8{8
D;%Hz8
D;d$
D$@I
D$LE
|$LE
D$DA
5!v8
L$(H
D$dH
t$xH
t$xH
L$(H
D$dH
t$xH
t$xH
AUATA
[]A\A]
t$0H
D$ d2
l$ H
t$0H
E5&m8
AUATUSH
[]A\A]
[]A\A]
<?t+
AVAUATUH
t$ dH
D$81
D$8dH3
@[]A\A]A^
AWAV
AUATI
=E`8
5D`8
=Y^8
-t^8
=:]8
[]A\A]A^A_
t$XH
5z[8
T$01
%}Y8
-DY8
$9E<
|%X/
AWAVI
AUATA
tu9A
l$pH
([]A\A]A^A_
([]A\A]A^A_
AWAVAUATA
Borrow or rob
D$X1
t$8L
L$XdH3
h[]A\A]A^A_
5]Q8
-7P8
D$ H
T$ 9
t$(Hc
AUATA
D$Tr
D$p"%V
%wK8
[]A\A]
D$`~fI
[]A\
~aUS
u8Hc
AUATA
==w7
=Mv7
[]A\A]
AWAVA
AUATA
t$L;%
[]A\A]A^A_
AWAVAUATUSH
D$ H
T$ Hc
D$ H
|$ H
D$ L
T$,H
D$(H
D$ L
<$-u
T$pL
t$PH
D$H`
D$Xy
|$0H
D9l$8
D$0H
T$,H
[]A\A]A^A_
D$ L
AUATI
=]=8
[]A\A]
]A\A]
[]A\A]
D@0H
5q:8
5b:8
ATUH
 []A\
D@0H
AWAVAUATUSH
D$81
L$8dH3
H[]A\A]A^A_
5N68
D$ H
D$ H
AUATI
[]A\A]
D$x1
D$(;
D$xdH3
D$@d
D$Pq)V
D$Xy)V
D$`H
H;D$
H;D$
AWAVAUATI
t$0L
D$ H
D$pd2
\$PH
t$PH
T$PH
t$0H
L$XH
\$ H
T$@	
D$PH
[]A\A]A^A_
t6<0
t$ H
D$8H
L((H
T((tJH
T$PH
t$0H
t$8H
5S^7
AWAVI
AUATI
D$ d2
=M&8
5d&8
[]A\A]A^A_
\$P1
D$@d2
D$TH
D$pH
D$xH
T$8H
D$8H
T$@H
|$0H
T$0L
D$0H
T$8H
T$8H
H;D$8
AWAVI
AUATI
[]A\A]A^A_
5Y 8
D$\t5
D$ t
AWAVA
AUATI
D$Pd2
L$8H
[]A\A]A^A_
=MQ7
5AP7
Hcp0
t$<L
t$<E1
t$P1
D$PH
D$PH
D$pd2
T$`H
D$hH
T$pH
D$hH
L;5,
L;|$(tj
t$<E1
t$<L
d$`t
t$`H
L$pH
AYAZ
T$(H
=hB7
D$$H
t$P1
D$PH
t$P1
D$PH
=5?7
5"=7
=#=7
=;<7
AVAU
ATUH
D$4a
d$@H
L$0E1
[]A\A]A^
t:f.
AWAV
AUATA
|$0H
D$@H
D$8H
H;\$
D$hH
D$ H
L$0H
D$HH
D$`H
D$PH
D$pH
D$XH
t$(H
|$ H
[]A\A]A^A_
AWAVAUATUSH
D$ H
t$@H
Hcl$
D$pN
 v3H
|$ 1
[]A\A]A^A_
AUATI
:-u 
[]A\A]
at<H
(t	H
AWAVA
AUATI
|$ H
|$ H
[]A\A]A^A_
AVAUA
[]A\A]A^
AWAVAUATUSH
C@9C(
s0tLL
[]A\A]A^A_
|$pL
|$ L
T$ H
AWAVAUATUSH
l$@A
D$8p
D$0H
t$ H
dH34%(
[]A\A]A^A_
D$ H
t$ H
AWAVAUATUSH
D$h1
D$ d2
d$ H
t$5H
|$0H
|$01
L$0L
L$PH
t$hdH34%(
x[]A\A]A^A_
AWAVA
AUAT
USE1
|$pH
D$@d2
L$pD
D$tz
|$ D
\$(I
D$(D
D$(H
|$P1
D$`d2
|$P1
D$$Hc5
|$PE1
|$PE1
t$XH
t?Hc5
/t3H
AWAVH
USHc
tkHc
/u`L
[]A\A]A^A_
AWAV
AUATI
D$xH
D$|H
D$ H
D$(L
D$0L
\$pE
D9<$
D$8H
H9\$
L$tL
D$pE
L;l$H
T$|E
[]A\A]A^A_
|$(A
|$0L
D$ H
L$@J
D$8L
\$8H
D$P9
|$TH
\$XL
d$hH
\$HA
l$`D
+D$PL;l$HH
\$XL
D$Tt
D$@H
(+L$PH
|$@J
|$8H
$HcD$PH
T$TD
|$HA
T$(L
\$8H
|$ D
H;\$(u
L$TD
T$HH
ttHc
AUATA
[]A\A]
AWAVE
AUATI
H9C(
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
AVAU
l$0H
D$PI
L$@E1
T$ 1
D$(D
9\$ w
[]A\A]A^
G(H;
T$ E
=>27
ATUI
D$(1
L$(dH3
0[]A\
t/H)
AUATI
=",7
([]A\A]
ATUI
[]A\
t'H)
AVAUI
ATUI
D$ d2
t$pt0H
T$pH
|$pH
D$xp\}
D$@d2
D$`d2
|$01
T$8H
t$@H
T$XH
[]A\A]A^
t$pL
ATUI
[]A\
t/H)
AWAVA
AUAT
l$@H
D$0d2
D$Dm
\$PH
=l#7
[]A\A]A^A_
=x!7
AWAV
AUATI
l$ A
[]A\A]A^A_
D$PH
D$pH
\$pE
D$PH
D$PH
$ 1~
D$@d2
D$`d2
|$0H
|$(H
T$@H
|$PH
D$XH
D$`H
|$`H
D$pH
T$pI
T$pH
T$pH
T$PH
|$`H
t1H;B(r#
B0H9A0
<2@8
Bh9Ah
rp9qpw3r6
z H9y w
D$(1
D$(dH3
AUATI
d$pI
[]A\A]
St'D
[]A\
AWAVAUATE1
USE1
|$(Hc
t$@I
t$(H
t$@H
tQI9
D$0B
d$|L
|$0D
EhA9D$h
D$(H
I;E(
D$XA
t$4)
E I9
D$8H
\$XL
L$PL
D$`L
L$PD
T$ht
I9D$X
|$PL
T$XD
\$PL
L$ D
\$PL
T$Xt
D$XH)
\$8L
L$ D
\$8H
l$8D
|$ I
d$|L
l$pE
\$ 1
D$0E9
Cd$xD9
T$8I
\$8L
L$ H
L$ I
D$PD
|$`D
\$PL
L$8D
[]A\A]A^A_
H+CXH
t$8L
T$hD
\$`L
L$XL
D$PL
L$XD
\$`L
T$hD
\$`L
L$XL
D$pL
T$hD
\$`L
L$XL
T$hD
\$`L
L$XL
D$PL
L$XD
\$`L
H9T$8
L$8H
T$hD
\$`L
D$XL
L$PL
D$XD
\$`L
T$hI
\$PL
L$8D
\$PL
L$8D
L$8H
AUATL
[]A\A]
AWAVAUATI
|$ H
|$ D
[]A\A]A^A_
<,t*
AWAVI
AUATI
\$ H
[]A\A]A^A_
AWAVI
AUATI
D$X1
|$ H
t$ I
|$(1
t$ H
D$(I
t$ t
\$XdH3
h[]A\A]A^A_
H9F L
|$ H
\$ I
t$(L
T$ H
t$ H
L$(E1
D$(I9FXuMH
AWAVAUATUSH
D$h1
9]lu	H
|$hdH3<%(
x[]A\A]A^A_
t$0L
L$(L
D$(t
t$@L
L$8L
T$8H9
\$8H
D$8I
ExI)
D$0L
t$@L
ExI)
D$0L
D$(t
t$@L
t$ L
AVAUM
ATUA
[]A\A]A^
hpu6
AWAVA
AUATH
D$81
\$8dH3
H[]A\A]A^A_
|$(`
AWAVAUATI
USHc
L$ H
t$@H
t$PA
|$@H
t$HL
|$`D
L$ H
|$`H
t$<H
t$(D
t$(D
T$ A
[]A\A]A^A_
L$(H
L$(D
AUATUSH
D$(1
D$(dH3
8[]A\A]
=yq7
-;p7
AWAV
AUATA
D$HH
D$pp\}
D$<H
D$PH
D$TH
D$XH
D$@H
D$DH
5-n7
=1m7
d$PE
\$<E
L$PE
\$xH
5yj7
=~h7
-|g7
I9G v
=5d7
D$`H
=uc7
=%c7
D$`;-
;-ec7
T$`L
=sb7
[]A\A]A^A_
t$hH
D$ H
t$hM
5$_7
=!_7
|$hH
D$ H
t$hH
t$hH
5#^7
D$ E
A;l$(s
t$@H
t	H9
D;e(
=-U7
L$\L
D$(A
L$,1
T$ D)
;D$(
E;\$pt/
E;\$pu
D;|$ 
L$\E1
;Npt
;Npu
I;T$
[]A\
AVAUH
ATU1
[]A\A]A^
]A\A]A^
ATUH
[]A\
AWAVAUATI
D$81
\$(H
|$(H
T$ H
T$(H
\$8dH3
H[]A\A]A^A_
T$ H
T$(H
AWAVA
AUATUSH
|$aH
%"H7
-dG7
\$0H
tQE1
D$(H
|$@H
H9D$
H9D$
T$8H
T$@J
tSL9s
tFE1
tIM;>tDE1
tBE1
t:M;>t5E1
tOE1
%U@7
%9?7
|$0L
t$ H
D$(H
H;D$
D$8M
|$0H
t{E1
t\E1
t$ E1
|$8H
D$01
D$(I
D$0E1
D$@H;|$@sa
D$(L
T$ L
H;|$@r
|$8t
t$ H
L$aH
dH3<%(
[]A\A]A^A_
$L;c
|$PH
D$0H
l$(H
tNE1
%L47
D$ H
D$`H
AWAVAUATUSH
D$ d2
<-ta
u]<+tQ
D$PH
D$0H
D$XH
|$pH
[]A\A]A^A_
ATUI
D$ H
D$Tq
D$`H
dH34%(
[]A\
H9D$Xw
ATUH
[]A\
H9D$Xw
ATUI
ATUA
D$ D
D$Tv
D$`@
=6$7
[]A\
ATUH
[]A\
AWAVI
AUATA
\$`E
\$`1
D$Pd2
D$hp\}
D$xp\}
D$`p\}
[]A\A]A^A_
D$pd2
|$pH
\$ 1
|$PL
|$@A
l$ H
D$`p\}
t$@H
t$@H
|$@M
|$@I
D$pd2
T$hH
D$hH
D$hH
D$`H
T$hH
t$p1
t$@H
D$`p\}
5pA6
=t@6
=?r6
=$r6
={q6
=Qq6
=6q6
5%q6
=tp6
=Jp6
=/p6
AUATI
[]A\A]
AVAUATUI
 []A\A]A^
=.K6
[]A\
AWAV
AUATI
|$pH
D$ H
D$tv
L$pE1
D$`d2
|$P1
D$`d2
|$PL
|$P1
l$ L
T$(L
D$(A
T$0H
D$@M
D$`d2
|$P1
D$0I
[]A\A]A^A_
D$(H
D$`d2
|$PL
= ;6
t[H;]
AUATI
([]A\A]
AWAV
AUATI
[]A\A]A^A_
AUATI
D$81
D$ H
D$(H
L$8dH3
H[]A\A]
AVAU
ATUA
D$(p\}
[]A\A]A^
|$pA
T$`1
D$XH
L$`E1
|$@H
ATUH
u7Hc
[]A\
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AVAUI
[]A\A]A^
AWAVH
AUATH
D$ d2
\$0H
[]A\A]A^A_
ATUH
 []A\
ATUH
AWAVAUATI
D$@d2
[]A\A]A^A_
|$0H
|$01
D$Pp\}
|$PH
|$PH
|$P1
|$p1
D$xp\}
D$`d2
T$HD
\$XL
t$`1
D$0H
t$(L
L$(1
t$x1
|$pH
;l$x|
D$HL
|$pH
D$pH
D$PH
D$xp\}
|$PH
D$pH
D$PH
D$pH
D$PH
D$pH
D$PH
AVAUATUSH
[]A\A]A^
]A\A]A^
AWAVAUATI
|$`dH
|$P1
\$XH
l$P1
[]A\A]A^A_
l$PH
D$ d2
D$@d2
D$ H
D$@H
t?L9
T$0H
H;D$0u
|$PL
AWAVAUATUS
l$@H
T$01
\$0L
D$`H
HcT$hH
[]A\A]A^A_
|$@H
<9Mc
L$,H
AUATI
D$H1
l$ I
L$HdH3
X[]A\A]
l$ H
T$ H
AWAVAUATUSH
D$(1
L$(dH3
8[]A\A]A^A_
ATUI
L9c(rWH
 []A\
ATUSH
[]A\
[]A\
ATUSH
\$PdH
D$(1
t$ L
T$(dH3
0[]A\
|$ L
tjAVAUI
ATUA
[]A\A]A^
[]A\A]A^
[]A\A]A^
AWAVA
AUAT
l$ dH
L;d$
|$(A
|$(A	
XZL;d$
[]A\A]A^A_
AUATI
D$(1
T$ H
Hcl$
L$(dH3
8[]A\A]
T$ H
T$ H
T$ H
AVAUI
ATUI
[]A\A]A^
AWAVAUATA
T$(dH
|$@1
D$ H
d$0L
T$ H
|$@H
[]A\A]A^A_
t$ I
t$ D
l$(E1
D$HA
Y^D9t$<
t$ D
l$(H
l$XH
t$(H
-u4A
8-ta
te[L
8-u-
AWAVI
AUATI
([]A\A]A^A_
AVAU
ATUSH
D$(1
T$(dH3
0[]A\A]A^
AUATUSH
[]A\A]
ATUSH
D$H1
D$ d2
t$ H
T$HdH3
AUATA
([]A\A]
AVAUI
ATUI
[]A\A]A^
AWAVAUATI
[]A\A]A^A_
AVAUI
ATUSL
A9\$
]A\A]A^
]A\A]A^
]A\A]A^
AUATUSH
[]A\A]
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATA
D$H1
\$HdH3
X[]A\A]A^A_
D$0H
t$0I
MHE1
A;mXH
T$(H
t$01
D$0H
D$(H
D;qp|
T$(H
AWAVA
AUAT
D$`E1
\$@E
D$Pd2
D$pd2
|$@1
D$PH
|$`1
t$pH
D$PH
|$P1
|$`M
t$pH
|$P1
A;l$p
D$pH
D$`J
|$`H
|$pH
5&{6
D9%qz6
[]A\A]A^A_
D$PH
D$PH
|$@L
|$@M
D$pH
L$P1
T$pH
t$PI
D$PH
|$@L
|$@M
D$pH
|$`L
|$`M
L$P1
t$pH
L$ I
|$0I
L$(f
|$ L
|$(L
H9\$0
D$0E
D$(H
A;\$0|
~5f.
D$HH
A;\$X|
~5f.
D$`H
A;\$p|
H;\$
H;\$
l$pH
AWAVAUATUSH
[]A\A]A^A_
D$Hp\}
D$Xp\}
D$0d2
d$ 1
<Gt&~;<Vt <st,<St(
|$ H
t$(H
|$(H
D$(H
t$ H
T$(H
t$(H
T$0H
|$lI
[]A\
</wvH
sf</tZ
AVAUATUSH
=MR6
 []A\A]A^
AWAV
AUATI
D$`d2
D$$H
D$(H
D$0H
D$8H
D$HH
T$0H
T$8H
T$@H
T$HH
\$$E
T$ E
[]A\A]A^A_
\$$E
T$ E
T$(H
|$X(
t$`H
l$pH
D$xL
d$pI
5uE6
D$xH
l$pI
D$xH
-iD6
D$ E
5eC6
5eB6
5OB6
AVAU
ATUI
D$81
L$ H
D$8dH3
@[]A\A]A^
A9,$
AWAV1
AUATI
([]A\A]A^A_
ATUA
tE[]A\
[]A\
AWAVI
AUATI
u	A9
T$@H
L$0H
ZYuhH
[]A\A]A^A_
AWAVA
AUAT
USE1
D$4H
D$8H
D$@H
t$<H
D$@H
[]A\A]A^A_
D$`d2
t$HH
T$HH
|$PH
D$`H
D$ I
|$pH
l$(M
D$ L
D$xH
|$PH
H+t$`H)
t$XH
d$8E
D$xp\}
D$xp\}
D$`d2
D$pD
|$`H
AWAVA
AUAT
USE1
|$pL
[]A\A]A^A_
8gu5A
cu.A
|$PL
|$@H
D$ H
t$@H
|$0L
9l$X
|$0H
9\$Xw
|$PL
|$PL
9\$X
D$PH
AVAUATUSH
[]A\A]A^
ATUI
[]A\
[]A\
AVAU
ATUI
l$PdH
tq|w
|$(A
[]A\A]A^
AWAV
AUATI
D$$H
D$(H
l$$H
|$0L
L$$E
[]A\A]A^A_
D$8E
HcD$
Hcl$
D$(H
t$0H
D$,E
D$,H
T$8E1
Hcl$
T$8E1
D$`d2
l$PE1
|$`H
T$8E1
|$(Hcl$
T$ H
l$P1
|$`E1
T$ H
HcD$
AUATI
\$0H
|$ 1
D$$H
D$@H
D$HH
|$ H
[]A\A]
5[r5
5Jr5
AWAVAUATI
\$@dH
\$ E
D$8H
|$@H
[]A\A]A^A_
|$ H
l$(H
5}j5
D$(1
D$(dH3
AWAVAUATUSH
D$(E1
~qIc
[]A\A]A^A_
|$(1
?-uBA
t$HH
|$8H
|$@H
|$0.
|$0.
\$ H
D$ H
D$pH
D$`d2
D$(~	H
8-t;
|$@H
|$P1
l$0f.
\[0L
l$`H
D$`I
D$(H9
D$pH
<!u$A
|$PH
D[0A
|$(E
|$0.@
D$pH
%n,5
t&<=t"
D$(H
5XS5
D$(A
t$(M
HcT$0A
u|USH
D@0H
ATUI
D$pH
T$0H
L$8L
D$@L
L$HH
L$pH
\4 H
/wzH
P[]A\
AWAVI
AUAT
L$ D
[]A\A]A^A_
h(oV
\$hH
\$8H
D$Dx
D$PH
T$@H
D$h1
T$hdH3
p[]A\
D$h1
T$hdH3
p[]A\
AVAU
ATUSA9
]A\A]A^
[]A\A]A^
AWAVI
AUATI
([]A\A]A^A_
[]A\
AWAVAUATA
|$@I
T$@E1
Hc|$H
D9%\
|$@I
[]A\A]A^A_
D$`E1
D$ H
D$(H
L$<H
t$<A
|$ H
|$ 1
|$(H
l$8E
|$ I
D$`H
D$ H
D$(H
L$<H
|$(H
AWAV
AUATI
D$$H
D$,H
D$0H
D$4H
D$8H
D$HH
D$<H
D$LH
D$ H
|$0D
T$,D
D$`p\}
l$`H
5G-5
\$`D
l$hH
L$$E
|$`H
D$$E
|$PH
l$`H
|$$1
L$`L
D$pH
\$`H
[]A\A]A^A_
D$HE1
T$XH
t$`L
t$`H
T$`L
T$PL
AWAVAUATI
D$0d2
D$Pd2
[]A\A]A^A_
D$`H
L$hI
T$pL
D$xH
t$PL
|$ 1
/...
t	I9
ATUA
w,H;
[]A\
AVAUI
ATUI
D$0d2
[]A\A]A^
|$@1
|$@H
AWAVAUATI
w(dH
D$(1
D$ d2
A9\$
T$ L
D$ H
L$4A
T$0E
T$ H
D$(dH3
8[]A\A]A^A_
AUATA
D$81
L$8dH3
H[]A\A]
v9E9
dH34%(
AUATA
([]A\A]
trUSH
AUATUSH
[]A\A]
[]A\A]
[]A\A]
ATUH
 []A\
ATUH
 []A\
AUATUSH
[]A\A]
AWAV
AUATA
T$XH
D$4H
D$TH
D$PH
T$\H
D$HH
D$@H
;D$X
|$xH
D$`H
t$dH
T$`H
L$`H
PAWH
t$pL
;D$X
t$hL
D$pA
D$hH
D$hH
L$pM
D$pH
l$,I
D$ H
L9d$ 
t$41
t$@H
\$PE
T$LE
L$XE
D$\E
t$ A
t$LL
[]A\A]A^A_
|$x1
D$pA
Hc-X
D$pH
l$ L
AWAVAUATI
D$(1
L$(dH3
8[]A\A]A^A_
AVAUATUH
t"H)
dH3<%(
[]A\A]A^
USE1
|$0H
D$ d2
L$0D
D$4s
D$@H
D$P0
D$tc
Su(H
AWAVA
AUAT
USE1
|$PL
D$@H
L$PD
D$P	
D$XB
D$`H
D$px
|$ 1
|$ 1
t$ L
t$ L
[]A\A]A^A_
Lcd$
AWAVA
AUAT
USE1
D$Pd2
D$ H
D$pd2
D$(H
D$8H
|$`H
|$`1
d$0L
l$8L
|$(H
|$`H
D$pH
T$@H
D$pH
D$PH
|$`H
|$`1
|$`1
|$pH
T$@H
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AUAT
D$$q
D$0H
D$pH
D$dd
D$hB
L$ E1
[]A\A]
ATUSH
[]A\
AUATI
[]A\A]
]A\A]
[]A\A]
ATUSH
|$ 1
|$ H
[]A\
t$ H
ATUH
[]A\
D$(1
L$(dH3
AWAV
AUATA
D$`d2
D$(H
D$DH
D$ H
D$0H
|$0A
\$PH
|$pH
T$@H
UAT1
D$HE1
t$XH
t$(H
\$P1
dH34%(
[]A\A]A^A_
d$8H
=P}5
=L}5
D$(1
H;D$
L$(dH3
AWAVAUATA
l0 H
[]A\A]A^A_
=Nu5
AUATA
[]A\A]
AVAUL
ATUSA
[]A\A]A^
AUATI
[]A\A]
[]A\A]
ATUSH
D$(1
L$(dH3
0[]A\
AUATI
D$p1
=gp5
+|$p
[]A\A]
AWAVAUATA
D$H1
KCAP
-2|7
|$ A
D;%tk5
PACK
T$0H
l$01
T$(H
5gy5
t$HdH34%(
X[]A\A]A^A_
T$0H
T$8H
T$@H
l$0H
D$0H
D$@1
AVAUA
ATUH
D$(1
L$(dH3
0[]A\A]A^
AWAVAUATUSH
t	9h<
E4A9E4
L9d$
]A\A]A^A_
xXHc
xXHc
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AWAVI
AUATA
PTIc
K8t(=
5#m6
[]A\A]A^A_
ATUH
[]A\
ATUA
+t]A
[]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
D$(%
D$4%
D'X</
</t6D9l$
AWAVAUATI
D$81
L$8dH3
H[]A\A]A^A_
K<E1
@49C4
AUATUSH
D$(1
?,uu
~(,uLH
L$(dH3
8[]A\A]
u]H9
AVAUATUSH
D$h1
D$ d2
D$@d2
|$ H
t$ H
D$@H
|$0H
L$hdH3
p[]A\A]A^
t$ L
AWAVAUATI
D$0H
t$$H
D$(H
D$,H
-tEH
l$ A
="T7
[]A\A]A^A_
="S7
\$`H
D$Pd2
D$pd2
:"t0
D$pH
T$`H
t$@H
L$HH
D$PH
T$@H
T$hH
t$`H
L$hH
T$HH
T$pH
D$pH
=0k4
<"u>
ATUSH
 []A\
AWAVAUATM
([]A\A]A^A_
AWAV
AUATI
D$ H
D$$H
T$(E
D$ 1
|$PH
D$`d2
|$p1
D$xH9
|$0H
\$0H
AYAZ8
T$0H
D$xH
|$8H
\$8H
|$@H
\$@H
|$HH
\$HH
A[A^
[]A\A]A^A_
t$PL
|$ D
D$ H
[]A\
$p\}
D$h1
|$Pf
\$hdH3
[]A\
ATUS
8-uo
ATUI
[]A\
[]A\
AWAV
AUATI
D$dv
D$pH
D$ H
L$`A
\$0H
D$ H
T$(H
t$$H
|$$A
H;l$
[]A\A]A^A_
AWAV
AUATI
d$PH
|$0H
D$8L
|$@H
D$0H
L$8H
|$@H
H9l$
\$,1
D$Xp\}
D$hp\}
D$@d2
H9l$
dH34%(
[]A\A]A^A_
ATUI
[]A\
[]A\
AWAV
AUATI
D$dv
D$pH
D$ H
L$`A
\$0H
l$ L
T$(H
t$$H
|$(L
H;l$
[]A\A]A^A_
:/u2H
-Y.5
AWAVA
AUAT
[]A\A]A^A_
D$0H
D$4H
D$41
D$8H
t$8L
D$`d2
D$ p\}
Hct$
|$pH
D$xH
D$pHcT$
|$pH
|$P1
|$`H
L$`H
|$ 1
|$ 1
D$ L
D$ L
L$@uYH
|$0E
D$ H
D$P	
D$XB
D$p 
D$x@
dH34%(
[]A\
AUATUSH
[]A\A]
-}04
/tNH
5F/4
D$X%
|$ 1
D$0d2
t$ H
|$ H
t$(H
L$ H
T$(H
t$0H
D$0H
5I.4
:/tDH
t$HH
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
T$ H
D$(H
D$@H
D$$0
=tT4
D$8dH3
AUATUSH
]A\A]A^
=cR4
D$(1
D$ d2
|$ H
L$(dH3
AWAVA
AUATI
[]A\A]A^A_
[]A\A]A^A_
=~L4
=KL4
AWAVAUATI
D$81
|$(p
L$8dH3
H[]A\A]A^A_
=WI4
='I4
ATUE1
[]A\
AWAVAUATI
IcW H9S
]A\A]A^A_
([]A\A]A^A_
AUAT
([]A\A]
AWAVH
AUATE1
[]A\A]A^A_
|$ H
D$0d2
T$(H
t$0J
|$`1
l$(H
|$ H
D$Pd2
T$PH
|$@L
|$ L
t$PH
L$`H
T$ L
|$ H
ATUI
[]A\
\$P1
t$ H
AVAUATUS
[]A\A]A^
[]A\A]A^
AWAVA
AUATI
|$PH
D$(H
L$PH
D$ H
D$8H
D$@H
D$(t
D$(H
T$TA
\$PuzH
[]A\A]A^A_
D$(H
AWAVM
AUATA
L$0H
\$PH
|$`1
D$@L
t$HL
d$@1
t$0H
[]A\A]A^A_
AUATI
ustaH
[]A\A]
AUATUSH
$@4}
$@4}
[]A\A]
AWAVAUATUSH
D$ H
D$(1
Hcl$
Hct$
L$(dH3
8[]A\A]A^A_
AVAUI
ATUH
	~!D
gffff
[]A\A]A^
\$ H
AUATI
\$ H
D$(p\}
D$8p\}
L$h@H
D$pH
D$pH
[]A\A]
AWAVI
AUAT
l$PH
D$@d2
t$0L
t$0I
\$8H
D$@H
[]A\A]A^A_
L$(L
D$$L
D$(L
t$(H
t$(D
D$(L;
L$(L
D$$L
D$(I
L$(L
AWAVI
AUATE
|$(dH
T$ 1
t$@D
D$PA
D$`A
t$?D
\$@D
L$PD
t$ H
t$ H
|$(L
T$01
L$xs
D$(H
L$pH
T$0H
D$xH
L$xH9
D$`H
[]A\A]A^A_
t$ H
D$(L
D$0E
D$`H
L$PH
D$xL
D$pH
T$xH
ATUH
~(SH
[]A\
D$ P
D$!K
L$*H
D$)E1
D$@P
D$AK
D$D,
D$MH
D$XD
T$YD
L$ZD
D$[@
|$\@
D$N-
L$f@
t$eD
T$aD
L$bD
D$c@
T$hH
D$iH
T$pH
t$qH
t$@H
D$	H
?p\}
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
T$ H
D$(H
D$@H
D$$0
D$8dH3
D$`H
t$(H
T$0H
L$8L
D$@H
D$ L
A9\$
$p\}
H=p\}
w!H9
AVAUATI
D$ E1
A9\$
]A\A]A^
AUAT
Q HcR
q Hc
7D;F
[]A\A]
AWAVAUATLc
tIMc
t89k
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVA
AUAT
txH9
[]A\A]A^A_
<!tyD
AWAVAUATA
tq<#tm
([]A\A]A^A_
^ E1
([]A\A]A^A_
[]A\A]A^A_
]A\A]A^A_
AWAVA
AUAT
[]A\A]A^A_
AWAV
AUATI
[]A\A]A^A_
AWAVAUATUSH
L$H1
l$ L
|!Hc
<//t
Lct$
D$ Hc
t$(f
D$HdH3
X[]A\A]A^A_
D$@d2
T$8H
D$8H
D$8H
|$@1
D$0H
D$@H
|$0I
t$8B
|$0H
D$0H
T$8H
L$ E
|$()
t1f.
ATUH
u=A9
ATUStqH
[]A\
ATUH
 []A\
AVAUI
ATUI
D$(1
$p\}
D$(dH3
0[]A\A]A^
D$ d2
|$ H
T$ H
Cu@u
D$81
L$8dH3
ATU1
 []A\
AWAVA
AUATI
D$x1
D;<$
t$xdH34%(
[]A\A]A^A_
L9|$
AWAVM
AUATI
([]A\A]A^A_
AUATI
([]A\A]
AWAVAUATUSH
T$`H
D$x%
|$`A
T$4H
D$`H
|$@H
+t$0
dH34%(
[]A\A]A^A_
D$<H
L$8H
t$@1
T$<H
L$8i
D$@H
|$@H
D$ H
t$ E
D$(I
D$ D
D$Pd2
D$`H
|$`H
T$`H
D$ 1
|$PH
AXAY
C(t5H
AWAVAUATI
D$(1
D$ d2
|$ H
D$ H
|$ L
L$(dH3
8[]A\A]A^A_
D$ H
|$ H
ATUI
D$(1
D$ d2
|$ H
L$(dH3
0[]A\
AUATI
([]A\A]
AWAVA
AUATH
D$ d2
t$`H
T$`H
t$01
d$ H
T$PH
[]A\A]A^A_
l$0H
D$@d2
t$0H
l$0H
God A red nugget A fat egg under a dog
D$@d2
ATUH
[]A\
ATUSH
D$81
D$8dH3
@[]A\
AWAVAUATUSH
T$ 1
L$,L
D$HD
D$ H
d$0E1
|$,H
|$P1
|$@H
t$@1
[]A\A]A^A_
|$(H
|$(1
|$@H
T$HD
ATUI
[]A\
AWAVAUATUSH
 D9 w
[]A\A]A^A_
AVAUATUI
D$81
|$ H
L$8dH3
@[]A\A]A^
|$ H
D$(1
L$(dH3
AWAV
AUATI
D$(o
|$@1
|$@H
\$H9
[]A\A]A^A_
T$@H
t$ 1
D$HH
T$PH
AWAVI
AUATUSH
d$`H
|$`1
D$hp\}
D$xp\}
D$Pd2
T$HH
|$PH
t$PH
L$@H
D$PH
t$PH
d$`H
D$pp\}
[]A\A]A^A_
L$8H
l$@H
t$<H
T$ L
L$ I)
L$ L
T$(H
t\H9
D$x1
D$P`
D$X&
D$PH
l$,H
L$xdH3
AWAVI
qdUSH
E E1
|%Hc
[]A\A]A^A_
AWAVHc
AUATI
]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATA
[]A\A]A^A_
C Mc
|>Hc
[]A\A]A^A_
K Lc
tzATUI
tZf.
[]A\
t#SH
AUATUSH
D$ ~<1
D$ H
A9l$
[]A\A]
AVAUATUH
]A\A]A^
[]A\A]A^
AWAVE
AUATUSH
L$\t
D;p<H
D$`Mc
\$ H
$D9p<H
XX~@H
t$ 1
}XE9
t$81
e<D9d$8L
ID$ 
L$0t	@
L$XE
D$\H
t$hH
|$pE
[]A\A]A^A_
D+d$8
d$<1
T$TL
|$@L
d$<L
l$<L
|$@L
T$HL
t$hH
D$`H
D$`H
AWAVAUATUSH
\$81
D$ t+
D$ H
\$8dH3
H[]A\A]A^A_
D$0L
l$(A
L;l$(I
D$ H
D$ H
l$0H
D$ H
l$0A
E E1
|$0L
t$ H
D$0D;`
T$ H
AUATUSH
D$H1
|$ H
|$ H
D$HdH3
X[]A\A]
xUATU1
AWAVAUATUS
L$81
t$$H
D$ H
D$ H
D$ H
D$,P
T$0H
t$ H
|$(L
t$8dH34%(
H[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
ATUI
[]A\H
=H_6
AWAVI
AUATI
[]A\A]A^A_
AWAVA
AUATH
t$$H
T$(Ic
t$X1
D$7E
Hc,$
T$PL)
L$(D
H9D$
t$$H
L$XdH3
h[]A\A]A^A_
D$!A
D$#A
H9D$
v)H9D$
H;D$
L$(H
D$(H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
W8SE1
w0Lc
D9G,
AWAVAUATUSH
D$<0
D$L0
D$X 
D$\0
D$pd
D$ E
[]A\A]A^A_
T$(Mc
L$ 	
t$,A
AWAVAUATUSH
A9\$
[]A\A]A^A_
l$ L
A9\$
|$P1
d$PD
|$XH
D$`H
D$hH
D$ H
D$@d2
|$0H
|$0Hc
l$@Hc
E9t$
D$P1
HcL$`1
D$xL
D+D$d
D$x9
D$pH
DT$h1
L$XA
L$PD
D;d$x
D$|t)Hc
|$dH
9D$`
\$xD
l$|H
AUAT
[]A\A]
AWAVA
AUATI
\$(H
[]A\A]A^A_
l$,H
AVAUI
 []A\A]A^
t>Hc
AVAU
ATUM
]A\A]A^
v-L9
L	H8H
L	H8H
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATA
D$pD
D-Hc3
D$(H
wHE1
8[]A\A]A^A_
t$ H
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
S(H	t
[]A\A]A^A_
tkHcS$HcK
Do nine men interpret Nine men I nod
Hc{ 
E@HcC
AWAVI
AUATA
SHH)
L$hL
A^A_
:M+A(H;t$
T:pH
HH;T$
D$81
D$8H
D$8H;
D$(H
T$(u
d$ L
T$(L
x8t$
d$ H
T$X	
HH;l$
[]A\A]A^A_
l$HE
D$(H
D$hH
t$pH
D$@I
\$0H
x`Hc\$@H
D9t$0
\$@H
D$xH
|$`L
D$0L
D$ D
T$@E
d$PI
t$ A
~3Hc
~4Hc
L;l$ 
D$ A
9T$0}
L$`D
t$xIc
L$`H
|$Pt
D$01
d$xE
9\$0}
D$`H
D$PH
T$pH
\$h9
I#E8H
D$h9
t$pL
T$ D8
u|Hc
tkHc
T$ 1
~2Hc
~4Hc
T$ 1
T$pH
D$@A
t$PH
I#H8I
H!h8H
L$hL
|$ H
D$HXZ
|$0H;l$
D$0H
A8uQ1
$t;H
H;l$
T$0H#
H;D$
t$0H
T$0H#
L;l$
D$ H
uBL9
L$(H#H8H
\$@H)\$ H
L$`H
5Aj3
L$HH
H+L$@
(t	A
l$@H
l$8H
D$ H
D$XI
|$HI
|$HH
H9t$
5Th3
D$(I
G8u3H
=QB3
t$@I
L$ H
x0Hc
|$`A
T$8L
T$ I
T$ A
|$`E1
AWAVH
AUATUSH
L$@H
|$8dH
\$@H
D$@H
\$@H
D$0H
D$wH
L$xH)
D$xH
|$(H
D$0H
H9D$
D$hH
D$ 9D$p
D$hH
D$@H
D$@D
d$|L
l$@H
[]A\A]A^A_
D$@H
D$0HcP
|$0H
t$8L
D$@H
D$0H
D$@H
D$0H
|$(H
HcD$ H
D9%)
L$dH
D$PL
t$XD
L$dD
T$HL
D$PH
L3 H
d$|D
D$@H
t$|D
\$ Hc
D$|I
T$01
L8B@I9
\$ H
D$@1
AUATA
t"f.
([]A\A]
R(H9Q(r
V(H9W(
AUATI
[]A\A]
ATUSH
 []A\
H;D$
AUAT1
[]A\A]H
AUAT1
[]A\A]H
t$ H
AUAT1
-&*3
%	*3
[]A\A]
ATUI
[]A\
[]A\
[]A\
[]A\
AWAVAUATI
t8Hc
[]A\A]A^A_
$<#t
(~yA
|$( uUM
|$)A
 u(D
[]A\A]A^A_
tMHc
AWAVAUATUSH
L$81
C/H9
C/H9
E;t$
D$	E1
u1L9
<$>I
L$8dH3
H[]A\A]A^A_
t4H9
AVAUL
ATUA
T$ H
D$(1
T$ tBD
L$(dH3
0[]A\A]A^
T$ f
~EAUATI
[]A\A]
ATUSH
[]A\
O(H9J(s
H9J(r
ATUH
D$81
D$0H
t6H9
t$8dH34%(
@[]A\
AVAUI
ATUA
]A\A]A^
AVAUATA
T$0A
T$0L
T$0H
[]A\A]A^A_
AWAVHc
AUATI
\$H1
D$ M
L;d$ 
T$(L
\$HdH3
X[]A\A]A^A_
AWAVAUATI
dH34%(
([]A\A]A^A_
ATUSH
[]A\
AUATUSH
[]A\A]
AVAUATUSH
[]A\A]A^
AUATUSH
dH34%(
[]A\A]
AWAVAUATUSH
t$ H
D$(1
l$ H
> ty
L$(dH3
8[]A\A]A^A_
AWAVAUATUSH
t\E1
[]A\A]A^A_
[]A\A]A^A_
T$ H
D$81
D$0d2
L$(H
T$0I
L$8dH3
t1USH
AWAVAUATUSH
t$0H
|$(dH
D$X1
|$0H
D$ H
D$Pd2
D$8E1
D$PH
|$@H)
\$8H
t$ H
L$XdH3
h[]A\A]A^A_
|$@H)
t6USH
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATM
D$h1
|$ H
|$ H
|$ L
|$ H
D$ H
T$(H
D$(H
D$(H
|$ H
T$(H
D$ H
T$(H
|$ H
D$(H
D$(H
D$Pd2
t$@H
|$ L
d$PE1
|$ Hc
|$ L
d$PA
|$ Hc
\$0H
t$hdH34%(
x[]A\A]A^A_
\$0D
D$(E1
@tj1
wTD9
T$`H
|$ H
AWAVM
AUATM
D$(1
|$pH
D$ tuH
t$ H
PAWH
L$(dH3
8[]A\A]A^A_
AUATUSH
([]A\A]
tXAUATI
[]A\A]
AWAVI
AUATI
<+ t 
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
D$pL
|$ A
|$ A
|$`L
|$ A
D$ H
t$0H
D$@H
t$PH
[]A\A]A^A_
D$`0 I
|$`L
|$@H
AWAVAUATUSH
]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUA
t:A9
]A\A]A^
]A\A]A^
]A\A]A^
D$H1
L$HdH3
AVAUI
ATUI
T$0H
D$(H
t$0H
[]A\A]A^
|$(H
T$0I
[]A\A]A^
ATUA
[]A\
[]A\
[]A\
AUATUSH
D$(1
L$(dH3
8[]A\A]
<$"t
T$ H
ATUSH
D$(1
T$(dH3
0[]A\
D$ 1
D$ I9
AVAUA
ATUSH
D9%x
H9D$
 []A\A]A^
AUATA
<	ur
<\u?H
H9D$
([]A\A]
ATUH
tqHc
AWAVAUATUSH
T$(H
SXHcL$
T$(H
[]A\A]A^A_
T$HI
D$PH
T$PI
D$@H
T$HH
D$@H
T$HI
D$PH
L$HD
T$PI
T$HH
\tu~b
btaH
ATUI
 []A\
AVAUI
ATUH
uEE1
[]A\A]A^
AVAUI
ATUI
 []A\A]A^
ATUI
[]A\
[]A\
AUATI
[]A\A]
AUATI
l$ H
l$(H
[]A\A]
AUATI
D$(1
L$(dH3
8[]A\A]
D$ d2
d$ 1
t$ L
D$x`YI
AWAVI
AUATI
[]A\A]A^A_
AUATUSH
l$ H
|$(H
[]A\A]
D$HH
|$@H
d$`H
|$@H
D$`4#U
D$HH
ATUI
[]A\
ATUI
[]A\
ATUI
[]A\
ATUI
 []A\
AUATI
[]A\A]
[]A\
ATUH
St#H
AWAVI
AUATI
(HcX
[]A\A]A^A_
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AWAVE
AUATI
t$ L
[]A\A]A^A_
T$@D
D$pE1
l$XL
t$(L
\$4L
t$ E
|$0H)
|$0E1
\$4L
t$(I
l$8H
L9|$ v
|$0K
4<M)
t$ L
AWAVAUATI
t+<.u
te<.ta<-t
dH3<%(
[]A\A]A^A_
\$HH
T$(Lc
<2.Mc
\$(B
AWAVI
AUATI
tiHc
?.u+
$t$H
[]A\A]A^A_
AUATI
tOLc
[]A\A]
[]A\A]
[]A\A]
AWAVH
AUATE
t$(H
L$x1
T$ H
t$(A
t$`L
T$hH
t$`H
|$@1
\$xdH3
[]A\A]A^A_
|$@L
AUATA
[]A\A]
[]A\A]
AWAVI
AUAT
D$X1
D$Pd2
D$81
|$8I
L$XdH3
h[]A\A]A^A_
|$@H
D$@H
T$HH
|$@L
D$HH
D$HH
KH@A
C@@tW
t$PH
|$@A
\$8A
D$81
T$HH
t$(H
t$0H
t$(H
t$0H
T$8I9
t"USH
AWAVM
AUATA
l$0H
D$8p\}
D$Hp\}
D$ d2
|$ H
T$xH
D$0B
|$\H
[]A\A]A^A_
tkI9
s<L9
AWAVAUATUSH
|$81
D$0H
T$(L
T$(H
+L$0
vrHc
l$09
D$0H
T$(H
D$(H
L+t$0
+D$(M9
|$8dH3<%(
H[]A\A]A^A_
D$0H
T$(H
+L$0
l$0L
D$0H
T$(J
D$0I9
AWAVI
AUAT
t/Lcd$
Hct$
([]A\A]A^A_
r dH
|$@H
|$ H
D$Hp\}
D$Xp\}
D$0d2
D$0H
l$pH
[]A\
8 tO
AVAUATUS
<$$I
<$tR<:u
<$t <
]A\A]A^
t;ATUSI
$H)]
AUATUSH
[]A\A]
>ltO
[]A\
ATUSH
D$x1
D$PH
|$p1
t$PH
L$`L
L$hH
T$xdH3
[]A\
t$4H
|$ 1
AWAVI
AUATH
|$0D
D$0H
[]A\A]A^A_
D$<E
T$8t
T$8u
L$pH
,$M)
|$ A
T$PH
T$\9
D$0H
t,;T$T
;L$d
L$Tt
T$\I
AWAVAUATUSH
([]A\A]A^A_
[]A\A]A^A_
H+D$
AWAVAUATUSH
D$H1
T$0H
D$<9D$4tK
|$HdH3<%(
X[]A\A]A^A_
;D$Dr
T$(L
D$<9D$8t'A
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATI
D$(1
L$ H
L$(dH3
8[]A\A]A^A_
AUATA
([]A\A]
AVAUA
ATUI
]A\A]A^
tQH=
AUAT
IUSI
[]A\A]
]A\A]
[]A\A]
D$XH
D$hH
C u<H
AVAUI
ATUA
V8dH
D$81
D$0d2
\$ L
|$0D
L$8dH3
@[]A\A]A^
\$ H
AWAVI
AUATUSH
tLI9
[]A\A]A^A_
H9EHs
[]A\A]A^A_
E(L)
AUATI
;uu+
([]A\A]
AUATI
D$ d2
\$01
D$8p\}
D$Hp\}
D$x@
\$01
D$ H
D$8p\}
D$Hp\}
D$x@
D$0H
[]A\A]
ATUSH
[]A\
tDATUE1
[]A\
ATUE1
[]A\
AWAVAUATI
D$X1
t2E1
L$XdH3
h[]A\A]A^A_
AVAUI
ATUH
[]A\A]A^
xjH9
ATUS
[]A\
AUATA
[]A\A]
AWAVH
AUATI
4$A)
([]A\A]A^A_
AUATA
[]A\A]
ATU1
[]A\
AUATUSH
[]A\A]
]A\A]
xiHc
tHLc
$uLH
AVAUM
ATUA
D$81
D$ I
D$(I
T$8dH3
@[]A\A]A^
AWAVM
AUATI
t$8H
L$8L
L$0dH
D$x1
D$8D
L$@H
|$0H
D$0E
:u+1
D$8A
L$xdH3
[]A\A]A^A_
D$0E
\$ L
D$0L
\$,L
T$ D
D$0L
\$ L
\$ uM
\$ L
\$ u
AWAVAUATUSH
t$0H
|$0H
t$@H
D$XH
D$`H
D$hH
D$pH
t$,H
|$@1
[]A\A]A^A_
T$,H
|$@L
t$,H
d$,H
\$PL
|$@L
|$@1
D$,)D$T
t$,L
D$X1
|$@1
D$P+D$,
D$PL
ATUH
 []A\
ATUI
D$H1
 HcW
\$HdH3
P[]A\
AWAVI
AUATI
D$h1
|$0L
L$hdH3
x[]A\A]A^A_
t$0H
|$(H
D$D#D$@#D$<#D$8#D$4
|$@H
L$(H
D$0E1
D$<E
|$HH
L$8H
l$(I
L$(H
D$(1
L$(dH3
AVAUATUI
[]A\A]A^
[]A\A]A^
AWAVAUATUSH
D$81
D$0d2
D;t$
Hct$
D$8dH3
H[]A\A]A^A_
|$ 1
|$ 1
saE1
t)<#t%A
%lI3
AWAV
AUATUSH
tdE1
@vNK
L$(H
T$ H
 u}L
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
|$(H
L$8L
|$ H
D$(H
H9l$
D$ E1
D$4L
|$(3
D+t$
D$0t
FD$4
D$0D
t$0L
H;l$
|$ A
|$8H
[]A\A]A^A_
D8<7H
|$ D
[]A\A]A^A_
[]A\A]A^A_
AVAUM
ATUI
]A\A]A^
t$(A
]A\A]A^
ATUH
oXSH
 []A\
AUATI
l$0I
D$XH
[]A\A]
AWAVI
AUATI
o4dH
dH34%(
[]A\A]A^A_
AWAVAUATUSH
D$(1
|$PH
L$(dH3
8[]A\A]A^A_
L$,H
T$(H
t$0D
D$ L
L$,H
T$(H
A[[xQ
L$ f
AYAZf
GyE1
D$ H
IcM<H
F(ML
FDMA
AWAVH
AUATH
|$ H
t$@H
T$XD
D$(L
B(M9D$
D9d$
T5 M
ATAQD
L$4H
[]A\A]A^A_
D$ D
D$ A
T$(%
DD$(
t$@L
]A\9\$
D$(%
L$,H
D$<H
T$@L
t$XD
|$<A
|$ dH
T$ 1
AUATI
[]A\A]H
ATUI
.t0H
[]A\
D$(1
T$(dH3
0[]A\
D$ d2
D$ H
L$B"I
AWAVI
AUATI
t$,L
D$@d2
D$`d2
t$pH
\$0H
D$8H
T$@I
/t;H
L$0H
D$8H
l$8M
|$PH
D$XH
T$`I
/t;H
L$PH
D$XH
d$X1
D$pL
|$PH
T$`H
9\$xw
D$0H
D$@L
l$8B
D$PH
D$`L
d$XB
;\$x
t$,H
[]A\A]A^A_
|$p1
D$,H
t$(L
\$pH
|$0H
L$@1
|$p1
T$`H
T$@H
t$,L
\$0H
D$8H
|$0H
L$@E
AWAVAUATA
D$H1
D$ d2
}SHc
\$0H
d$8I
D$ H
D$8A
T$8H
D$ H
<-t	
8/t5H
ATUH
D@0H
[]A\
AWAVE
AUATI
[]A\A]A^A_
[]A\A]A^A_
tFMc
AWAVI
AUATI
<+tb< 
([]A\A]A^A_
([]A\A]A^A_
~&A:U
uJH9
HcD$
\$(L
l$ E1
([]A\A]A^A_
AUATUS1
[]A\A]
AVAUATUI
4$E1
tqD)
[]A\A]A^
[]A\A]A^
AWAVA
AUATI
O|u(@
[]A\A]A^A_
+tfH
D$P*S|
[]A\A]A^A_
AWAVAUATI
|$ H
D$(E
Lc|$
|$ H
A;D$
8[]A\A]A^A_
gfffH
AWAVAUATI
D$X1
D$0d2
D$Pd2
|$@I
|$@L
L$ H
D$XdH3
h[]A\A]A^A_
l$0H
AWAVI
AUATI
D$(1
L$ L
L$$Hc|$ 
W$Hc
Tm0I
D$(dH3
8[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
D$(1
>@t'H
D$(dH3
8[]A\A]A^A_
L$$L
D$ H
HcD$
HcL$ H
C(u	I9
u8L)
u L)
HcL$
HcD$ H
AWAVA
AUATI
XZ~bLc
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUI
\$xH
[]A\A]A^
AWAVI
AUATI
D$h1
t$!uD
|$ H
D$hdH3
x[]A\A]A^A_
H9D$
ot/H
ATUSH
T$Df
D$4%
dH34%(
[]A\
AUATUS1
?-t'H
([]A\A]
AUATI
[]A\A]
 uoH
AUATUSH
D$h1
t$ H
K0I9
u	I9
u8L)
D$hdH3
x[]A\A]
tDf=
AWAVAUATUSH
D$X1
u>E1
\$XdH3
h[]A\A]A^A_
9l$8
t$(L
<.te
ATU1
 []A\
AWAVA
AUATI
D$X1
ASAT1
t$(E
D$XdH3
h[]A\A]A^A_
l$@H
D$Pd2
|$@H
|$@H
|$@H
H9L$
D$(D
T$ L
|$@H
|$@H
|$@H
T$ L
D$(N
|$@L
D$PH
T$HH
l$8L
t$@H
D$@t
|$@H
|$@L
|$@H
t$(E
AWAVAUATI
D$(1
D$ d2
t$</u
r3H9
\$(dH3
8[]A\A]A^A_
T$ H
D$(1
D$ d2
D$(dH3
AVAUI
ATUI
@@fE
H@fE
t%fE9
XZ[]A\A]A^
AUAT
dH3<%(
([]A\A]
AUAT
[]A\A]
[]A\A]
[]A\A]
[]A\A]
]A\A]
ATUI
 []A\
ATUI
[]A\
AVAUATU
[]A\A]A^
k0tCH
H9C0v
T$pH
D$X%
s0E1
t$ H
D$ H
|$ H
D$0d2
D$(H
|$ 1
D$0d2
|$ H
D$(E
|$ 1
|$ H
ATUH
[]A\
T$ H
D$8%
T$PH
ATUS
[]A\
D$0H9E0u
E@f%
t$ H
AWAVM
AUATI
Ic7I
[]A\A]A^A_
Ic7M
l$@H
L$P1
|$0H
D$ HcA8H
D$PHcA<L
l$@L
|$0H
ATUSH
ut[]A\
	w.H
AWAVI
AUATI
D$TA
D$TH
([]A\A]A^A_
D$TA
L$T A
D$TA
D$@t
L$(@A
L$,@H
D$4A
t$,I
|$(L
D$x9
D$x(
T$xA
wLLc
A!L$0H
L$<1
A	L$0
D$,A
t$|A
D$TA
L$(@A
L$,@A
<=ty
AVAUAT%
D$pA
D$xA
([]A\A]A^A_
D$xD
D$`H
L$pH
T$`H
AUATI
[]A\A]
AVAUAT%
T$PA
[]A\A]A^A_
[]A\A]A^A_
(tZATUH
uUf9
AWAVAUATUSH
QAQPAPA
AUQH
APAU
PAQAPAUA
A@APAUPAPA
[]A\A]A^A_
D$ H
L$0H
t$PH
|$@I
~JUS
ATUH
=zr3
AWAVAUATUSH
GLdH
D$(1
=Dq3
D$(dH3
8[]A\A]A^A_
k0E9
D;%yn3
=1n3
5jm3
ATUSH
[]A\
AUATI
|$01
D$8p\}
D$Hp\}
D$ d2
L$x@L
t$`H
[]A\A]
AWAVI
AUATI
L$8dH
T$@H
T$@H
D$ fA
L$(H
G@fE;E@
G@fA3E@f
|$ I
[]A\A]A^A_
D$h1
T$PH
t$h1
|$(H
T$pL
|$0H
L$8I
|$(H
|$0H
C+ H
D$pHcC8H
HcC<H
D$pH
PAVL
t$0L
A:T$
D$hH
t$`AS1
t$pL
APASAV
D$pH
G@f%
E@f%
AWAVAUATUSL
D$h1
T$ A
T$0H
T$0H
|$@H
D$@p\}
D$Pp\}
|$P1
L$PH
|$@1
D$hdH3
x[]A\A]A^A_
L$,H
QAUH
T$8tvf
t$8H
t$8H
L$<f;E@
t$0L
|$ 1
t$0L
L$0H
|$@H
\$ H
|$@H
|$@H
|$@L
D$8(
|$PH
|$PH
AWAVAUATI
D$81
D$) 
SATL
T$8ARH
T$8H
t$0L
D$8dH3
H[]A\A]A^A_
SATL
t$01
SATI
T$8ARH
T$8H
t$0L
SATI
T$ L
T$8H
t$0L
AWAVI
AUATUSH
<Xt'A
D$0&
=*L3
@@f9
=hK3
[]A\A]A^A_
;-@I3
B@fE
J@fE9
T$ H
T$ H
D$0 
p0L+
D$ H
D$ H
D$ H
D$ H
D$@A
t$PL
|$8M
9D$ 
D$(L9
L$ I
t$PL
D$TA
;D$4
D$4H
L$ ~
+T$4
D$TE
|$T1
|$8Hc
D$ H
;D$ 
|$PH
T$HI
|$(H9|$xD
l$HwoD
+\$HI
|$@H
D$P1
L$`M
L$41
t$HM
|$pL
|$XL
|$XL
H;l$8
9\$T
|$@H
D$PM
L$41
L$4E1
T$HM
|$pL
|$@H
L$HM
\$XI
L$pI
L$@I
=Hh2
D$0 
G)@t
t-ATI
A9\$8w
[]A\
t{ATUE1
9k8w
C@E1
9k@w
[]A\
Q$H9
B($A
ATUI
D$H1
D$ d2
D$@d2
u`Hc
L$HdH3
P[]A\
l$ Hc
|$0L
t[ATUHc
[]A\
t[USH
AWAVAUATI
D$H1
t$0L
kYE1
D9k@w
C8E1
9k8v!H
9k8w
D$HdH3
X[]A\A]A^A_
ATUS
[]A\
AWAVAUATUSH
l$YL
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAV1
AUATUSHc
[]A\A]A^A_
5P$4
D-X</
AWAVI
AUATLc
=l#4
D-X</w
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAV
AUATI
D$x1
H;\$
D$Pt
H;\$
I;F0H
D$ H
D$(H
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
tuE1
D9c@I
I;F0H
L$xdH3
[]A\A]A^A_
D9c8v
,>SH
AVAUATI
&[]A\A]A^
]A\A]A^
AWAVI
AUATA
[]A\A]A^A_
/t=I
D$8%
AUATI
[]A\A]1
[]A\A]
[]A\A]
AWAVAUATI
[]A\A]A^A_
L$,H
t$@L
D$XE
t$@D
D$8L
T$0D
\$ L
T$0D
9L$(
D$TH
D$ L
T$HD
L$8D
T$ H
D$TL
T$HD
L$8D
9L$(
D$ A
HcD(
|$()
[]A\A]A^A_
h[]A\A]A^A_
D$8L
T$0D
\$ L
T$0D
L$8D
\$PL
T$HD
9L$(
D$PL
T$8D
\$0D
L$ H
T$XH
D$PL
T$8D
\$0D
L$ D
\$0L
T$8D
AWAVM
AUATI
[]A\A]A^A_
AWAVAUATUSH
([]A\A]A^A_
AVAUI
ATUI
;*t-H
4$[]A\A]A^
AWAVI
AUATA
L$$H
T$ H
D$(1
tQLc|$
D$(dH3
+u8H
8[]A\A]A^A_
AWAVI
AUATA
d$PM
t$ H
dH34%(
[]A\A]A^A_
?#ti1
< td<\uX
x^Lc
tAE1
t$ H
T$ H
ATU1
HcK0
s4Hc
HcK0H
AWAVI
AUATE
t%Hc
[]A\A]A^A_
t9E1
D)t$@A
D$@t
t$@A
AWAVIc
ATL)
[]A\A]A^A_
[]A\A]A^A_
AWAVH
G`AUATI
x`Hc
[]A\A]A^A_
H9l$
[]A\A]A^A_
AWAVI
AUATI
o`dH
tFIc]
[]A\A]A^A_
I;Wx
D$ L
GhIcF
w`9l$
GpLct$
|$ H
D$0d2
|$ H
|$ 1
L$@H
D$dH
D$lH
|$ H
D$0d2
|$ H
|$ 1
AVAUI
ATUH
[]A\A]A^
[]A\A]A^
AVAUATUI
IcL$
|$ H
IcL$
&[]A\A]A^
]A\A]A^
AWAVI
AUATLc
|$0D
D$@d2
T$P1
Et$@
E|$@
D$PI
|$PM
D$dL
D$hM
D$0H
|$xH
D$@L
d$8M
|$0H
D$8H
t$@H
T$0H
|$@H
D$8H
T$@H
t$@H
T$8A
T$8H
t$@L
|$PM
t$@H
D$0L
D$@L
d$8L
|$0H
t$8H
L$$L
t$@H
T$8I
T$8E
t$@H
D$@D
|$8H
D;9u
L$(L
L$ H
L$(u
|$PM
t$@H
t$XL
[]A\A]A^A_
T$8H
t$@L
D$@D
|$8L
D$dHcD$`H
L$`H
T$8H
t$@H
D$0H
t$@H
T$8H
D$8H
T$8H
T$0H
D$8H
T$@H
|$pL
|$0H
AWAVI
AUATI
D$(1
\$(dH3
8[]A\A]A^A_
ATUSH
[]A\
[]A\
AWAVAUATI
\$81
T[0H
Ic4$I
Ict$
AXAY
\$8dH3
H[]A\A]A^A_
|$(H
uxH9
t$0E
Lc|$
D$0d2
|$ H
t$(H
|$0H
AZA[tLD9
L$01
AUATH
[]A\A]
t;USH
ATUI
[]A\
AWAVE1
AUATL
g0USI
~p[]A\A]A^A_
AWAVAUATUSH
vxdH
t$pI
L$LH
T$\H
L$`H
T$pH
t$pHc
Hc<$H
t$pHc
t$(H
T$(H
t$0H
t$@H
T$@H
t$HH
t$XH
T$XH
t$`H
[]A\A]A^A_
t$p1
t$pHc
AWAVAUATUSH
D$H1
$.L9
D$uL
L$LI
t$$H
L$HdH3
X[]A\A]A^A_
D$0H
D$8H
D;d$
t$8H
|$(H
|$ H
|$0H
|$ H
|$(H
|$0H
D$8H
ATUSH
[]A\
[]A\
AVAUI
ATUI
D$h1
L$hdH3
p[]A\A]A^
D$PH
l$@H
D$H@
AWAVAUATA
D$Pd2
[]A\A]A^A_
T$0H
T$0L
H;D$0
T$0H
L$@L
t$8H
D$8H
L$`D
L$`D
ATUSH
D$(%
[]A\
AWAVAUATI
dH3<%(
[]A\A]A^A_
T$<I
Hc5J
D$4%
ATUI
[]A\H
D$81
D$0d2
D$8dH3
@[]A\
|$ H
t$(H
|$01
D$0H
|$ 1
|$01
D$ H
T$(H
|$ 1
D$(H
D$(H
59	2
[]A\
Z[]A\
w8uIL
AUATI
]A\A]
C H	
]A\A]
AWAVAUATA
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATI
D$ I;E
D$ L
D$(H
D$(H
@t$I
D$(H
D$ I;E
8[]A\A]A^A_
t3SH
H;N(rIH
N H;N0
F(H9F
F(H9F
F0H9F u
AVAUI
ATUI
D$x1
|$@L
HcT$l
L$hu
HcT$l
|$@Hc
Icv,H
Icv,
t$@H
HcL$(Hct$hH9
T$XH
D$@H34
|$@H
|$@1
I9D$
D$xdH3
[]A\A]A^
AVAUATUI
D$x1
|$@H
HcT$l
L$hu4
Icu,L
HcT$l
t$@Hc
Icu,H
l$@I
HcL$(Hct$hH9
T$XH
D$@H#4
|$@L
Icu,
Icu,
|$@H
D$xdH3
[]A\A]A^
AVAUATUI
D$x1
|$@H
Hct$,
D$(f.
HcT$l
D$huY
D$4I
|$@Hc
Icv,H
Hct$,HcT$l
l$tE
t$@H
l$@Hc
Icu,L
Icu,
Icv,
HcT$(HcL$hH9
T$XH
D$@H
|$@L
|$@H
D$xdH3
[]A\A]A^
AVAUATUI
D$x1
|$@H
HcT$l
L$hu4
Icu,L
HcT$l
t$@Hc
Icu,H
l$@I
HcL$(Hct$hH9
T$XH
D$@H
|$@L
Icu,
Icu,
|$@1
D$xdH3
[]A\A]A^
ATUA
C H+
[]A\
AWAVAUATI
E I+E
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
HcO0HcW(H
HcG,H9
G4L)
O(A)
AWAVAUATUSH
Hc_,
Ic^,
F(thN
,;L9
A3v4H
Mcf(O
<,L9
[]A\A]A^A_
W(Hc
tAUSH
U(Hc
t>US
$p\}
|$ L
L$(E1
 t?H
|$ H
dH3<%(
ATUI
[]A\
AWAVAUATUSH
t$ L
L$0D
D$HdH
|$0Ic
d$x1
\$xH
d$xH
D$8H
L$0Hc
D$(L
d$(L
L$0A
EP u
MP H
L$(I9
D$(H
d$xu
D$pH
\$xH
D$pH
L$ H
D$ 1
@(H9
l$(H
D$@A
t$0H
l$(~1H
\$0D
|$@1
[]A\A]A^A_
|$8H
\$HH
D$8H
H;h(
H9h(
D$ H
T$PH
D;t$(
D$ H
H9D$P
L$PH
l$lD
l$XH
l$hE
D$ H
D$ H
l$lD
l$XH
D$ H
D$8H
L$0A
|$@1
L$8E1
|$8A
l$lD
D$8H
|$8A
|$@1
L$01
D$8H
ATUH
[]A\
+w1H
AWAVI
AUATI
D$`L
L$ht=
)D$p
D$81
|$ H
L$8dH3
[]A\A]A^A_
<_t3
T$ L
D$  
D$$0
D$(H
D$@H
u0H9
AUATI
<tJ<
[]A\A]
AVAUATUI
[]A\A]A^
[]A\A]A^
AWAVI
AUATH
D$h1
D$hdH3
x[]A\A]A^A_
AVAUATUSH
D$H1
L$HdH3
P[]A\A]A^
|$ 1
|$ H
AWAVI
AUATUSH
[]A\A]A^A_
T$PH
D$pd2
\$XH
\$XH
D$`H
|$p1
|$XL
D$`H
l$8f
l$x1
	T$0)
	D$ H
D$`H
xOuEC
DD$$
l$8L
D$0E
D$`H
x)E1
|$`H
|$`L
D$`A
|$`H
t$`L
D$`H
T$PH
t$PH
t$XH
D$`H
D$XE
t$XH
T$`H
L$hL
D$pL
L$xt@
D$H1
T$HdH3
Ct#H
AWAVA
AUATA
[]A\A]A^A_
AVAUI
ATUI
[]A\A]A^
ATUH
[]A\
[]A\
AUAT
D$x1
T$`H
D$Xx
D$PH
|$,H
|$0I
t$xdH34%(
[]A\A]
AWAVI
AUAT
\$0H
D$8p\}
D$Hp\}
D$ d2
t$d1
t$`1
[]A\A]A^A_
ATUI
L$ I
D$81
D$0d2
|$ H
L$8dH3
@[]A\
ATUSD
I;1I
W0Mc
4$~5L
O@I;1tb
t;H9
Hc2H
[]A\
[]A\
Gv`u
Gx u5H
AUATA
[]A\A]
[]A\A]H
AVAUATUH
E0A9
E0A9
[]A\A]A^
[]A\A]A^
ATUH
HcS,H
[]A\
AWAVAUATUSH
HcS,H
C@L9
k8~!H
;C8|
C0E1
0H;3t4H
D;|$
sPHc
[]A\A]A^A_
9C$}
AWAVAUATUSH
w@H9
D9l$
[]A\A]A^A_
E;g0
E9g(
A9G$
[]A\A]A^A_
w@H9
wHH;
[]A\A]A^A_
A9o(
wHH9
t#H9
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
uJUSH
ATUH
[]A\
[]A\
AWAVI
AUAT
[]A\A]A^A_
AUATI
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AUATI
[]A\A]
E H)
AUATUSH
[]A\A]
D$x1
\$xdH3
AWAVI
AUATE
[]A\A]A^A_
_t#L9
[]A\A]A^A_
AVAUATUSH
[]A\A]A^
AUATI
[]A\A]
[]A\A]
ATUH
dH3<%(
 []A\
AWAVAUATI
D$h1
d$@E
tQD9
L$ J
43D)
)l$(
H9\$
|$/H
8HcT$(H
D$hdH3
x[]A\A]A^A_
D$ I
AWAVL
AUATI
[]A\A]A^A_A
[]A\A]A^A_
AWAVAUATUS1
[]A\A]A^A_
D$8%
D$PL
H9D$
AWAVAUATUSH
D$ H
D$ H
|$p1
|$ I
-)$2
T$`H
%	$2
D$ L
d$`H
D$0D
T$(E
L$`E1
L$dE
D$`E1
T$,E
\$ H
[]A\A]A^A_
\$XE
t$ H
|$0H
t$ L
d$@H
l$HH
\$PL
|$0H
d$@I
\$PH
l$HD
|$ L
d$@H
\$PD
d$@H
l$HH
\$PD
D$ D
DD$(
t$(E
D$ D
t$ H
|$0H
|$p1
t$ L
|$p1
t$ D
D$ H
D$ H
D$ H
ATUI
[]A\
[]A\
[]A\
[]A\
ATUI
[]A\
[]A\
AVAUE
ATUI
[]A\A]A^
AVAUI
ATUSH
D$(1
H;D$
D$(dH3
0[]A\A]A^
ATUI
[]A\
|$ ]A\
u%f.
AUAT1
[]A\A]
[]A\A]
[]A\A]
T$ dH
D$81
L$8dH3
[]A\
[]A\
ATUSD
ATUH
StPE1
[]A\
AUATUSH
t@H9
t!H9
[]A\A]
ATUI
t0H9
[]A\
AUATUSH
tuH9
[]A\A]
[]A\A]
ATU1
[]A\
AUATI
=>E1
trH9
tUH9
dH34%(
([]A\A]
F`8G`r
~AHc}
AWAVI
AUATUSH
[]A\A]A^A_
AVAUA
ATUSH
D$H1
d$ I
D$HdH3
P[]A\A]A^
AUATUSHc
[]A\A]
AWAVI
AUATH
D$ d2
Lcl$
D$ L
t$ H
[]A\A]A^A_
AUAT
]A\A]
AWAVI
AUATE1
}@E;l$
x&tDA
[]A\A]A^A_
AWAVI
AUATI
Ict$
[]A\A]A^A_
AUATA
[]A\A]
5r<0
[]A\A]
5(<0
AVAUATE1
EPD9
5	;0
[]A\A]A^
~PATU
AWAV1
AUATUSH
D$81
T$ H
t$ H
Hct$
=#90
1H;>t
=>80
k=w51
L$8dH3
H[]A\A]A^A_
tXHc
=J60
ATUH
D$X1
D$0H
D$01
D$8H
D$@H
D$ H
D$HH
=d40
\$@dH
[]A\
t7Hc
s,<<H
[]A\
\$(r
D$81
AWAVA
AUATA
[]A\A]A^A_
ATUA
[]A\H
ATUA
[]A\H
AUATI
[]A\A]
t6USH
t{ATI
h []A\
B []A\
t:ATUI
,$[]A\
t3USH
Hc{0I
AWAVAUATI
G`dH
D$@H
\DHA
Ic}0M
Ic}0I
P(Ic
P(A;UhA
A;Ul
dH3<%(
[]A\A]A^A_
ATUH
whdH
A(A+@(A;@,}
A(A+@(A9@0~
9P,~
dH34%(
[]A\
HcS0I
x;Hc
x Hc
@:0u
@:0t
AWAVAUATUSH
LcghI
[]A\A]A^A_
HcGlA
8LcP,
LcP,r
HcE(H
HcohI
AWAVA
AUATI
t$(D
l$ H
|$ H
t$(H
D$ H
[]A\A]A^A_
AWAVAUATI
T$0M
t$ H
T$0H
[]A\A]A^A_
AUATUS~E
]A\A]A^
tQUSH
AWAVM
AUATUS
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATE1
USE1
D$(1
D$(dH3
8[]A\A]A^A_
LR0S
AWAVAUATUSH
|[D;r
}cIc
([]A\A]A^A_
H90}s
}3H;H
P H9P
}#H9
t.H9w
ATUSt6H
[]A\
AWAVI
AUATUSH
D$(1
D$(dH3
8[]A\A]A^A_
\$ I
T$ L
D$(dH3
8[]A\A]A^A_
ATUS
ATUS
[]A\
AWAVI
AUATUSH
|$0H
t$(dH
D$ ;G
D$(H
|$0L
T$pH
T$PH
D$@H
D$@H
9H9x
~9H9
}FIc
|$PL
D$XH
D$TA
D$PA
D$(H
T$`H
dH3<%(
D$$u+H
[]A\A]A^A_
tFHc
AWAVAUATUSH
l$81
 A9]
D$ H
L$LH
L$LH
T$XH
t$PL
D$XH
l$PL
d$pH
l$xH
D$pH
D$(SH
D$pPL
T$PL
t$hL9
D$`H
L$ H
\$8H
\$(H
D$pp\}
|$8H
[]A\A]A^A_
T$hI
D$0tJH
D$0H
\$8H
D$pH
D$pp\}
AWAVAUATUSH
|$HH
\$HH
T$XH
T$HH
|$XH
T$HH
l$H1
D$@A
|$,H
OXHc
|$,H
[]A\A]A^A_
|$,H
>H9|$
D$,L
;t$,
\$0H
L$p1
T$,A9WT
\$0I
H9T$
GXAYAZJ;
WHLc
l$8I
L$0L
GH_AXJ9\(
l$8L;l
}^L9l$
H9\$
GXY^J;\(
t$,A;wT}!H
|$0H
8H9T$
Lc\$,L
9H9|$
T$xH
Lc\$,L
\$HH
T$HH
AWAVAUATUSH
L$x1
|$(H
L$@H
L$PH
|$@H
L$0E1
L$HM
\$HL
l$ E1
t$HI
t$HI
d$(I
D$8L
d$(H
l$PH
D$(H
L$xdH3
[]A\A]A^A_
L$8H
t$HL
d$ 1
T$`H
t$`H
|$XL
T$XH
|$(H
T$`E1
t$`H
|$XL
D$PH
AWAVM
AUATI
dH3<%(
[]A\A]A^A_
L$`H
|$ E1
Lct$`L
L94$w
|$ I
T$pH
L$pL
AWAVH
AUATM
D$(L
t <:t
D$ H
D$(H
t$ H
L$pH
|$0E1
HcL$pHcT$tM
7H;t$
H9t$
H9t$
[]A\A]A^A_
T$(H
t$ H
t$0H
ATUSL
d$0L
<:t`<^tVI
tZH9
[]A\A]A^
t$8ATH
ZYtT
[]A\
A]A^
]A\A]A^
<:t3<^t)E1
yAAWAVM
AUATM
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
D$h1
Gu@t
`t'H
D$hdH3
x[]A\A]A^A_
t$ H
|$ 1
D$0%
D$(H
|$ L
D$(H
|$ L
$HcD$
AVAUI
ATUI
A9](vTI
A9](w
[]A\A]A^
AWAVI
AUAT
D$(1
D$(dH3
8[]A\A]A^A_
ATUH
[]A\
\$HH
L$8t!H
L$@H
T$01
AWAVAUATUSH
D$X1
?vNH
PUAWATAU
L$XdH3
h[]A\A]A^A_
T$ 1
D$0H
D$(L
D$8H
l$@L
D$HL
T$8dL
D$XPH
AWAVI
AUATI
t/Lcd$
Hct$
([]A\A]A^A_
AWAVAUATUSH
D$0d2
D$Pd2
|$@I
t$PH
D$pG
\$xH
L$pH
D$0H
[]A\A]A^A_
I;D$
AWAV
AUATI
\$pH
ATSH
D$@H
X[]A\A]A^A_
|$`H
ATUH
 []A\
ATUH
[]A\
[]A\
AWAVA
AUATUSH
[]A\A]A^A_
ATUSH
[]A\
t<US
AWAVI
AUATI
[]A\A]A^A_
AUATI
D$81
L$ H
D$8dH3
H[]A\A]
L;d$
ATUI
trHk
[]A\H
[]A\
AVAUA
ATUH
[]A\A]A^
AWAVA
AUATI
D$H1
tpH9
D$HdH3
X[]A\A]A^A_
L$,H
T$01
@u H
AWAVI
AUATI
[]A\A]A^A_H
|$ H
L$ L
AWAVH
AUATH
\$81
D$0d2
PhPnW
hPnW
\$ H
T$0RP1
D$8dH3
H[]A\A]A^A_
\$ A
AWAVAUATA
D$0d2
Czf%
T$ H
|$ H
T$(H
[]A\A]A^A_
T$`H
t$@H
D$Pd2
D$pd2
L$hH
T$pE1
t$HH
|$PM
|$ 1
T$(H
D$<H
ATUH
[]A\
AWAVAUATI
WxdH
H#GxH
H#CxH
([]A\A]A^A_
tyUSH
AWAVAUATUSH
[]A\A]A^A_
ATUH
D$T1
[]A\
AUAT
([]A\A]
ATUH
;"t%H
AUATUSH
[]A\A]
X[]A\A]
AUATI
	v$f
tz~V
[]A\A]
AWAVA
AUATA
=tzE
[]A\A]A^A_
AWAVH
AUATH
`USH
\$x1
t$hH
D$0d2
D$Pd2
D$pd2
D$PH
D$pH
|$@L
|$`L
t$pH
L$PH
|$ H
|$ H
T$(H
t$0H
|$ H
D$xdH3
[]A\A]A^A_
t$pH
AWAVH
AUATA
t$81
D$0d2
L;<$s
<<:u
l$ K
L$8dH3
H[]A\A]A^A_
l$ H
l$ I
t$(H
|$0H
l$ I
l$ H
l$ I
AWAVAUATI
([]A\A]A^A_
[]A\A]A^A_
< t`I
AWAVAUATI
D$@d2
D$`d2
T$0H
L$PH
L$8H
H9T$8
D$xH
T$xH
D$xH
t$pH
T$0L
H9D$8
t$01
[]A\A]A^A_
D$0H
T$8H
D$8H
D$8H
t$@H
D$@H
L$XH
T$`H
|$01
D$`H
t$8H
t$0H
t$@H
D$`H
T$ L
L$(L
L$(t?L
D$PH
T$xH
D$pH
T$xH
S@H)
AWAVA
AUATI
t#L9
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
tLHc
[]A\A]A^A_
AVAUATUSH
D$(1
T$ H
t$ L
D$(dH3
0[]A\A]A^
AUATUSH
[]A\A]
AWAVAUATI
D$(1
=8<1
L$(dH3
8[]A\A]A^A_
AWAVI
AUATM
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
$p\}
tTE1
([]A\A]A^A_
AWAVA
AUATI
T$ I
[]A\A]A^A_
AVAUATUM
D$X1
\$XdH3
`[]A\A]A^
|$ 1
t$0H
D$8PL
D$0H
D$HH
\$@I
t$@H
ATUH
 []A\
AVAUI
ATUA
]A\A]A^
AUATUSH
[]A\A]
AWAVI
AUAT
[]A\A]A^A_
AWAVI
AUAT
D$<A
D$pA
D$lA
D$tA;FH~
[]A\A]A^A_
AUATUSH
[]A\A]
[]A\A]
ATUI
k8[]A\
ATUI
[]A\
[]A\
AWAVM
AUATI
D$pI
D$xA
D$pH
D$xH
[]A\A]A^A_
D$@f9
f9D$
D$pH
D$pH
T$hA
D$`H
|$0L
|$@H
D$hPAVATL
|$(L
D$`H
T$PH
|$@M
|$ H
t$(H
|$pL
T$pH
T$ fD
D$HH
D$XI
D$`A
L$`H
AWAVI
AUATI
D$H1
D$ H
D$0I
D$8I
D$@I
D$HA
t$HdH34%(
X[]A\A]A^A_
AUATA
|$(L
|$PH
[]A\A]
D$01
L$(dH3
AVAUI
ATUSH
 []A\A]A^
ATUI
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
[]A\
T$ H
D$8%
AVAUI
ATUI
}@E1
~@E1
}@E1
[]A\A]A^
D$81
D$0d2
T$8dH3
t$ H
T$(H
t$0H
H;T$(u
t$0H
AWAVAUATI
L$X1
T$8H
D$(D
|$(H
D$XdH3
h[]A\A]A^A_
t$8H
T$8H
T$8H
t$ H
L$@L
D$Pd2
D$HH
|$@1
AWAVE
AUATI
D$pH
D$x@
D$,H
EPE1
[]A\A]A^A_
UAVM
L$(I
AWAWL
L$81
T$,H
t$ H
L$01
QQAVL
L$@H
SATI
ATAVH
L$(1
T$,H
t$ H
AWAVI
AUATA
D$h1
VPE1
T$@A
S@E1
D$hdH3
x[]A\A]A^A_
AWAVM
AUATI
D$pI
D$xA
l$pH
D$(H
|$0H
D$P1
D$pH
D$XH
D$xH
D$`H
L$ H
T$(L
CPE1
T$dH
[]A\A]A^A_
l$pH
D$(H
L$0I
D$PH
D$pH
D$XH
D$xH
D$`H
t$Pt
9D$d
D$hE1
D$d%
D$hf
SPE1
T$dA
T$XH
T$df
L$ H
T$(L
|$dA
AWAVI
AUATI
W dH
D$@H
D$@H
[]A\A]A^A_
L$@H
D$HE
|$HL
d$HI
D$ E
,$t9f
D$ D
t$ L
D9t$
\$ H
t$(L
T$0L
T$0H
D9t$
D$ D
D$ Lcd$
\$(1
D$0f
L$0H
D$(H
f;H@H
D$(L
D$(H
D$ D
T$(H
L$8M
T$(L
D$0H
L$8t
HPHc
D$ D
D$HL
D$HH
l$ 1
\$8L
T$PH
L$0L
D$(H
\$8H
t$ H
L$0QL
L$PL
D$@L
T$PH
E@ATE
B@PH
WPE1
WPE1
\$0L
T$(D
T$(D
ASARL
UASAUM
L$(H
T$8D
t$0L
L$0I
T$PL
\$XH
D$8H
D$H1
t$0L
L$PL
D$(H
\$pL
T$XA
l$ 1
AYAZ
D$HH
\$ H
l$(A
l$0D
}2Lc
\$ H
l$(L
l$0L
d$81
|$HL
GPE1
|$PL
\$0D
\$@L
ASAUD
T$HD
L$(H
T$8H
t$0D
M@E1
T$0H
t$PE1
D$(E
UATH
L$(H
L$81
GP^_
l$ H
GP^_E
t$ U
A@PH
GPE1
\$0H
D$(H
D$(L
\$0D
T$(D
D$(L
\$PD
T$0D
AWAVAUATI
D$(1
T$8L
D$ H
L$(dH3
8[]A\A]A^A_
AWAVI
AUAT
([]A\A]A^A_
s8H)
AWAVAUATUSH
|$(H
D$ L
d$(H
H;\$
t$(L
l$ H
d$(L
4$E1
4$E1
L;l$
E\$ H
l$ H
d$(1
D$(H
8[]A\A]A^A_
\$ H
|$(A
[]A\A]A^A_
ATUH
D$(1
L$(dH3
0[]A\
AWAVAUATUS
|.X/u
|.X/t
[]A\A]A^A_
[]A\A]A^A_
[]A\
[]A\
AUATI
t\</u	
[]A\A]
AWAVI
AUATI
D$(1
A;o<u
t(Hc
\$(dH3
8[]A\A]A^A_
[]A\
AVAUATUH
dH34%(
 []A\A]A^
ATUS1
 []A\
D$ E1
ATUI
 []A\
IC}}
AWAVAUATI
8C u
C!A8E
/ukE
[]A\A]A^A_
S!8P
AUATI
[]A\A]
[]A\A]
AUATH
9/tBH
;wJH
[]A\A]
AWAVAUATUS
T$(H
t$@H
l$HH
D$@H
D$P%
D$pd2
T$hH
D$hH
D$pD
D$hH
D$`D
T$hH
D$hH
D$pD
D$hH
D$`H
T$hH
D$hH
D$hH
D$`D
T$hH
T$hH
T$hH
l$HH
|$`H
D$PH
|$`1
t$0L
t$ I
D$$H
D$0H
t$ L
T$4H
t$(A
[]A\A]A^A_
AWAVI
AUATI
]A\A]A^A_
ATUI
[]A\
t$ H
AWAVAUATE
([]A\A]A^A_
([]A\A]A^A_
([]A\A]A^A_
AWAV
AUATUSD
t$xL
T$8H
8[]A\A]A^A_
t$$9t$
[]A\A]A^A_
D$H1
|$ 1
L$HdH3
|$ H
|$ 1
|$ 1
|$ H
*<1v\H
*<1w
AUATI
D$(1
D$(dH3
8[]A\A]
AUATUSH
D$x1
D$xdH3
[]A\A]
t$`L
T$@H
D$@H
D$$H
D$HH
AWAVI
AUATUSH
[]A\A]A^A_
AUAT
[]A\A]H
D$(1
|$(dH3<%(
ATUSH
D$81
T$8dH3
@[]A\
t$ L
|$(1
ATUI
[]A\
AWAVAUATUSH
D$(1
T$ H
D$ H
D$ I9
D$ H9
D$(dH3
8[]A\A]A^A_
AVAUM
ATUH
]A\A]A^
[]A\A]A^
AUATI
D$0d2
T$@1
T$ L
|$0H
[]A\A]
D$81
T$8dH3
D$0H
ZYx*H
T$ A
D$(1
<At'
|$(dH3<%(
</t	Hc
A@f9B@
}rLc
[]A\
[]A\
AUATUSH
8 uSD
[]A\A]
ATUH
 []A\
AWAVI
AUATUSH
t$(H
D$(H
[]A\A]A^A_
t$0H
D$ H
D$ H
D$0L
D$0H
|$8H
A[A]
t$HH
d$@L
l$8H
AXAYE
A^A_
D$0L
D$8s
t$8H
t$@H
D$8I
AWATI
A[A\1
PH9\$8
t$@H
|$0H
u f.
L$hI
L$h1
AYAZ
|$PH
T$HH
|$(H
D$@H
t$pH
T$xH
AWAVAUATI
D$0d2
|$ H
|$0H
D$ H
T$(H
D$(H
D$(H
Lct$(
T$0H
[]A\A]A^A_
|$ H
t$0H
t$0H
T$@H
D$ H
D$0L
t$(B
T$(H
AUATI
[]A\A]
[]A\A]
AVAUATUSH
w(dH
D$H1
ZYu}H
D$HdH3
P[]A\A]A^
D$H1
D$ d2
D$HdH3
T$ H
T$ H
T$ L
D$01
|$ H
T$0A
T$ H
AUATI
[]A\A]
[]A\A]
AVAUATUH
]A\A]A^
ATUH
AWAVA
AUATI
[]A\A]A^A_
AVAUI
ATUS
A\A]A^
4$[]A\
ATUI
[]A\
[]A\
[]A\
ATUH
D$(1
T$ H
T$ L
L$(dH3
0[]A\
H;7u
H97t
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATUSH
D9t$
 D9t$
([]A\A]A^A_
AVUSH
[]A^
AWAVI
AUATUSH
\$h1
D$ H
UUUUUUUUI
33333333
H#L$
\$hdH3
x[]A\A]A^A_
D$ H
D$ H
D$ H
tRATUI
[]A\
AWAVI
AUATE1
D$h1
t$ H
H#\$
D$hdH3
x[]A\A]A^A_
AVAUATUSH
t$0E1
[]A\A]A^
AWAVAUATUSH
D$81
u3Hc
\$ H
D$(H
D$ H
\$8dH3
H[]A\A]A^A_
AWAV
AUATUSH
D9t$
[]A\A]A^A_
AWAVAUATUSH
D@0H
([]A\
A]A^A_
ATUI
AWAVAUL
ATUSH
[]A\A]A^A_
u?A9
[]A\A]A^A_
AVAUI
ATUSH
@t[H
 []A\A]A^
ATUH
9H(t
AUATI
[]A\A]
AVAUATUH
 []A\A]A^
AWAVI
AUATI
|$@H
t$@H
D$8H
[]A\A]A^A_
L$(s<
\$,L
t$ r+I
D$(E
@(+B(
AVUSH
[]A^
AWAVAUATI
u1A9
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUS
l$hA
tk~8
[]A\A]A^
\$hL
AWAVAUATUSH
|$@1
9\$$
A9D$
D$0A9
D$0L
|$ D
D$ I
T$ A
9|$0L
t$8s-D
l$0I
|$ I
D$ I
L$0I
D$4E
|$(A
M9|$
tDA9
[]A\A]A^A_
L$4s
D$0A9
D$0L
|$ D
D$ I
T$ L
D$(H
|$@H
\$(H
|$ I
|$ I
AWAV
AUAT
[]A\A]A^A_
([]A\A]A^A_
AWAVAUATI
D$H1
t$ f
T$$H
D$(H
D$,H
(D9%k
D$HdH3
X[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AUATUSH
D$x1
|$`H
`u.H
t$xdH34%(
[]A\A]
AWAVAUATUSH
L$(H
D$,M
|$P1
L$HH
t$@L
T$HH
|$PH
t$PH
t$@1
t$@H
L$HH
T$8H
T$HH
D$<H
|$PH
t$(H
|$ D
|$,H
[]A\A]A^A_
AUATA
dH3<%(
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
5%-1
l$(M
D$ I
t$ 1
D$0H
t$(L
d$ H
\$81
D$ H
\$8L9
T$0H
t$(H
AWAVAUATUSH
tOcL
D9l$
t$ M
L9$$u
L9,$tXI
D$0A
[]A\A]A^A_
$PACKdH
AWAVA
AUATM
|$ H
|$ L
t$ H
|$ I
t$ H
[]A\A]A^A_
D$81
L$8dH3
AWAVA
AUATI
[]A\A]A^A_
=NO.
=0O.
D$(1
D$ d2
|$ H
L$(dH3
AWAVI
AUATA
5~[.
[]A\A]A^A_
[]A\
SHcO
t$~(
ATUI
D$81
|$8dH3<%(
@[]A\
C8H9
D$0d2
H;J8u
d$ H
t$ I
|$ I
|$ I
D$ H
D$ H
d$0H
D$ H
t$ 1
D$ H
AUATUSH
l$ I
[]A\A]
[]A\A]H
AWAVAUATUSH
T$8H
D$,E
L$,L
D$0H
\$HI
DD$(M
D$(H
D$ H
|$0H
|$ H
t$8H
]A\A]A^A_
F( t
uIIcG
[]A\A]A^A_
X[]A\A]A^A_
t$,I
|$ H
\$HIcG
DD$(M
|$ H
t$@H
D$81
tf|,
L$8dH3
-tSH
AUATUSH
[]A\A]
ATUSH
 []A\
ATUI
 []A\
AWAVE1
AUATL
ryL9
([]A\A]A^A_
[]A\A]A^A_
u4Hc
AUATUSH
([]A\A]
AUATI
/t6A
[]A\A]
]A\A]
ATUI
t!Hc
[]A\
utHc
tl</t
AWAVHc
AUATUSH
D$,H
|$ H
D$(I
t$,H
|$ H
8[]A\A]A^A_
8[]A\A]A^A_
AVAUI
ATUI
/t8H
]A\A]A^
]A\A]A^
]A\A]A^
]A\A]A^
AUATI
D$81
D$0d2
/t3H
|$ H
t$0H
t$(H
D$8dH3
H[]A\A]
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
ATUSH
 []A\
Lcd$
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$HH
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
T$ H
D$(H
D$@H
D$$0
L$8dH3
t$HH
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
T$ H
D$(H
D$@H
D$$0
L$8dH3
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
L$ H
D$(H
D$@H
D$$0
T$8dH3
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ATUSH
 []A\
ATUSH
[]A\
AWAVAUATI
<$/A
}"Hc
4A:L=
}3Hc
[]A\A]A^A_
[]A\A]A^A_
~GHc
/t	A
</tt<.tJH
tE</u
/t8A
.tZH
/tKH
AWAVAUATD
/t%H
[]A\A]A^A_
AUATI
t0Hc
[]A\A]
[]A\A]
<.t8</t<
AVAUI
ATUE1
]A\A]A^
]A\A]A^
StVH
tuAUATE1
[]A\A]
AWAVAUATUSL
[]A\A]A^A_
D$\H
D$\H
l$pH
d$lH
D$(L
T$8H
D$(u
T$8E
l$ D
(D	p
$H9D$H
|$\9|$@
d$(D
t$8E
\$lE
D$0H
D$lA
L$$E
T$l9
t$lH
|$0H
T$lL
t$81
\$(H
l$$D
d$8f
+ttH
(tFH
t$pH
D$xH
D$xH
\$(D
t$$@
D$$I
t$$H
t$$H
D$(H
D$pH)
	D$8
|$0L
D$xL
l$pH
T$$u
T$pH
T$xH
D$(1
T$(dH3
fffffff
USx;H
xrH9
]A\A]A^
$I)]
[]A\A]A^
ATUA
 []A\
AUATI
]A\A]
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AWAVI
AUATI
D;l$
upIc
([]A\A]A^A_
AWAVAUATUSH
8D;d$
8;l$
[]A\A]A^A_
AWAVAUATL
HcO0
_4dH
t$XA
T$<A
T$<L
T$0L
dH34%(
[]A\A]A^A_
ATUI
[]A\
t:Hc
AWAVI
AUATI
-R*/
dH34%(
([]A\A]A^A_
D@0H
AWAVI
AUATUSH
x"Hc
tRdH
([]A\A]A^A_
AVAUI
ATUI
 []A\A]A^
AWAVI
AUATI
=B#/
[]A\A]A^A_
$wHH
=O"/
H9T$
D$0{
DR01
AUATI
|$0H
[]A\A]
AUATM
|$ dH
D$h1
D$ H
L$(A
|$8A
D$0H
Nt3A
t$@H
<.wG
L$hdH3
x[]A\A]
T$HH
AWAVAUATUSH
|$PH)
[]A\A]A^A_
D$`H
t$hH
{XH)
D$PH
t$(H
t$XH
t$ t
D$ H
T$(H
t$01
|$ H
x&Hc
T$()
|$0H
D$@d2
D$0H
T$8H
D$8H
D$8H
T$8H
D$8H
D$@D
D$8H
D$0H
T$8H
|$PH
D$@d2
T$ H
T$(H
|$01
L$(H
D$0H
T$8H
D$8H
D$8H
T$8H
D$0H
T$8H
D$8H
D$8H
T$8H
T$8H
T$8H
AWAVI
AUATI
D$(1
L$(dH3
8[]A\A]A^A_
D$ d2
<$L)
AWAVA
AUATI
[]A\A]A^A_
AWAVI
AUATI
D$h1
L$hdH3
x[]A\A]A^A_
T$`H9
l$`M
|$hM
H9L$
H9]0t
|$x1
T$xA
T$xA
L9e0t
|$x1
L$hM
D$pL
M;|$h
M;L$p
t$8H
l$ H
H8E1
L$PE1
t$ H
t$@H
l$PH
.<1v
AWAVI
AUATI
D$81
T$HI
t$|H
D$0d2
>%u#L
|$ L
D9t$
D+t$
t$(L
T$(H
t$0H
T$8dH3
H[]A\A]A^A_
t$(L
T$(H
t$0L
D9t$
|$ H
D9t$
D9t$
D+t$
AVAUI
ATUI
t$hdH
T$pH
t$`L
[]A\A]A^
|$hH
l$hM
HcT$
L$xH
AWAVI
AUAT
x$Hc
D9kxw
([]A\A]A^A_
AWAVHc
AUATI
[]A\A]A^A_
AWAVAUATUSH
D$81
D$ H
D$0A
|$ E1
T$0A
l$0A
L$,H
t$ H
D$8dH3
H[]A\A]A^A_
D$0H
D$0D
D$(H
T$(H
|$0D
D$0A
xGHc
AUATI
[]A\A]
AWAV
AUATUSH
L$ H
L$ u
[]A\A]A^A_
D$(1
D$(dH3
AWAVAUATA
[]A\A]A^A_
[]A\A]A^A_
ATUI
[]A\
t>AUATI
[]A\A]
D+J 
D+J@D
[]A\A]
[]A\A]
AVAUA
ATUH
l$ H
[]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
AUATUS
D$h1
D$PH
d$PH
l$XH
|$0I
L$hdH3
x[]A\A]
%al/
?'u1I
't"I
\t:I
!u*A
AWAVI
AUATI
L;|$
([]A\A]A^A_
ubL;|$
[]A\A]A^A_
AVAUE1
ATUH
SH9w
<'uw
[]A\A]A^
ATUH
[]A\
AVAUATUSH
[]A\A]A^
<$u 
AUATE1
[]A\A]A
[]A\A]H
[]A\A]
AWAVAUATUSH
<\t9I
[]A\A]A^A_
[]A\A]A^A_
ATUH
't&@
\t H
[]A\
ATUI
[]A\
ATUI
[]A\
$u:H
tx~6
ATUI
I9D$@w	[1
ATUI
D$XH9E
[]A\
AUATA
([]A\A]
dH34%(
AVAUI
ATUH
[]A\A]A^
AUATLc
[]A\A]
AWAVI
AUATA
[]A\A]A^A_
ATUH
D$H1
t$HdH34%(
P[]A\
D$ d2
H;T$
|$0E1
t$ H
AVAUATUL
6u!A
[]A\A]A^
FX9G
 9O 
N 9O
AVSH
S0D	
9@8:
 [A^
AWAVAUATUSH
T$<H
D$`d2
q8H9
D$0D
D$@DIRC
D$HH
t$$H
T$PA
kXw(H
|$8H
LcD$
|$8%
t$$H
|$(D
L;|$
D$0H
\$pH
|$$L
knil
L$xD
L$xH
D$0H
\$pH
|$$L
EERT
L$xD
L$xH
D$0H
\$pH
|$$L
CUER
L$xD
L$xH
D$0H
\$pH
|$$L
RTNU
L$xD
L$xH
D$0E
t$(H
t$0L
|$$H
t$$H
[]A\A]A^A_
C<thD
|$(D
|$$H
D$@DIRC
D$HH
t$$H
ATUI
[]A\
[]A\
[]A\
AUATI
[]A\A]
ATUI
[]A\
AWAVAUATUSH
[]A\A]A^A_
$xzH
5*;/
`YMc
`YMc
AVAUD
ATUSIc
[]A\A]A^
AWAVI
AUATA
[]A\A]A^A_
[]A\A]A^A_
AUATA
USIc
[]A\A]
[]A\A]
AWAVE1
AUATI
t+x!D
]A\A]A^A_
[]A\A]A^A_
AUATHc
[]A\A]
AVAUATUS
[]A\A]A^
AUATI
[]A\A]
HcW<;V<t
AWAVE
AUATA
PTIc
c8t =
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
L$ A
L$ x.A
uEHc
<(HcW<A;T$<u&H
L$ f.
D$8A
L$<L
L$<A
l$$L
D$ Hc
D;t$ 
E;o<
|/X/u
d$(E
\$<A
D$8L
\$4L
D$ I
D$ M)
x.Hc
0E;n<
Hcl$
D;k<
|3X/
9D$ u
D$0M
Hc\$4L
D$8A
L$<L
AWAVI
AUATHc
[]A\A]A^A_
AWAV
AUAT
T$(E
D$8D
D$ Hc
T$ I
L$0A
\$PL
L$0D
9D$@
A9@<
T$(I
IcU<Ic^<I
F4A9E4
h[]A\A]A^A_
T$81
[]A\A]A^A_
t$(L
t3Hc
T$(H
h[]A\A]A^A_
T$ I
L$TL
L$HD
\$PL
D$0D
\$PL
L$TL
9L$@
T$ H
L$PL
L$0D
L$0HcL$PL
T$ Hc
|$ Hc
ATUA
[]A\
AWAVAUATUSH
D$x1
t$8H
D$4%
D$4A
T$<I
t$XL
l$XM
l$(A
T$8I
T$XE
L$<E
D$HH
t$01
L$xdH3
[]A\A]A^A_
T$,L
D$tH
L$pL
D$@E
t$Pt
D$; H
t$Xu
D$t@H
t$hH
Dt$`
L$8I
D$HH
T$ H
T$ H
D$8A
AWAVAUATUSH
D$@d2
[]A\A]A^A_
;DIRC
|$PH
t$PH
d$0H
|$(H
=RTNU
=knil
=EERT
=CUERuxO
@9@D
h<ttI
ATUS
tLE1
[]A\
ATU1
[]A\
AVAUATUSH
[]A\A]A^
[]A\A]A^
ATUH
t5;Q
[]A\
D$0H
AWAVAUATI
vYHc
t$XIc
D$41
[]A\A]A^A_
[]A\A]A^A_
AUATI
[]A\A]
9_<u
AWAVAUATUSH
D$(1
xgHc
T$ H
T$ H
T$(dH3
8[]A\A]A^A_
s>f.
 []A\
AWAVI
AUATI
\$PL
$Hcs
]A\A]A^A_
AWAVI
AUAT
D$81
L$8dH3
H[]A\A]A^A_
x9Hc
HL;bH
T$ 1
ATUSH
/H;u
[]A\
[]A\
[]A\
D$0H
[]A\
AVAUATUSH
[]A\A]A^
tGUSH
AWAVI
AUATI
\$@L
[]A\A]A^A_
D$(1
D$ d2
L$(dH3
AWAVAUATUSH
H9CP
[]A\A]A^A_
KH~5
[]A\A]A^A_
AUATI
[]A\A]
]A\A]
AUATA
t=E1
[]A\A]
]A\A]
ATUI
[]A\
D$(1
D$(dH3
D$(1
D$(dH3
D$H1
D$ d2
|$ H
t$0H
L$HdH3
AVAUI
ATUI
D$81
*<1w
d$(L
l$0H
L$8dH3
@[]A\A]A^
/t?H
AUATI
=?3-
[]A\A]
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATI
t$@L
T$ H
|$@1
[]A\A]A^A_
D$ I
D$(I
D$0A
<-u(H
ATUA
D$x1
L$XH
D$`H
D$hH
T$ 1
L$xdH3
[]A\
t[US1
AWAVAUATUSH
l$PL
D@0H
[]A\A]A^A_
AVAUA
ATUI
D$H1
D$ d2
T$HdH3
P[]A\A]A^
T$01
0u6H
AWAVAUATI
D$h1
D$ d2
T$ H
T$ H
T$hdH3
x[]A\A]A^A_
D$@d2
|$0H
T$P1
T$8H
t$@D
H;D$8t_L
AWAVAUATUSH
|$0M
|$01
[]A\A]A^A_
t1Hc
/u	H9
AWAVAUATUSH
ti</teA
[]A\A]A^A_
]A\A]A^A_
AWAVI
AUATI
vCHc
[]A\A]A^A_
[]A\A]A^A_
D$H1
T$ 1
|$ 1
L$HdH3
ATUI
A;\$
ATUI
tH[]A\
[]A\
AUATI
[]A\A]
AVAU1
ATUA
]A\A]A^
AWAVI
AUATI
\$hH
ZYt-H
[]A\A]A^A_
t$(L
D$81
Hc79w
AWAVI
AUAT
[]A\A]A^A_
AWAVAUATI
Lc+L
[]A\A]A^A_
A\A]A^A_
ATUH
AUATUSH
[]A\A]
[]A\A]
AUATUSH
D$X1
T$XdH3
h[]A\A]
t$ H
x( u
xQ u
	t6H
L$(H
t$PH
|$0H
D$(1
\$(dH3
AVAUATL
g0USH
]A\A]A^
t6Hc{
-#r.
]A\A]A^
AWAVAUATI
T$0H
D$H%
[]A\A]A^A_
ATUStWI
[]A\
[]A\A]A^
ATUI
t4Hc
dH34%(
 []A\
AWAVAUATUSH
D$`d2
t$PH
|$`L
|$0Mc
|$0L
|$0L
t$`H
t$@H
T$,H
|$@H
D$0H
D$@L
d$8B
D$PH
D$`L
l$XH
[]A\A]A^A_
|$@H
T$,H
t$PH
D$0H
T$8H
D$8H
D$8H
\$8H
D$@H
AUATUSH
[]A\A]
[]A\A]
refs/bisH
D$0A
D$8ect/M
AWAVAUATI
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
AWAVAUATUSH
D$H1
L$HdH3
X[]A\A]A^A_
D$ d2
A:T$
d$ A
t$01
D$0I
D$8I
D$@A
tNHc-
AWAVAUATUSH
[]A\A]A^A_
@0refsH
~\AUATI
$}+I
[]A\A]
AWAVAUATUSH
A9.~(I
[]A\A]A^A_
[]A\A]A^A_
AUAT
[]A\A]
AWAVAUATUSH
D$ Hc
8[]A\A]A^A_
|$(H
T$(H
AWAVAUATUSH
D$(1
D$ d2
t$ H
t$ H
t$ L
t$ L
t$ L
t$ H
|$ L
T$ L
L$(dH3
8[]A\A]A^A_
L$ L
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AUATI
D$(1
L$(dH3
8[]A\A]
AWAVA
AUATI
D$0d2
D$Pd2
|$@L
D$PH
T$`H
D$x%
D$0H
D$x%
[]A\A]A^A_
|$01
D$ H
D$(H
t$ H
L$(H
D$0H
T$0H
D$0H
D$0H
|$@L
AWAVM
AUATA
T$8L
D$`d2
T$,A
T$ t
D$ I
t$ H
L$LH
D$pH
D$LA
t$81
D$PL
D$ 1
t$`1
|$`A
dH34%(
[]A\A]A^A_
t$pM
D$PH
D$pH
D$PH
|$`D
D$pH
D$01
t$ H
L$LH
t$,I
t$81
t$8L
ATUI
D$(1
}0H9
L$(dH3
0[]A\
[]E1
ATUI
[]A\E1
AVAUI
ATUH
[]A\A]A^
ATUI
[]A\E1
AVAUATUSH
 []A\A]A^
AWAVAUATI
[]A\A]A^A_
dH34%(
AWAVAUATI
D$81
D$0d2
t$ H
\$8dH3
H[]A\A]A^A_
|$01
uSD;d$
T$0H
T$0H
AWAVM
AUATI
D$X1
T$XdH3
h[]A\A]A^A_
L$ E1
D$0d2
AWAVAUATI
T$`H
D$0d2
D$x%
l$ 1
[]A\A]A^A_
|$@H
D$Pd2
D$PA
T$0H
l$ E1
T$0L
|$@L
D$Pd2
T$0H
L$0L
AWAVAUATI
D$ d2
t$0L
t$PL
[]A\A]A^A_
|$p1
t$pIc
D;<$u]
T$PH
t$0E1
AWAVAUATUSH
D$0d2
D$0L
d$@A
t7L9
tvL9
t$ L
|$ 1
|$ 1
D$0H
[]A\A]A^A_
AVAUI
ATUH
 []A\A]A^
AWAVAUATUSH
\$x1
|$PI
|$PL
t$XH
|$PL
|$P1
\$xdH3
[]A\A]A^A_
\$ H
D$(I
T$PH
 tvH
t$ L
T$@I
|$0M
d$0L
t$ I
l$ I
|$PL
t$XH
|$PL
D$8L
l$0H
D$8H
D$0I9
AUATUSH
D$81
D$0d2
L$ E1
L$8dH3
H[]A\A]
t$ H
</t.
$</t
w:L9
AWAVAUATUSH
D$81
\$8dH3
H[]A\A]A^A_
AWAVM
AUATA
\$`H
L$ H
D$hL
T$`H
D$0d2
T$pL
|$pA
[]A\A]A^A_
T$pL
|$pA
(t0I
T$0H
D$Pd2
AVAUI
ATUI
[]A\A]A^
<+ t0
[]A\
AWAVE1
AUATE1
[]A\A]A^A_
AUATI
[]A\A]
AUATI
D$(1
8"t#H
D$(dH3
8[]A\A]
AWAVAUATUSH
D$81
\$8dH3
H[]A\A]A^A_
|7Lc
t$ H
D$ H
tYHc
D$ H
t$ H
D$ H
D$ H
AWAVAUATUSH
t$PH
T$(H+T$8H
T$ L)
|$WH
\$XE1
l$HI
|$pH
D9d$
H9\$ 
|$pH
|$WH
l$HH
|$p1
D$8L
H9D$
D$(H
[]A\A]A^A_
t$(H
t$@H
t$8H
l$HD
|$WH
AWAVI
AUATA
t$ H
t$(H
H[]A\A]A^A_
H[]A\A]A^A_
H[]A\A]A^A_
T$8L
L$0L
T$8t\A
T$8L
L$0L
L$0L
AWAVH
AUATI
|$81
$0D;5
|$0H
D$0d2
|$ H
M9|$0I
D$ H
T$(H
D$(H
D$(H
D$8dH3
H[]A\A]A^A_
D$ I
D$8H
T$(H
|$ 1
AWAVI
AUATL
t	L9
[]A\A]A^A_
AWAVI
AUAT
V0E1
[]A\A]A^A_
T$HH
t$@1
L$@E
|$X1
T$HH
t$@1
\$PH9
T$PI
L$<H
T$HH
t$@L
T$@H
D$H1
L$<H
T$HH
t$@H
T$@H
D$HH
D$(H
D$$I
|$(A
T$P1
|$X1
AWAVAUATUSH
D$(1
D$8H
T$ L
D$ A
@(H9A(rS
|$(dH3<%(
8[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
*tfH
t <%
<(t$<%u
AUATI
[]A\A]
 uSH
dH34%(
Hc6H
AUATI
t\f.
t(<%
[]A\A]
|$X1
\$PH
|$ H
ATUSH
<$-tyL
[]A\
AUATI
D$0t
([]A\A]
US~*
AWAVA
AUATI
D$81
D9t$
L$8dH3
H[]A\A]A^A_
t$ H
t+SH
AUATI
[]A\A]
HcO0
W4Hc
HcK0H
HcO@
WDHc
HcK@H
HcOX
W\Hc
HcKXH
HcOp
WtHc
HcKpH
AWAVAUATUSHc
~KE1
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUS
[]A\A]A^A_
[]A\A]A^A_
<$Hc
AWAVAUATI
~YE1
A9D$
t7Lc|$
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
D$(1
L$(dH3
8[]A\A]A^A_
D$ d2
AWAVAUATA
t$(1
L$ uhH
D$ H
t$(dH34%(
8[]A\A]A^A_
AVAUATUI
]A\A]A^
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t;USH
ATUI
D$(1
L$(dH3
0[]A\
AVAUI
IcL$0H
D$49
T$4Hc
|$ H
IcL$0I
T$0H
[]A\A]A^
ATUH
AWAVAUATI
D$h1
D$@M
|$0I
L$(H
t$(H
T$hdH3
x[]A\A]A^A_
D$H9
D$@H
D$@H
D$@H
AWAV1
AUAT
T$ dH
D$81
~?E1
k@D9
"D;s0}<E
D$8dH3
H[]A\A]A^A_
AUATUSH
D$(1
t$(dH34%(
8[]A\A]
D$ d2
D$ d2
US~/
D$(1
L$(dH3
ATUS
[]A\A]A^
AWAVAUATUSH
D$H1
D$ H
L$HdH3
X[]A\A]A^A_
D$ 1
~HATU
AWAVL
AUATUSH
[]A\A]A^A_
ATUH
[]A\
[]A\H
ATUSH
[]A\
AWAVI
AUATI
t&A9
[]A\A]A^A_
AVAUI
ATUH
 []A\A]A^
tDUSH
AWAV1
AUATA
[]A\A]A^A_
AWAVD
AUAT
D$ D
D$,u
l$01
L$LH
T$PM
D$LE
D$PL
D$0H
D$ H
d$`D	
<$E1
T$ H
T$ H
T$ H
L$P1
[]A\A]A^A_
D$PH
L$8L
L$8H
L$81
<$E1
|$PI
t$XH
T$ H
T$ H
AVAUATUSH
D$(1
L$(dH3
0[]A\A]A^
Hc{0
D;s0
;w0|
O(Hc
AVAUATUSH
[]A\A]A^
=Z3,
t9USH
AWAVI
AUATI
D$81
L$8dH3
H[]A\A]A^A_
T$ 1
ATUSH
[]A\
D$(1
L$(dH3
D$ t
AWAVAUATUSH
[]A\A]A^A_
AVAUI
ATUH
$p\}
|$01
T$01
[]A\A]A^
AUATUSH
([]A\A]
AUATUSH
[]A\A]
[]A\A]
D$X1
l$0H
D$8H
t$Ht
L$XdH3
AVAUI
ATUS
[]A\A]A^
]A\I
A]A^
[]A\A]A^
AWAVAUATI
 E;l$
[]A\A]A^A_
AUATI
(t(L
[]A\A]
T$$Hc
t"Hc
[]A\
AVAUI
ATUSH
rJLc
[]A\A]A^
D$4%
]A\A]A^
ATUI
[]A\
AUATI
[]A\A]
ATUSL
[]A\H
[]A\
AWAVAUATUSH
D$H1
h?Lc
D$HdH3
X[]A\A]A^A_
AVAUATUSH
H;D$
 []A\A]A^
AWAVA
AUATI
D$ d2
D$@d2
D$`d2
|$`D
t$pL
[]A\A]A^A_
=uNH9
8 ttA
t$0H
t$0H
D$ H
t$8H
L$0H
T$8H
t$@H
D$@H
t$ H
|$ H
t$8H
|$@H
L$ A
|$pH
D$8L
|$pH
D$@H
D$ H
D$@H
t$XH
T$XH
t$`H
t$XH
T$XH
t$`H
AUATI
D$(1
$p8P
L$(dH3
8[]A\A]
AWAV
AUATUSH
T$ H
m<D9
D$PMc
*D95
A9m<
D$(D95q
D$PJ
D$ H
D$XL
T$HH
t$@H
|$XH
[]A\A]A^A_
D$PH
AVAUI
D$81
L$8dH3
@[]A\A]A^
[]A\
AWAV
AUATUSH
D$xE
9\$x
D$pH
|$PL
|$PI
=%*,
9\$x
|$XE1
D9d$X
\$PH
D9d$XH
D$PH
t$XD
[]A\A]A^A_
|$ H
|$0H
D$HPL
D$0H
T$@H
t$HH
|$@H
=	&,
AWAVAUATI
D$h1
t$P1
t$8H
L$hdH3
x[]A\A]A^A_
t$PL
=U#,
|$0L
=!#,
ATUSH
T$0H
[]A\
T$0H
AUAT1
A9\$
A9\$
[]A\A]
[]A\A]
ATUS
}DHc
[]A\
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATI
t}H9
L$HA
([]A\A]A^A_
AWAVAUATUSH
HcT$
A\A]A^A_
([]A\A]A^A_
t=S1
tuATI
A9\$
A9\$
[]A\
AUATUSH
D$(1
`uHH
D$(dH3
8[]A\A]
D$ d2
T$ H
tiAUATI
[]A\A]
AWAVI
AUATUSH
[]A\A]A^A_
[]A\
AWAVI
AUATA
Hco(
[]A\A]A^A_
@(H9G(r2H
J(H9K(s
AVAUATUSH
[]A\A]A^
D$xH
ATUI
[]A\
[]A\
AUATI
|$@H
[]A\A]
D$PH
L$XH
D$@H
L$HH
|$ H
D$0d2
t$@H
T$XH
D$(H
L$0H)
ATUH
[]A\
AWAVAUATA
([]A\A]A^A_
tXf.
AWAVA
AUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AVAUE1
ATUI
]A\A]A^
D$H1
D$HdH3
|$ H
\$ H
AWAVA
AUATI
D$81
\$8dH3
H[]A\A]A^A_
t$ H
tX<=
<ru,
<tuS
<mu+
Nz@L
Nz@H
D$0d2
l$ H
AUAT1
[]A\A]H
_0dH
AWAVAUATUSH
X[]A\A]A^A_
D$HH
d$@A
D$ M
T$8H
L$ H
Fw t
t$8H
t$0H
T$(H
t$(H
T$(H
|$HH
T$8H
ATUI
Ex t
[]A\
[]E1
tkATUI
ATUH
AUATI
tXf.
([]A\A]
AWAVAUATA
L$ L
D3d$
[]A\A]A^A_
ATUI
[]A\
AWAVH
AUATI
L$0H
E8E1
T$HL
T$HL
HcT$T
t$0H
[]A\A]A^A_
|$(H
l$hD
t$`L
l$hD
|$(H
l$hD
|$(H
l$hD
|$(H
t$`H
l$hD
t$`L
t$`5
|$(H
l$hD
t$HH
D$8H
l$hD
E{@t
HcD$D
|$pHc
?-tt1
t$PHc
|$XH
HcT$TH
D$XH
T$pHc
HcT$T
D$P9
L$DM
D$P9
D$PHc
|$XH
HcT$TH
L$TH
L$0H
Et`t
9-u|
l$hD
\$<M
|$PL
HcT$T
t$HH
EPE1
HcT$
l$hD
l$hD
EPE1
l$hD
L$`H
AWAVE1
AUATE1
D$X1
T$HL
Cu t
W E1
 D9t$@
L$XdH3
h[]A\A]A^A_
Cw t
Ctf%
Cw L
t$8H
l$0H
D$8H
D$0H
D$0H
l$0E1
 u8H
l$0H
Cx t
|$0H
|$0H
I;9u
D$01
|$0H
|$0I
L$0L
d$01
I;G(v
T$(1
W(H9
t$0H
D$(H
|$0H
t$8I
|$8L
Ctf%
D$(H
$H;J(w
D$0H
D$0H
H;(u
l$8M
l$(u
D$(H
l$(t
AVAUL
v0ATUI
]A\A]A^
]A\A]A^
AUATUSH
@uJH
H;E(r7
([]A\A]
H;E(wC1
u_[]A\
[]A\
AUATUSH
[]A\A]
[]A\A]
Cv`t
[]A\A]
AUATUSH
([]A\A]
AVAUI
ATUA
t&D;"u
[]A\A]A^
AVAUATUSH
 []A\A]A^
AWAVAUATUSH
D$X1
|$PH
L$XdH3
h[]A\A]A^A_
D$0A
|$T1
D$$A
|$ 1
|$0A
|$ A
D$X1
D$@	
T$XdH3
AVAUATUSH
 []A\A]A^
AUAT
D$X1
L$H!
T$XdH3
h[]A\A]
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ATUI
[]A\
ATUI
D$81
|$8dH3<%(
@[]A\
AWAVH
AUATI
T$8L
D$0H
t$(H
D$$H
D$pd2
T$ E
D$JE1
dH34%(
[]A\A]A^A_
T$ E
L$`A
d$JH
|$(1
G	AX
t$ E
D$@L
D$pH
T$@L
L$PH
|$`1
\$PL
L$hH
T$pA
\$PL
l$XH
DD$$
D$01
D$(H
t$$H
T$hH
t$pD
t$$H
D$JE1
D$(1
$s)V
T$(dH3
AWAVAUATA
[]A\A]A^A_
:tbD
xLE1
ATUH
D$PH
D@0H
t$PH
|$@H
T$HI
D$@H
t$HL
[]A\
D$PH
AWAVAUATI
-U@.
5B@.
[]A\A]A^A_
AWAV
AUATA
H;T$
([]A\A]A^A_
AWAVI
AUATI
D$Pd2
D$0H
D$pd2
D$`H
D$01
[]A\A]A^A_
5t]+
D$ A
t$@H
t$0H
T$ M
L$8H
T$0H
D$8I
D$`H
L$8H
T$(A
T$ H
|$@H
D$`L
L$`M
=m5.
D$0H
D$8H
t$0H
D$0H
t$0H
L$ M
T$(A
t$PH
|$H1
t$0H
L$ H
D$@H
T$HH
D$HH
D$HH
T$HH
L$ H
AWAVAUATI
D$81
D$0d2
|$ A
T$(H
L$8dH3
H[]A\A]A^A_
AWAVAUATI
D$X1
t$@L
L$XdH3
h[]A\A]A^A_
D$0d2
D$ H
T$(H
I;]Hr
D$0d2
T$0H
D$0d2
|$0H
D$0d2
D$ 1
|$0H
t$@A
|$@1
T$@1
AUATI
[]A\A]
[]A\A]
AVAU1
ATUI
]A\A]A^
AWAV
AUATUSH
<Pt_<Tt
[]A\A]A^A_
Hc-\
AWAV1
AUATUSH
[]A\A]A^A_
ATUSH
tR</t
[]A\
[]A\
[]A\
AVAUATUSH
9/tLH
[]A\A]A^
]A\A]A^
ATUS
[]A\
ATUI
D$81
|$ H
D$0d2
t$01
D$0H
|$ H
\$8dH3
@[]A\
ATUH
ATUI
 []A\
AVAUATUH
[]A\A]A^
~%E1
T$0H
L;t$0tMH
t#E1
/t6H
dH34%(
AUATI
[]A\A]
[]A\A]
AWAVAUATI
-M=+
[]A\A]A^A_
|$ 1
/tNA
H;D$@
H;5h:+
=b:+
=S:+
D$@H
Degas are we not drawn onward no In union drawn onward to new eras aged
=C9+
ATUSH
[]A\
ATUI
[]A\
[]A\
AVAUI
ATUH
~Cf.
[]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
]A\A]A^A_
AWAVAUATUSH
|$(H
|$ L
|$0L
t$(1
D$ H
D$0L
D+D$
,/D8
|$ H
|$0H
[]A\A]A^A_
D9t$
D9t$
d$ )
d$0L
d$(I
\$8D
D$ M
I@H9O@
ATUS
s 9p s	H
{ 9x s	H
AVAUM
ATUH
pIc1
D$h1
D$hdH3
p[]A\A]A^
AWAVI
AUATA
|$ A
[]A\A]A^A_
O0E1
ATUI
[]A\
T$ H
D$8%
T$PH
[]A\
AUATI
[]A\A]
AUATUSH
[]A\A]
= .+
AWAVM
AUATA
t<H9
[]A\A]A^A_
[]A\A]A^A_
AUATUSH
[]A\A]
ATUH
H;-!
[]A\
AWAVI
AUATI
D$(%
D$@D
D$hH
C@w[H
[]A\A]A^A_
AWAVAUATUSH
t$ dH
D$x1
D$@d2
|$0H
D$0H
T$8H
D$8H
D$8H
l$8L
T$0H
T$@H
l$8H
|$0H
D$8H
t$@L
t$@H
D$PH
D$PA
LcT$
L$ H
|$ )
T$PJ
D$XA
|$(1
D$xdH3
[]A\A]A^A_
T$ H
t$@H
ATUH
[]A\
|$ Hc
|$ H
t$ H
AVAUA
ATUH
l$0H
[]A\A]A^
AWAVAUATUSH
D$ H
D$@d2
|$0H
|$@H
D$pJ
D$`d2
D$@H
|$PH
D$PH
T$XH
D$XH
D$XH
|$PH
|$`H
\$`H
t$`H
D9d$x
|$p1
[]A\A]A^A_
t$$H
/D9d$x
D9d$x
AWAV
AUATUSH
([]A\A]A^A_
St;H
[]A\
AUATUSH
[]A\A]
[]A\A]
ATUA
AUATUSH
t-f.
[]A\A]
AWAVAUATI
\$0H
tOcL
[]A\A]A^A_
u'H9
ATUH
oaSI
[]A\
AVAU
ATUI
]A\A]A^
ATUSH
J D9H H
Q D9R v
D$(%
D$@H
<$PACK
[]A\
E@I9@@
H;D$@
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATI
l$ 1
[]A\A]A^A_
AVAUI
ATUI
t$0H
[]A\A]A^
?w&H
AVAUATUH
|$PdH
[]A\A]A^
D$H1
L$HdH3
AWAV
AUATI
[]A\A]A^A_
t?9s(v2
W H9
AWAVAUATUSH
[]A\A]A^A_
@(PAT1
[]A\A]A^A_
AUATA
[]A\A]
[]A\A]
AUATUSH
Z0E1
[]A\A]
[]A\A]
[]A\
AVAUI
ATUI
D$(1
D$ I
L$(dH3
0[]A\A]A^
H;s u
D$ L
|$ L
AUATI
[]A\A]
AWAVI
AUATI
T$0H
L$8H
D$(I
D$pH
L$XH
T$XH
L$`L
t$pH9t$
T$XA
T$`L
L$XI
H9H u
D$`H
t$LH)
t$pL
D$`E1
D$ L
D$LH
D$$H
H+U(M
M+e(I
HcD$ 
T$XL
t$PL
t$hL
D$`L
|$`M
L$(H
T$hH
t$LH
HcD$ H
D$`H
D$LH
D$8H
D$PH
t$pH9
dH34%(
[]A\A]A^A_
M+e(I
L9%>
T$(H
L$(L
t$XH
HcD$ H
D$PH
L$`H
T$XL
D$`H
D$(1
T$(dH3
tDUSH
D$X1
T$XdH3
AWAVI
AUATI
D$01
L$(H
]L;l$
L;l$
dH3<%(
[]A\A]A^A_
D$0H
AWAVI
AUATUS
dH34%(
[]A\A]A^A_
l$,t
L$8H
T$@H
t$0H
T$8H
D$@H
L$0D
D$0A
D$0H
D$Pd2
t$8H
T$8H
D$`L
T$8L
t$@H
t$8L
T$@A
T$`H
t$0M
D$0H
t$8L
H;x 
D$@H
T$`H
t$0M
T$`H
t$0L
t$01
AUATI
t [H
]A\A]A^
D$01
T$aH
AVAUI
ATU1
D$(1
H;D$
H;D$
L$(dH3
0[]A\A]A^
D$ A
ATUH
uY[]A\
AWAVI
AUATI
[]A\A]A^A_
|$0H
HcD$
|$01
t$ H
D$ H
D$81
T$8dH3
ATUI
D$81
L$8dH3
@[]A\
AWAVI
AUATE
L$0H
D$@d2
[]A\A]A^A_
L$0L
D$0 
|$0A
D$`1
|$0H
D$`1
AWAVI
AUATE
[]A\A]A^A_
AUATI
D$81
L$8dH3
H[]A\A]
D$(1
T$(dH3
D$(1
T$(dH3
AVAUA
ATUI
D$81
L$8dH3
@[]A\A]A^
fffffff
AWAVI
AUATI
D$h1
_0H;
D$0d2
t$(H
|$0L
D$0d2
T$(I
t$0D
L$hdH3
x[]A\A]A^A_
t$(H
|$0L
D$@L
AUATA
D$h1
D$0d2
L$hdH3
x[]A\A]
t$(L
t$(L
|$0L
D$@L
;PACK
AWAVE1
AUATI
D$x1
L$xdH3
[]A\A]A^A_
t$0H
AUATI
D$(1
D$ d2
L$(dH3
[]A\A]
ATUH
 []A\
AWAVAUATI
;](sN
[]A\A]A^A_
[]A\A]A^A_
xxxxxxxxE1
AWAVAUATA
[]A\A]A^A_
[]A\A]A^A_
ATUI
 u}1
[]A\
D$$[]
D$$A\
D$$]A\
[]A\
[]A\
AWAVI
AUATI
2@81t
[]A\A]A^A_
ATUH
AVAUATUH
D$h1
|$ E1
L$hdH3
p[]A\A]A^
!u	H
AWAVAUATUSH
D$X1
|$0H
T$2I
T$:I
T$BI
T$JA
T$RA
D$XdH3
h[]A\A]A^A_
ATUSH
D$x1
T$0H
t$PH
t$0H
L$xdH3
[]A\
AWAVM
AUATLc
USD)
([]A\A]A^A_
AUATUSH
D$81
L9d$
T$ H
t$(L
L$8dH3
H[]A\A]
AUATI
D$x1
L$PH
t$PH
D$$ L
t$0H
L$xdH3
[]A\A]
ATUI
 []A\
AUATA
[]A\A]
[]A\A]
AWAVLc
AUATM
D$x1
T$`H
t$xdH34%(
[]A\A]A^A_
;}u/H9
L$(L
T$0Lc
D$,L
D$0PAR
t$,H
t$ H
|$0H
T$0I
D$0L
T$`H
T$0I
T$0L
D$@d2
|$8(L
L$(L
D$Pr=X
D$X~=X
D$Pj=X
L$(L
L$(H
D$(H
|$@L
AWAVI
AUATA
dH34%(
[]A\A]A^A_
=Fh-
9A;o<uv
d$ )
\$(H
E9|$<u
|$XH
D$@d2
|$0H
|$0H
T$8H
S<H;T$8
\$(H
L$LH
|$PL
D$PH
D$XH
|$PL
L$0H
T$pH
|$PH
AWAT
T$0H
l$@H
K8VI
AWAVAUATA
t-~KA9
[]A\A]A^A_
([]A\A]A^A_
{t[H
{u:I9
([]A\A]
ATUI
[]A\
-t)H
AVAUI
D$81
d$ H
L$8dH3
@[]A\A]A^
(H;W0vFH
ATUH
AUAT1
[]A\A]H
ATUH
[]A\
AVAUI
ATUSH
dH34%(
 []A\A]A^
Su3H
=T;,
=i:,
|$ H
|$ H
AWAVE1
AUATA
D$81
twD9
D$ H
T$ 1
t D98~
^0f.
L$8dH3
H[]A\A]A^A_
H;D$
AUATI
([]A\A]
H;D$
D$81
D$8dH3
H;D$
AUATI
~oE1
HcE H
[]A\A]
AVAUI
A9F 
n ]A\A]A^
AWAVAUATUSH
D$8H
D$(E
T$$E
L$$H
\$(I
A9@ w
\$P1
d$$E
D$$H
L$(L
D$ H
L$ H
t$@L
D$ 9A
D$hH
t$8L
T$X1
9\$Xw
[]A\A]A^A_
D$ 1
|$0H
\$ E
L$ I
T$ E
u+H9
E;l$ }<E9
D$(H
|$0A
E;l$ |
L$ I
t$HH
|$0H
}+D;,$H
\$P1
AUATI
USHc
D$@H
([]A\A]
T$PI
t$XI
l$@L
T$PA
AWAVAUATUSH
D$Premof
D$V:
|$(A
D$0H
|$@D
D$8D
L$WE1
D$WD
L$ H
dH3<%(
[]A\A]A^A_
D$W L
t$PA
D$@L
D$(H
D<@r
|$@L
|$0H
|$,H
t$XIc
D$W 
D$@I
D$8H
|$@H)
D$04DX
L$ H
T$@A
AWAVAUATUSH
tFD9
([]A\A]A^A_
AVAUATUSHc
[]A\A]A^
^(H9
ATUSH
[]A\
D$(H
[]A\
AUATI
]@;]8s@f
9]8H
[]A\A]
AWAVH
AUATUSH
t;A;E
C8L9
G<9C<
Td0H
Td0A
([]A\A]A^A_
tI;A
wDUSH
/tvH
tm0H
AUATI
[]A\A]
AUATI
[]A\A]
HcT$
AVAUATH
<6L9
[]A\A]A^A_
ATUI
[]A\
AWAVAUATUSH
lm0H
L9t$
Tm0H
([]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
ATUI
[]A\
ATUA
[]A\
[]A\
ATUI
 []A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
T$PH
L$XL
D$`L
L$ht=
Eleele
)D$p
D$81
T$ H
D$$0
D$(H
D$@H
D$8dH3
T$ H
D$$0
D$(H
D$@H
[]A\A]A^
AVAUI
ATUI
]A\A]A^
]A\A]A^
]A\A]A^
AUATA
[]A\A]A^
AUATI
[]A\A]
[]A\A]
[]A\A]
AVAUATU
[]A\A]A^
[]L)
A\A]A^
[]A\A]A^
AUATI
/vwH
[]A\A]
[]A\A]
[]A\A]
8"uVH
[]A\
[]A\
AUATA
[]A\A]
]A\A]
AUATA
dH3<%(
[]A\A]
ATU1
[]A\
t_ATUI
<&tY
t#<"u
[]A\
<<t4<>u
AWAVA
AUATI
~uVf
[]A\A]A^A_
AVAUATUSH
/t3H
[]A\A]A^
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
=jW*
5:W*
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ATUSH
D$(1
D$(dH3
0[]A\
D$ d2
T$ H)
ATUH
[]A\
AWAVAUATI
u3L9
([]A\A]A^A_
~0dH
[]A\
AWAVAUATUSH
D$(1
<&Hc
L$(dH3
8[]A\A]A^A_
D$ H
+D$ A
D$ 1
+D$ 
AWAVE1
AUATUSH
([]A\A]A^A_
AVAUI
USHc
||I9
[]A\A]A^
AWAVI
AUATI
l$ dH
D$h1
|$ H
D$HA
L$hdH3
x[]A\A]A^A_
AWAVA
AUATH
[]A\A]A^A_
t)H=
AWAV
AUATA
x+t1A
[]A\A]A^A_
AVAUATUI
sqLc
[]A\A]A^
AWAV
AUATI
[]A\A]A^A_
tTAVI
A9l$
[]A\A]A^
]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
AUATUSH
tTE1
t%E1
[]A\A]
AUATUSH
tTE1
[]A\A]
A9\$
[]A\
AVAU
ATUSL
A9l$
$[]A\A]A^
]A\A]A^
uIHc
AWAVAUATUSH
<$tgA
[]A\A]A^A_
AWAVAUATUSH
$t\A
[]A\A]A^A_
ATUH
 []A\
|$ H
L$ L
=k9*
AWAVAUATUSH
D$@f%
|$01
D$8p\}
D$Hp\}
D$ d2
|$0H
L$x	H
D$p@tW
t$`H
|$0I
[]A\A]A^A_
$p\}
AWAVAUATUSH
B@f%
@@f%
[]A\A]A^A_
|$0L
D$8p\}
D$Hp\}
D$ d2
L$x	H
D$0H
D$p@tW
AWAVI
AUATI
D$Ho
\$PH
|$`1
T$`H
 D9$$w
[]A\A]A^A_
AUATI
([]A\A]
ATUI
 []A\
T$ 1
AWAVI
AUATM
D$`d2
D$(H
D$0dH
[]A\A]A^A_
|$PI
|$PH
|$PL
D$ H
d$(H
D$8L
|$pH
T$pH
|$pH
D$pH
T$xH
D$xH
D$xH
|$pH
|$pH
D$PH
T$XH
D$XH
D$XH
T$xH
D$ D
T$81
|$8L
H9D$
H9D$ 
l$@D
L$LL
l$@D
L$LL
|$8D
L$@A
L$@L
ATUH
D$0F
D$8=
|$P1
D$(I
T$PH
t$ 1
[]A\
AVAUA
ATUSH
|$ 1
|$ H
D$(p\}
D$8p\}
t$ H
D$`@tW
D$h	H
=m *
[]A\A]A^
AWAVI
AUATA
D$ p\}
~(f.
D$@d2
D$`d2
|$0H
T$@H
|$P1
|$pH
|$`1
DD$`H
D$@H
|$ H
D$ H
[]A\A]A^A_
AWAV
AUATI
d$ H
D$xPJX
D$(p\}
D$8p\}
D$pL
L$h	H
D$`@tW
D$ L
[]A\A]A^A_
\$ H
D$xaJX
D$(p\}
D$8p\}
D$pH
D$`@tW
l$XH
\$ H
D$xPJX
D$(p\}
D$8p\}
[]A\
D$pH
L$h	H
D$`@tW
D$ H
|$PH
AWAVAUATI
D$81
|$8dH3<%(
H[]A\A]A^A_
u!f.
|$ L
D$(H
D$(H
9\$ w
ATUI
D$81
D$0d2
T$ H
T$ H
D$8dH3
@[]A\
AUATI
D$h1
D$ H
d$(H
T$HH
T$X1
L$hdH3
x[]A\A]
ATUA
[]A\
AWAVAUATI
D$`H
D$x1
D$0d2
D$Pd2
HcT$
l$`L
|$@H
|$0L
D$pd2
\$xdH3
[]A\A]A^A_
t$`A
t$hH
|$`H
|$`1
lu~A
luvA
ATUH
D$h1
l$ H
T$HH
T$X1
L$hdH3
p[]A\
AVAUATUSH
D$H1
D$ d2
l$0H
D$0H
T$HdH3
P[]A\A]A^
|$ L
D$81
D$ P2
L$8dH3
uuE1
~6Hc
<2/t
AWAVI
AUATE
T$ H
D$8%
[]A\A]A^A_
D9O 
u	E9
dH34%(
dH34%(
~CHc
AWAVAUATE1
D$81
|$ L
|$ B
D$ I
L$8dH3
H[]A\A]A^A_
>tHH9
ATUSH
 []A\
AWAVH
AUAT
[]A\A]A^A_
[]A\A]A^A_
ATUS
9.u H
[]A\
ATUI
[]A\
AWAVA
AUATUSH
t$ H
D$X1
D$Pd2
D$ H
D$ 7
D$(H
l$(H
T$(1
|$PL
D$(H
|$0H
D$8D
L$8A
D$(H
D$(H
D$XdH3
h[]A\A]A^A_
|$8I
D$(H
|$@M
D$8H
|$0H
T$PH
D$(H
D$(H
|$8H
D$(L
|$@D
D$(H
L$8A
|$@H
|$ H
t$(H
D$ \PX
ATUI
 []A\
AUATI
[]A\A]
AUATI
[]A\A]
ATUH
[]A\
ATUS
[]A\
ATUS
[]A\
AUAT
[]A\A]
[]A\A]
/tmL
AUATI
[]A\A]
ATUH
D$X1
t$XdH34%(
`[]A\
t$ H
D$ 1
ATUI
[]A\
D$`L
L$ht=
)D$p
D$81
D$(H
D$  
D$$0
D$0H
D$8dH3
T$ H
D$`L
L$ht=
)D$p
D$81
D$(H
D$  
D$$0
D$0H
D$8dH3
T$ H
D$`L
L$ht=
)D$p
D$81
D$(H
D$  
D$$0
D$0H
D$8dH3
T$ H
ATUSH
[]A\
;HiD$
u"Hi
;HiD$
AUATI
|$(I
D$ H
[]A\A]
[]A\A]
ATUH
[]A\
ATUI
AVAUATUSD
f8tWH
[]A\A]A^
]A\A]A^
AVAUATUSH
d$@1
D$0d2
D$Hp\}
D$Xp\}
D$@H
|$ 1
[]A\A]A^
AVAUATUSH
D$X1
D$0d2
D$Pd2
|$@H
D$@H
T$HH
D$HH
D$HH
|$@H
L$XdH3
`[]A\A]A^
T$HH
AWAV
AUATUSH
[]A\A]A^A_
AWAVAUATI
D$H1
D$@d2
t$01
t$8H
|$@1
D$@d2
t6E1
t Lc$$J
D;d$
D9|$
~YIc
T$(H
D$(I
l$ A
Fl$(A
l$ M
x<Hc
|$ H
D$ t
|$ H
D$HdH3
X[]A\A]A^A_
T$ H
L$(L
L$(H
T$ L
D$ L
d$(A
L$(H
T$ L
D$ H
D$@d2
|$ L
D$@d2
AUATI
]A\A]1
[]A\A]
[]A\A]
AVAUATU
dH34%(
 []A\A]A^
tME1
{(PL
D$X1
D$H 
T$XdH3
AWAVI
AUATI
s(u5H
D$	H
D$	H
([]A\A]A^A_
AWAVI
AUATI
D$(1
L$ A
|$!H
t$ A
AWE1
F`Z^H
s(PAWM
t$(dH34%(
8[]A\A]A^A_
AVAUATUSL
[]A\A]A^
]A\A]A^
AWAVAUATUSH
D$h1
D$<D9
d$<H
|$0Hc
D$0L
d$8H
D$(H
l$ D
l$,D
HcL$
l$ D
l$,H
HcD$(H
L$hdH3
x[]A\A]A^A_
|$@H
AUATI
[]A\A]
[]A\A]
AWAVI
AUATUS
l$pH
D$@d2
D$`d2
D$xp\}
|$0H
D$0H
T$8H
D$8H
D$8H
|$PH
D$PH
T$XH
D$XH
D$XH
|$(H
L$PH
L$(H
T$`I
|$P1
dH34%(
[]A\A]A^A_
T$XH
AVAU
ATUH
\$PL
D$ d2
D$@d2
D$Xp\}
D$hp\}
|$0H
D$ H
D$@H
D$ H
D$ H
|$0Mc
D$0H
D$@H
|$0L
D$0H
D$@H
|$0L
l$81
[]A\A]A^
AWAVA
AUAT1
D$(1
D$(dH3
8[]A\A]A^A_
ATUH
[]A\
AVAUI
D$pH
[]A\A]A^
D$8 
D$XP
D$8 
D$@p
D$P`
D$Xp
D$pH
AUATI
gpdH
[]A\A]
C(E1
AWAVM
AUATI
[]A\A]A^A_
t$(L
t$(1
t$(A
\$(H
T$PH
D$PH
9\$Xw
|$P1
D$(H
d$P1
l$(L
D$Xp\}
D$hp\}
D$@H
|$0H
T$8H
t$(M
L$PH
l$(H
T$(I
AWAVAUATUSH
L$hA
Dv0A
u#Ic
[]A\A]A^A_
AUATI
[]A\A]
$/refH
AUAT
[]A\A]
[]A\A]
|$ L
ATUH
[]A\
u&[]A\
ATUH
[]A\
[]A\
AWAV
AUATI
D$X1
D$0d2
D$0A
|$@H
D$Pd2
|$@1
D$0A
T$XdH3
h[]A\A]A^A_
AUATI
([]A\A]
?otv
AWAVAUATUSH
D$H1
D$ d2
L$HdH3
X[]A\A]A^A_
|$,H
|$ A
<*tb
C0t A
|$01
D;l$
AVAUI
ATUI
@tf1
 []A\A]A^
AVAUI
ATUI
@t0L
A\A]A^
AVAUATU
D$(1
D$ d2
 t/A
|$ H
MX	H
L$(dH3
0[]A\A]A^
AWAVAUATI
D$ d2
D$0M
T$\H
l$ H
@X	uAH
D$ H
EX	u
[]A\A]A^A_
D$0I
D$@d2
GX	u.H
T$0H
D$8H
T$8H
D$8H
D$@H
T$@H
AWAVI
AUAT
D$ d2
L$PH
t$ H
|$PH
D$81
D$0L
9\$8w
|$ I
[]A\A]A^A_
|$0H
|$0H
D$ d2
D$ H
T$ H
D$@d2
|$0H
|$01
|$PH
D$XH
\$PH
D$XH
D$PH9
D$ I
|$P1
ATUI
[]A\
tSAUATI
[]A\A]
[]A\A]
AWAVAUATI
|7(L
$HcU
[A\A]A^A_]
AWAVAUATI
\$ 1
T$HE
x7Hc
dH3<%(
[A\A]A^A_]
t$ A
t7Ic
_AXM
AYAZ
D$@H
x)H9
AWE1
t$ M
ATUI
D$81
L$8dH3
@[]A\
AWAVI
AUATUSH
D$,H
L$(A
D$,I
D$@A
[]A\A]A^A_
AVAUI
 []A\A]A^
AWAVAUATE
([]A\A]A^A_
[]A\A]A^A_
ATUSH
 []A\
AWAVM
AUATI
D$x1
|$0A
HcD$
L$ H
D$ %
T$`H
D$`H
D$pH
|$`H
H9T$
L$xdH3
[]A\A]A^A_
AVAUHc
ATUM
t$PH
[]A\A]A^
ATUS
[]A\
AVAUHc
ATUI
]A\A]A^
.[]A\
tPAVAUE
ATUI
u8D)
<,Hc
[]A\A]A^
[]A\A]A^
AWAVI
AUATUSH
T$lD
D$ A)
x[]A\A]A^A_
D$0H
t$hx
HcL$l
D$LHc
D$PH
D$XIc
D$`H
T$HH
\$(D
L$$H
L$$L
\$(LcT$Hu#E
t$@L
(H;l$
T$ I
(H;l$
D$LH
x[]A\A]A^A_
T$HH
\$(D
L$$H
L$$L
\$(D
d$`D)
D$hL
T$HD
L$$9
L$$D
L$(D
;L$h
D$$%
[]A\A]A^A_
T$PL
|$XH
T$$H
T$PL
Hc|$l
D$lD
57@)
AUATA
O dH
D$(1
t!H;P
D$ tEH
D$(dH3
8[]A\A]
t+Hc
/tAH
ATUI
[]A\
AVAUI
ATUI
5L<)
L$@H
D$X1
\$XdH3
`[]A\A]A^
D$@H
D$HI
D$PA
AWAVI
AUATH
uR9\$
u29l$(tDHc
T$ H
[]A\A]A^A_
[]A\A]A^A_
T$ H
[]A\A]A^A_
AWAVA
AUATM
T$(H
D$Pd2
|$@H
|$PA
|$PH
|$`L
T$8H
t$4H
L+L$PI
D$8H
|$@H
D$8H
T$8H
D$ H
D@0H
D$ H
fffffff
D$ L
T$8I
|$`L
t$PH
T$HH
[]A\A]A^A_
|$@H
H+T$PH
|$@1
L$(E1
l$HI
D$8H
|$@L
L$(E1
L$(H
AVAUE1
ATUI
[]A\A]A^
]A\A]A^
AWAVAUATUHc
T$(dH
D$(H
\$(H
|$pH
|$PHcs 
HcC H
D$pHcS H
D$hH
D$8H
Tacocat
D$@H
L$0H
D$`H
|$8I
d$ H
d$ Mc
|$@H
D$(H
t$P1
I9D$
T$(H
D$(H
[]A\A]A^A_
D$hH
D$pH
ATUI
uCHcC 
[]A\
H;:t
AWAVH
GXAUATI
A9\$
E;u<ueIc
A9\$
E;u<u
([]A\A]A^A_
N49O4
AUATUSH
[]A\A]
t+USH
AWAVAUATI
HcD$
A;F<
D$PH
|.X/
0u]A
A;F<
D$ H
D$XH
[]A\A]A^A_
AWAVI
AUATM
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AVAUATUSH
[]A\A]A^
AVAUATUI
l$8E
[]A\A]A^
t$ H
t$(H
t$0H
t$8H
L$PH
D$X1
L$XdH3
AWAVAUATUSH
D$LH
t$8H
D$(HcD$L
D$@HcD$HH
D;uP
T$(L
L$<9H s
D$8HcL$
t$0L
\$ H
\$ t~
T$H9T$
D$8L
d$0L
[]A\A]A^A_
D$<+D$L
AWAVAUATA
L$@dH
|$@H
L$ H
D$0H9L$
L$@A
l$HL
\$<I
D$(I
T$0H
T$0D
D$(H
L$0E9
t%I;
D$ H
L$ H
H#L$
D$@u
t$0I
T$ H
d$PH
t$8H
T$pI
T$(H	
t$@H
T$xH
t$HH
T$XH+P
T$pE
t$`H
t$h~^L
|$@E
A;O<
L$ H
D$ A;G<
[]A\A]A^A_
L$ H
5\!)
D$@H
|$PH
T$PH
t$XD
\$@L
AWAVHc
AUATUSH
D$<H
\$H1
L$4L
L$0H
L9|$
L$DH
Ht$0H
HcD$ I
H+D$(H
L9|$
D$<H
L$HdH3
X[]A\A]A^A_
L$0L
t$ L
l$(H
T$DL
HD$0
D$8!E8
AUAT
[]A\A]
AWAVAUATUSH
|$0H
D$h`LS
D$xI
D$XteL
T$0L
s@Hc
[]A\A]A^A_
D$0A
G:@t
|$0A
t$0H
G<9D$P
D$@d2
A9\$
|.pH
t$@H
|$0A
AWAVAUATUSH
D$'L
T$,A
t$ I
T$,E
[]A\A]A^A_
8[]A\A]A^A_
8[]A\A]A^A_
8[]A\A]A^A_H
ATUSH
[]A\
@t:E1
AWAVAUATUSH
[]A\A]A^A_
AUATHc
D$(1
D$ d2
t.H9
H+D$
L$(dH3
8[]A\A]
/t+H
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
|$pL
T$xH
D$xH
D$xH
D$pH
T$xH
$<?w
D$xI9
|$pH
L$xH
D$(L)
L$0H
D$ H
|$pI
H)D$
T$xH
D$xH
D$xH
D$pH
T$xH
|$p1
L$8H
D$xH
D$@H)
D$PL
t$@H
d$x<?w
|$pL
<$.uBA
L;d$
D$pH
t$xH
\$xH+\$@
|$pL
t$hH
|$pL
L$HH
T$hL
L$ H
L$(H
L$0H
L$8H
L$PH
L$@H
D$pI
T$xL
D$XH
D$xH
D$xH
D$xH
T$pH
T$xH
D$xH
|$pH
D$xH
|$pH)
D$xH
H)D$
|$pH
D$xH
AWAVAUATI
D$ d2
8.tGH
[]A\A]A^A_
t$0I
D$0M
T$HH;U8u
t$PH
UHH;T$Xu
T$xH;Uh
t$pH
l$@L
T$ H
AUATI
[]A\A]
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$Hc
L< u
D4 %
D$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AVAUI
ATUHc
]A\A]A^
[]A\A]A^
AUATI
([]A\A]
Hct$
$t_H
tA=. 
A;8s
 veA
AVAUA
ATUSH
tHMc
[]A\A]A^
[]A\A]A^
AWAVI
AUATUS
t$(D
D;4$~	M
d$(L
D;4$A
8[]A\A]A^A_
|$(1
t$(A
D$(H
H9D$ 
L$ H
HcT$
AVAUE
ATUA
[]A\A]A^
AWAVA
AUATUSH
t$H1
d$(I
D$@d2
|$01
\$@L
|$(D
|$(L
|$(A
|$(1
T$(H
|$(D
D$0H
H+T$@H
|$0H
t$0H
t$8H
L$0H
t$@H
T$8H
D$@H
D$HdH3
X[]A\A]A^A_
|$(L
T$PH
L$XL
D$`L
L$ht=
)D$p
D$81
T$ H
D$(H
D$@H
D$$0
L$8dH3
AVAUI
ATUI
D$(1
\$ I
lC H
t$ L
|$(dH3<%(
0[]A\A]A^
AWAVI
AUATH
t6Ic
[]A\A]A^A_
AUATI
([]A\A]
tKH)
ATU1
Sv(L
[]A\
AVAUI
ATUH
t-[]A\A]A^
]A\A]A^
]A\A]A^
]A\A]A^
dH34%(
H9T$
AWAVAUATL
D$ I
|$(L
|$ L
8[]A\A]A^A_
8[]A\A]A^A_
]A\A]A^A_
AWAVI
AUATUSH
.t	@
([]A\A]A^A_
[]A\A]A^A_
t	</u
[]A\
[]A\
u:USH
AWAV
AUATUSH
D$0d2
D$Pd2
D$pd2
\$hH
l$pH
D$`L
d$hH
|$@H
|$PH
|$`1
|$ H
|$ H
Dm0A
[]A\A]A^A_
D$`H
\$hH
|$@E1
AWAVI
AUATI
D$81
l$ H
D$0d2
D$0H
|$0L
L$8dH3
H[]A\A]A^A_
t)H9
AUATA
[]A\A]
[]A\A]
AVAUI
ATUI
[]A\A]A^
]A\A]A^
ATUH
[]A\
ATUH
t{[]A\
ATUE1
D$ H
P[]A\
AUATA
[]A\A]
AUATA
[]A\A]
AUATUA
]A\A]A^
taAUATA
[]A\A]
[]A\A]
AUATA
[]A\A]
[]A\A]
[]A\A]
AVAUI
ATUA
H;D$
 []A\A]A^
tgAVA
AUE1
]A\A]A^
]A\A]A^
+tI<wt
<au5
[]A\
AUATH
[]A\A]
ATUH
[]A\
AWAVAUATLc
D$(1
H3L$
L;d$
L$(dH3
8[]A\A]A^A_
AUATI
ZYv#H
[]A\A]
[]A\A]
AUAT
[]A\A]
ATUH
t>E1
[]A\
ATUA
[]A\
ATUA
[]A\
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
x!Hc
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ATUI
[]A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AWAVHc
AUATUSH
T$$L
D$8L
t$,1
D$$A
D$ A
D$(tYH
D$(Ic
D$$@
t$,A
HcT$ H
|$8H
HcT$
|$,E9
[]A\A]A^A_
D$$@
t$,E1
t$,1
HcD$,t3
AWAVAUATUSH
[]A\A]A^A_
dH34%(
AWAVI
AUATI
Lcd$
([]A\A]A^A_
?Mcf
/<	toI
t'Hc
|$PH
AWAVH
AUATUSH
<RtV<Uu
([]A\A]A^A_
L9l$
AWAVAUATI
USE1
[]A\A]A^A_
|$ dH
T$ 1
ATUH
 []A\
AWAVAUATI
T$`H
[]A\A]A^A_
/t8E1
L$  
/t(E1
[]A\
[]A\
[]A\
AUATI
D$81
D$8dH3
H[]A\A]
t$ H
AUAT
|$PH
\$XH
D$ d2
|$h1
D$Xp\}
D$hp\}
D$@d2
|$PL
\$0H
t$ H
[]A\A]
|$PL
D$81
\$8dH3
AWAVI
AUATA
D$ d2
D$@d2
D$H1
|$ A
|$0H
T$0L
D$@E
|$0H
T$0L
D$HdH3
X[]A\A]A^A_
D$0D
%?[(
T$8H
D$8H
D$@D
D$8H
D$0H
T$8H
D$8H
D$8H
T$8H
T$ H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AUATI
[]A\A]1
[]A\A]H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AWAVA
AUATI
D$h1
=/-*
D$ d2
D$@d2
D$`d2
T$0L
-@,*
D$hdH3
x[]A\A]A^A_
T$PH
D$XH
T$`H
D$PH
T$XH
D$XH
D$XH
|$PH
|$PH
|$PH
AWAVAUATUSH
D$X1
D$0d2
D$XdH3
h[]A\A]A^A_
D$ 1
$vHI
D$0A
D$P(
D$ H
AWAVAUATI
[]A\A]A^A_
T$01
|$01
T$@H
T$@H
T$@H
|$ H
5UH(
D$(H
D$0H
T$@H
T$@H
T$@H
T$(1
T$@H
T$@H
T$@H
AWAVI
AUATM
D$PH
d$8E
d$XE
|$01
D$`d2
L$PH
\$`M
D$PH
[]A\A]A^A_
D$ I
ED$ H
D$`d2
A[[A
D$(H
D$(E
D$8D9
\$XE
5J/(
AWAVI
AUATUSH
D$H1
T$0H
D$@d2
5#J(
D$@d2
D$0H
T$8H
D$8H
T$@H
D$0H
T$8H
D$8H
D$8H
d$@L
D$HdH3
X[]A\A]A^A_
=}G(
=UG(
T$8H
T$8H
L$0H
T$,H
t$(L
|$01
L$0I
|$0H
L$0I
L$(1
tqAUATI
]A\A]
[]A\A]
AWAVAUATI
D$(1
HD9;
L$(dH3
8[]A\A]A^A_
AUATUSH
[]A\A]
AWAVAUATUSH
D$X1
D$ H
D$0H
T$8H
D$@H
t$0L
l$@H
D$(f
D$(L
l$8L
d$HL
D$ H
t$@H
L$XdH3
h[]A\A]A^A_
AVAUM
ATUM
D$81
\$ H
t$8dH34%(
[]A\A]A^
AVAUI
ATUI
\$0H
[]A\A]A^
AWAVI
AUATUSH
$u9L
[]A\A]A^A_
tgAUATI
[]A\A]
L)GpH)GxH
FKpH
FCxE1
FWpH
FWpH
FWpH
AUATA
au)H
[]A\A]
FSpH
FWpH
AUATA
au)H
[]A\A]
AWAVAUATUSH
u2Ic
[]A\A]A^A_
tTE9
AWAVAUATUSH
_git._tcH
D$0d2
t$ H
|$0H
T$@H
l$V1
[]A\A]A^A_
t$HA
ATUI
D$81
\$8dH3
@[]A\
AWAVAUATUSH
D$H1
\$ A
\$$E
|$$E
\$(A
T$,A
V0D1
L$8A
D$ E
t$<E
34$D3D$<
D3D$(
3,$3\$
3l$,D
3\$0
3D$(A
D$ D
\$(D3\$0
\$(F
D3\$ A
\$,G
\$8D3\$0A
D3\$$D3T$<A
\$0G
D3T$(A1
T$4G
T$8D3
D3T$,A
T$8G
t$0E
T$<D3T$
T$<F
D3T$ A1
D3T$4D3L$(A
D3T$$D3T$8A
|$<A
D3D$,A1
3L$4A
3T$ 3D$$3T$8
D$ 3D$(A
D$ A
D$$3D$,E
D$$A
D$(E
D$,3D$4A
3D$ 
D3t$8D1
3L$(!
D3t$$
L$4A
T$8D
D3T$
D3T$,
D3|$
D3|$0A!
D3\$ D
T$8A
|$<D
|$8A
D3d$$
D3l$(
D3l$<3l$
3l$,D
3,$A!
D3T$
3\$0A1
D3T$
D3T$ 
D3T$
D3L$$D3L$<A
D3L$
D$ 3D$(3
D$ A
D$$3D$,3D$
D$(3D$03D$
3D$ 
T$0A
D$$A
T$<A
T$4A
l$,A
\$4A1
T$8A
t$8D
T$<3T$
$3T$
3T$ D
3T$ D
T$ A
$3T$
T$ A
D3d$
D$$A
3l$ 
l$,E
3\$$D3\$
\$0A
D34$D3\$(A
D3T$,D1
\$4G
T$8E
D3l$
3D$0D
D$HdH3
X[]A\A]A^A_
AVAUI
ATUI
[]A\A]A^
?v6L
AUATI
[]A\A]
AUATI
D$H1
L$HdH3
X[]A\A]
D$ H
D$(H
D$0H
AWAV
AUATD
D$X1
tZf%
tMf=
|$@H
D$@H
T$HH
D$XdH3
h[]A\A]A^A_
tw9D$
|$@H
|$@H
F0I9C0I
C{0I
D$@E1
L$@L
L$0H9
T$0H
|$8I
C0H9
D$8H
D$8M
T$ H
s	H9
AWAVAUATUSH
D$X1
D$0H
T$8H
D$(D9
|$ L
D;d$
D;l$,
D$(H
D$@H
T$HH
D$XdH3
h[]A\A]A^A_
D$(H
D$0f
D$8f
t$0H
d$,D
l$0L
AWAVAUATUSH
[]A\A]A^A_
AWAVM
AUATI
D$PI
[]A\A]A^A_
AVAUATUSH
D$(1
uUHcT$
t$(dH34%(
0[]A\A]A^
AUATM
]A\A]
ATUSH
[]A\
D$X1
L$ 1
HcB8H
D$ HcB<
|$XdH3<%(
L$ E1
AWAVI
AUATM
D$H1
t"E1
G* u@H
T$HdH3
X[]A\A]A^A_
l$ H
L$0H
D$(H
D$8H
AWAVAUATUSH
|$ L
d$ E1
[]A\A]A^A_
t$ H
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSHc
t)fE
[]A\A]A^A_
AVAU
ATUS
|LIc
uBHc
]A\A]A^
AUATUSE
[]A\A]A^
[]A\A]A^
ATUH
[]A\
/[]A\
[]A\
AWAVAUATUSH
8@8:
[]A\A]A^A_
T$BA
L$@J
t$ H
t$p1
D$xH
f;C@
*\$0f
\$@z
D+d$(
C@f%
D$8E
D$XH
t$8H
t$\H
D$PH
t$(D
L$4H
C@f%
|$hA
t$8B
T$01
E@f%
S0I9
\T$@
YD$H
L$`H
D$pH
AUATI
[]A\A]
AVAUATUI
I9\$
I9\$
]A\A]A^
AUATE1
D$X1
t@0H
L$XdH3
h[]A\A]
ATUI
D$X1
D$XdH3
`[]A\
AWAVAUATUSH
$H9F
[]A\A]A^A_
UUUUUUUUI
33333333I
AWAVI
AUATI
D$x1
T$(A
T$(H
|$0H
T$PHcl$
\$@H
D$H%
\$8H
L$`L
|$`I
t$(H
L$xdH3
[]A\A]A^A_
ATUH
 []A\
AWAVAUATA
|$@dH
|$pH
|$@H
t$ H
|$pA
L$(H
L$ H
[]A\A]A^A_
AWAVI
AUATI
|$ L
D$H1
T$@H
D$8%
d$(L
|$0L
D$HdH3
X[]A\A]A^A_
AUATI
D$(1
L$ H
D$(dH3
8[]A\A]
t$ H
AWAVAUATI
D$H1
T$0E1
D$0H
D$8H
D$HdH3
X[]A\A]A^A_
T$0H
|$0L
|$0L
ATUI
4$u>
[]A\
AWAVM
AUATI
|$@H
L$HL
L$0H
|$8H
t$(H
L$~H
H9L$0
t$ H9t$8H
t$ H
|$ H9|$
|$XI
t$PE1
t$(L
L9L$
L;L$
t$PL
|$XH
H9|$0
L$(H9L$8
L$(H
t$(H9t$
\$PI
\$XH
\$ L
L;L$
\$PL
|$`I9}
L$ H9L$
\$XI
\$PH
H9L$
H;t$P
H;|$X
J9t	
|$hH
t$pH
L9d$
\$PL
t$(H9t$
L$`I
t$PE1
H9L$
H;t$P
D$XM)
D$XI
L;D$X
L9d$
t$`I;u
H9L$0
t$ H9t$8
D$HM9
[]A\A]A^A_
D$@L9
t$PL
|$XA
AUPM
L$hH
|$`L
x9AUARM
L$hH
|$`H
\$PL
\$XA
|$hH
t$pI
l$hL
d$pA
l$hL
d$pE1
D$ H9D$
H9D$
T$(H9T$
H9T$
AWAVAUATUSH
D$h1
T$ L
L$@H
D$(H
D$8H
D$0H
D$HH
D$XH
D$PH
PATAWH
|$@H
L$hdH3
x[]A\A]A^A_
AWAVAUATE1
D$ L;d$ 
D$ I
t-f.
H9l$ ~
H9D$(
L;d$ 
[]A\A]A^A_
AWAVE1
AUATUSH
x6f.
[]A\A]A^A_
$t8L
[]A\A]A^A_
AWAVAUATI
D$ H
t$ H
|$ L
[]A\A]A^A_
L;{ |
FdI)
AWAVI
AUATI
|$4dH
L$h1
t$XH
L$0H
D$HH
\$(1
L9t$
L$`L
D$8H
T$@M
L$0H
t$`H
H#D$(H
T$ H
L9t$
|$0H
L$ L
D$`I
T$XH
L$`I
T$PL
|$8I
T$@I
\$hdH3
x[]A\A]A^A_
|$PH
D$PI
AWAVI
AUATA
D$ H
D$8Hc
t$(I
D$pH
D$ I
D$ H
[]A\A]A^A_
MXH9
L$pL
t	H9
L$pK
E`I9
}xI9
D$81
L$8dH3
AVAUATUSH
]A\A]A^H
[]A\A]A^
]A\A]A^
tKUSH
AWAVI
AUATI
L9l$
 uQHc
~0L9l$
L9d$
8[]A\A]A^A_
Hc\$
H9\$
|$(L
D$ H
8[]A\A]A^A_
8[]A\A]A^A_
Hc\$
L9d$
L9d$
8[]A\A]A^A_
&uBH9D$
[]A\A]A^A_
AUATUSH
([]A\A]
u{E1
([]A\A]
D$(1
gfffffff
|$(dH3<%(
AWAVI
AUATM
D$ @@ -
4$Hc
[]A\A]A^A_
4$Hc
AVAULc
ATUH
L$ H)
[]A\A]A^
AUATI
t:L9
[]A\A]
AUATI
[]A\A]
AWAVI
AUATM
D$81
L$(H
L;l$
M;l$8
D$ L
H9l$
l$ H;k8}>H
T$(H
T$8dH3
H[]A\A]A^A_
D$7H
AWAVAUATI
|$PH
D$XH
D$ I
|$HL
D$HH
L$8M
l$(M
xZL9
l$(L
L$`H
D$0L
ZYxUH
D$HL
D$HH
dH3<%(
[]A\A]A^A_
l$(M
L$PL
L$0H
T$(L
D$HH
@ L9
D$HH
H9D$
L$8L
L$8L
D$(H
D$HI
ATUI
l$PH
{ L9
|@9s
l$XH
H+K0M
K H)
0[]A\
S(I9
L$(L
D$ H
D$ L
T$XH
[]A\
L$(L
D$ H
D$ L
L$(t1
t$XH
AWAVAUATUSH
|$Xu
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
t$HH
L$@L
D$PD
D$\H
_AXA
G RAVD
v`Pj
D$HH
D$,H
D$@H
D$(H
D$PH
D$XM
\$,AXAYD
T$,E
T$ Hc
p`Ic
T$0A
t$,AYAZD
\$(E
[]A\A]A^A_
D$lI
D$<j
T$(D
\$X1
T$ Hc
t$XHc
t$PI
D$\E
D$,H
L$<A\D
\$(Ic
t$@I
t$,Hc
t$HI
AWAVI
AUATI
t$PH
t$XH
l$PH
d$XM
t$4A
D$ I
t$0H
D$(A
D$ A
PARHc
AZA[
PLcM LcE
dH34%(
[]A\A]A^A_
IcD$ D
PIcD$
A_ZtHH
D\$`
PLcM LcE
AXAYt
D$ I9
IcD$
l$8H
\$@M
l$8L
\$@H
IcD$ D
D\$`
IcL$
PIcD$
\$8H
|$pI
L$pH
D$xH
t$hH
l$hM
G(uR
\$hH
\$8H
|$<AWj
l$HL
t$@D
L$PL
D$8H
AWPL
L$PL
D$8H
D$@I
l$8M
\$@L
\$8L
t$HI
\$@I
t$8)
uJL9
D$8H
\$@L
t$HA
D$<Pj
L$PL
D$8H
L$HH
t$@H
t$<VPSD
L$PL
D$8H
L$HH
t$@H
\$8H
AWAVA
AUATI
IcL$
A;\$
H90u
D$8M
D$@I
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
G`Hc
AWAVAUATI
dH3<%(
[]A\A]A^A_
\$8H
l$HH
Hc|$
D$ E1
P Ic
t$PH
|$HD
t$PH
|$`1
ATSA)
L$XH
T$`H
t$PH
D$PD
t$`H
|$HA
AUATI
[]A\A]
AWAVAUATUSH
|$`H
t$PdH
L$HD
dH3<%(
[]A\A]A^A_
HcT$
t$PH
u8HcT$
|$HH
D$PD
D$`H
HcD$4H
\$XH
D$(H
D$(H
|$XD
\$4E
D$(D
D9|$
s};\$
D9|$
D9l$ 
|$49|$
|$@E
l$<H
\$0E
l$ A
tDD;t$
D9t$
l$4E
|$l9
|$HHcD$
|$LHcD$
t$pD
L$LD
t$P)
t$PD
\$0E
AWAVA
AUATL
[]A\A]A^A_
--exec-path
--git-dir=
--namespace=
--work-tree=
--help
--version
share/doc/git/html
--man-path
share/man
--info-path
share/info
--paginate
--no-pager
--no-replace-objects
GIT_NO_REPLACE_OBJECTS
--git-dir
GIT_DIR
GIT_NAMESPACE
GIT_WORK_TREE
GIT_IMPLICIT_WORK_TREE
--literal-pathspecs
GIT_LITERAL_PATHSPECS
--no-literal-pathspecs
--glob-pathspecs
GIT_GLOB_PATHSPECS
--noglob-pathspecs
GIT_NOGLOB_PATHSPECS
--icase-pathspecs
GIT_ICASE_PATHSPECS
--shallow-file
No directory given for -C.
Cannot change to '%s'
Unknown option: %s
--html-path
--namespace
--work-tree
--bare
GIT_PAGER
could not move to %s
trace: built-in: git
git.c
git-help
git-
usage: %s
git-%s
trace: exec:
Bad alias.%s string: %s
empty alias for %s
recursive alias: %s
trace: alias expansion: %s =>
size_t overflow: %lu * %lu
cannot handle %s as a builtin
annotate
bisect--helper
blame
cat-file
check-attr
check-ignore
check-mailmap
check-ref-format
checkout-index
clone
commit-tree
count-objects
credential
describe
diff-files
diff-index
diff-tree
fetch-pack
fmt-merge-msg
for-each-ref
format-patch
fsck-objects
get-tar-commit-id
hash-object
index-pack
init-db
interpret-trailers
ls-files
ls-remote
ls-tree
mailsplit
merge-base
merge-file
merge-ours
merge-recursive
merge-recursive-ours
merge-recursive-theirs
merge-subtree
merge-tree
name-rev
pack-redundant
pack-refs
patch-id
pickaxe
prune-packed
read-tree
remote-ext
remote-fd
repack
replace
rerere
rev-list
rev-parse
revert
send-pack
shortlog
show
show-branch
show-ref
stage
stripspace
submodule--helper
symbolic-ref
unpack-file
unpack-objects
update-index
update-ref
update-server-info
upload-archive--writer
verify-commit
verify-pack
verify-tag
whatchanged
GIT_PREFIX
No directory given for --git-dir.
No namespace given for --namespace.
No directory given for --work-tree.
-c expects a configuration string
unknown write failure on standard output
close failed on standard output
While expanding alias '%s': '%s'
alias '%s' changes environment variables
You can use '!git' in the alias to do this.
Expansion of alias '%s' failed; '%s' is not a git command
Failed to run command '%s': %s
'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
add.ignoreerrors
add.ignore-errors
unexpected diff status %c
updating files failed
remove '%s'
add--interactive
--patch
ADD_EDIT.patch
--recount
--cached
Could not read the index
Could not write patch
editing patch failed
Could not stat '%s'
Empty patch. Aborted.
Could not apply '%s'
index file corrupt
builtin/add.c
adding files failed
dry run
be verbose
interactive picking
select hunks interactively
edit current diff and apply
update tracked files
intent-to-add
ignore-removal
Could not open '%s' for writing.
-A and -u are mutually incompatible
Option --ignore-missing can only be used together with --dry-run
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?
Unstaged changes after refreshing the index:
pathspec '%s' did not match any files
BUG:%s:%d: unsupported magic %x
Use -f if you really want to add them.
Unable to write new index file
allow adding otherwise ignored files
record only the fact that the path will be added later
add changes from all tracked and untracked files
ignore paths removed in the working tree (same as --no-all)
don't add, only refresh the index
just skip files which cannot be added because of errors
check if - even missing - files are ignored in dry run
git add [<options>] [--] <pathspec>...
The following paths are ignored by one of your .gitignore files:
BUG: strbuf_setlen() beyond buffer
cannot resume: %s does not exist.
unable to write new index file
When you have resolved this problem, run "%s --continue".
If you prefer to skip this patch, run "%s --skip" instead.
To restore the original branch and stop patching, run "%s --abort".
Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all: 
cannot be interactive without stdin connected to a terminal.
BUG: state file 'next' does not exist
BUG: state file 'last' does not exist
could not open '%s' for reading
git write-tree failed to write a tree
!is_null_sha1(state->orig_commit)
could not open '%s' for reading: %s
could not open '%s' for writing: %s
Repository lacks necessary blobs to fall back on 3-way merge.
Using index info to reconstruct a base tree...
Did you hand edit your patch?
It does not apply to blobs recorded in its index.
Falling back to patching base and 3-way merge...
Failed to merge in the changes.
Invalid value for --patch-format: %s
Dirty index: cannot apply patches (dirty: %s)
BUG: invalid value for state->keep
BUG: invalid value for state->scissors
Patch is empty. Was it split wrong?
'%s' was deleted by the applypatch-msg hook
No changes -- Patch already applied.
The copy of the patch that failed is found in: %s
Failed to copy notes from '%s' to '%s'
git am [<options>] [(<mbox>|<Maildir>)...]
git am [<options>] (--continue | --skip | --abort)
allow fall back on 3way merging if needed
add a Signed-off-by line to the commit message
pass --keep-cr flag to git-mailsplit for mbox format
do not pass --keep-cr flag to git-mailsplit independent of am.keepcr
strip everything before a scissors line
override error message when patch failure occurs
continue applying patches after resolving a conflict
restore the original branch and abort the patching operation.
use current timestamp for author date
update the index with reused conflict resolution if possible
The -b/--binary option has been a no-op for long time, and
it will be removed. Please do not use it anymore.
previous rebase directory %s still exists but mbox given.
Stray %s directory found.
Use "git am --abort" to remove it.
Resolve operation not in progress, we are not resuming.
# This series applies on GIT commit
failed to create directory '%s'
Only one StGIT patch series can be applied at once
No changes - did you forget to use 'git add'?
If there is nothing left to stage, chances are that something else
already introduced the same changes; you might want to skip this patch.
You still have unmerged paths in your index.
Did you forget to use 'git add'?
You seem to have moved HEAD since the last 'am' failure.
Not rewinding to ORIG_HEAD
Patch format detection failed.
GIT_COMMITTER_EMAIL
GIT_COMMITTER_NAME
%s%s
author-script
final-commit
original-commit
abort-safety
GIT_INDEX_FILE=%s
--index
could not stat %s
git am -i
git am
builtin/am.c
Commit Body is:
--------------------------
could not read '%s'
!state->msg
last
!state->author_name
!state->author_email
!state->author_date
GIT_AUTHOR_NAME
GIT_AUTHOR_EMAIL
GIT_AUTHOR_DATE
could not parse %s
utf8
apply-opt
could not parse author script
Author:
Date
Subject: %s
From:%s
pre-applypatch
applying to an empty history
GIT_COMMITTER_DATE
failed to write commit object
GIT_REFLOG_ACTION
%s: %.*s
rewritten
post-applypatch
%s/%0*d
could not parse patch '%s'
# User 
# Date 
invalid timestamp
invalid timezone offset
invalid Date line
From: %s
--build-fake-ancestor=%s
--diff-filter=AM
could not write tree
GITHEAD_%s=%.*s
GIT_MERGE_VERBOSITY=0
could not build fake ancestor
stgit
stgit-series
Could not parse object '%s'.
Subject: 
Email: 
--auto
dirtyindex
unable to write index file
invalid ident line: %s
unable to parse commit %s
could not open input
could not open output 'info'
could not parse patch
Mail System Internal Data
GIT_AUTHOR_NAME=
GIT_AUTHOR_EMAIL=
GIT_AUTHOR_DATE=
could not write to %s
applypatch-msg
patch-merge-index
Patch failed at %s %.*s
advice.amworkdir
state->rebasing
Malformed input line: '%s'.
Notes added by 'git rebase'
Applying: %.*s
run interactively
historical option -- no-op
3way
be quiet
recode into utf8 (default)
pass -k flag to git-mailinfo
keep-non-patch
pass -b flag to git-mailinfo
pass -m flag to git-mailinfo
no-keep-cr
action
pass it through git-apply
ignore-whitespace
include
patch-format
format the patch(es) are in
reject
resolvemsg
synonyms for --continue
skip
skip the current patch
committer-date-is-author-date
lie about committer date
ignore-date
rerere-autoupdate
key-id
GPG-sign commits
(internal use for git-rebase)
rebase-apply
am.threeway
am.messageid
commit.gpgsign
failed to read the index
From: 
# HG changeset patch
From:
Date:
fseek failed
^[!-9;-~]+:
invalid pattern: %s
am.keepcr
-d%d
-o%s
--keep-cr
BUG: invalid patch_format
Failed to split patches.
failed to clean index
abort_safety
am --abort
BUG: invalid resume value
copy_notes_for_rebase
do_commit
Beeb
run_applypatch_msg_hook
do_interactive
parse_mail
get_commit_info
am_run
read_commit_msg
read_author_script
am_state_init
%s%.*s
 mode change %06o => %06o %s
 mode change %06o => %06o
 %s mode %06o %s
%s:%d: %s.
%.*s
builtin/apply.c
 => 
Subproject commit %s
closing file '%s'
%s~%u
Subproject commit 
Applied patch %s cleanly.
cannot open %s: %s
Hunk #%d applied cleanly.
Rejected hunk #%d.
nowarn
error-all
delta 
literal 
cannot checkout %s
1969-12-31
1970-01-01
read of %s failed
unable to read symlink %s
unable to open or read %s
invalid start of line: '%c'
size_t overflow: %lu + %lu
size_t underflow: %lu - %lu
while searching for:
%.*s
patch failed: %s:%ld
Checking patch %s...
patch->is_new <= 0
%s: does not exist in index
%s: does not match index
%s: wrong type
%s has type %o, expected %o
invalid path '%s'
*name_ != '\0'
%s: patch does not apply
%s: already exists in index
@@ -
Binary files 
rename
git apply: failed to read
unrecognized input
diff --git 
--- 
+++ 
recount: ignore empty hunk
diff 
corrupt patch at line %d
 differ
unable to read index file
U %s
 %-*s |  Bin
 %-*s |
%5d %.*s%.*s
-	-	
%d	%d	
 %s %.*s{%s => %s} (%d%%)
 %s %s => %s (%d%%)
 rewrite %s (%d%%)
no-add
allow-binary-replacement
unsafe-paths
build-fake-ancestor
apply the patch in reverse
unidiff-zero
allow-overlap
allow overlapping hunks
inaccurate-eof
apply.whitespace
apply.ignorewhitespace
false
never
--3way outside a repository
--index outside a repository
--cached outside a repository
<stdin>
can't open patch '%s'
squelched %d whitespace error
old mode 
new mode 
deleted file mode 
new file mode 
rename old 
rename new 
dissimilarity index 
Files 
postlen ? fixed_preimage.nr == preimage->nr : fixed_preimage.nr <= preimage->nr
BUG: caller miscounted postlen: asked %d, orig = %d, used = %d
unable to write file '%s' mode %o
unable to add cache entry for %s
corrupt patch for submodule %s
unable to stat newly created file '%s'
unable to create backing store for newly created file %s
Applying patch %%s with %d rejects...
Applying patch %%s with %d reject...
truncating .rej filename to %.*s.rej
diff a/%s b/%s	(rejected hunks)
unrecognized whitespace option '%s'
unable to remove %s from index
git apply: bad git-diff - expected /dev/null, got %s on line %d
git apply: bad git-diff - inconsistent new filename on line %d
git apply: bad git-diff - inconsistent old filename on line %d
git apply: bad git-diff - expected /dev/null on line %d
corrupt binary patch at line %d: %.*s
Cannot prepare timestamp regexp %s
regexec returned %d for input: %s
reading from '%s' beyond a symbolic link
path %s has been renamed/deleted
cannot apply binary patch to '%s' without full index line
the patch applies to '%s' (%s), which does not match the current contents.
the patch applies to an empty '%s' but it is not empty
the necessary postimage %s for '%s' cannot be read
missing binary patch data for '%s'
cannot reverse-apply a binary patch without the reverse hunk to '%s'
binary patch to '%s' creates incorrect result (expecting %s, got %s)
Hunk #%d succeeded at %d (offset %d lines).
Hunk #%d succeeded at %d (offset %d line).
Context reduced to (%ld/%ld) to apply fragment at %d
binary patch does not apply to '%s'
new mode (%o) of %s does not match old mode (%o)
new mode (%o) of %s does not match old mode (%o) of %s
repository lacks the necessary blob to fall back on 3-way merge.
Falling back to three-way merge...
cannot read the current contents of '%s'
Failed to fall back on three-way merge...
Applied patch to '%s' with conflicts.
Applied patch to '%s' cleanly.
removal patch leaves file contents
affected file '%s' is beyond a symbolic link
%s: already exists in working directory
patch fragment without header at line %d: %.*s
git diff header lacks filename information when removing %d leading pathname components (line %d)
git diff header lacks filename information when removing %d leading pathname component (line %d)
git diff header lacks filename information (line %d)
unable to find filename in patch at line %d
recount: unexpected line: %.*s
new file %s depends on old contents
deleted file %s still has contents
** warning: file %s becomes empty but is not deleted
unrecognized binary patch at line %d
sha1 information is lacking or useless for submodule %s
sha1 information is lacking or useless (%s).
make_cache_entry failed for path '%s'
Could not add %s to temporary index
Could not write temporary index to %s
patch with only garbage at line %d
mode change for %s, which is not in current HEAD
don't apply changes matching the given path
apply changes matching the given path
remove <num> leading slashes from traditional diff paths
ignore additions made by the patch
instead of applying the patch, output diffstat for the input
no-op (backward compatibility)
show number of added and deleted lines in decimal notation
instead of applying the patch, output a summary for the input
instead of applying the patch, see if the patch is applicable
make sure the patch is applicable to the current index
apply a patch without touching the working tree
accept a patch that touches outside the working area
also apply the patch (use with --stat/--summary/--check)
attempt three-way merge if a patch does not apply
build a temporary index based on embedded index information
paths are separated with NUL character
ensure at least <n> lines of context match
detect new or modified lines that have whitespace errors
ignore changes in whitespace when finding context
don't expect at least one line of context
leave the rejected hunks in corresponding *.rej files
tolerate incorrectly detected missing new-line at the end of file
do not trust the line counts in the hunk headers
prepend <root> to all filenames
unrecognized whitespace ignore option '%s'
--reject and --3way cannot be used together.
--cached and --3way cannot be used together.
squelched %d whitespace errors
%d lines add whitespace errors.
%d line adds whitespace errors.
%d line%s applied after fixing whitespace errors.
git apply [<options>] [<patch>...]
-Subproject commit 
update_pre_post_images
path_is_beyond_symlink
check_preimage
GIT binary patch
----------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
git-upload-archive
repo
exec
could not redirect output
argument --format=%s
argument %s
NACK 
git archive: NACK %s
ERR 
remote error: %s
git archive: protocol error
git archive: expected a flush
write the archive to this file
retrieve the archive from remote repository <repo>
path to the remote git-upload-archive command
could not create archive file '%s'
git archive: Remote with no URL
git archive: expected ACK/NAK, got EOF
next-all
perform 'git bisect next'
update BISECT_HEAD instead of checking out the current commit
git bisect--helper --next-all [--no-checkout]
(unknown)
filename 
blame.showroot
blame.blankboundary
blame.showemail
blame.date
Non commit %s?
unable to generate diff (%s)
author 
committer 
author %s
author-mail %s
author-time %lu
author-tz %s
committer %s
committer-mail %s
committer-time %lu
committer-tz %s
summary %s
previous %s 
%lu %s
standard input
--reverse
--children
4 years, 11 months ago
cannot stat path '%s'
No commit to dig down to?
no such ref: HEAD
no such commit %s
cannot open '%s' for reading
unknown line in '%s': %s
not.committed.yet
Not Committed Yet
no such path '%s' in HEAD
Cannot stat '%s'
Cannot lstat '%s'
cannot open or read '%s'
cannot readlink '%s'
unsupported file type %s
failed to read from stdin
revision walk setup failed
no such path %s in %s
file %s has only %lu lines
builtin/blame.c
commit == suspect->commit
%s %d %d %d
%s %d %d
	(%10s	%10s	%d)
 %*d %02d
 %-*.*s
 %*d
 (%s%*s %10s
 %*d) 
num read blob: %d
num get patch: %d
num commits: %d
show-stats
Show work cost statistics
score-debug
show-name
show-number
line-porcelain
show-email
Ignore whitespace differences
score
internal error in blame::origin_decref
internal error in blame::blame_chunk_cb
More than one commit to dig from %s and %s?
internal error in blame::find_origin
internal error in blame::find_origin (%c)
Cannot read blob %s for path %s
--contents and --reverse do not blend well.
More than one commit to dig down to %s and %s?
tree 0000000000000000000000000000000000000000
Cannot use --contents with final commit object name
--reverse and --first-parent together require specified latest commit
BUG: not unique item in first-parent chain
--reverse --first-parent together require range along first-parent chain
unable to generate diff (%s -> %s)
reading graft file '%s' failed
author %s
committer %s
Version of %s from %s
Show blame entries as we find them, incrementally
Show blank SHA-1 for boundary commits (Default: off)
Do not treat root commits as boundaries (Default: off)
Show output score for blame entries
Show original filename (Default: auto)
Show original linenumber (Default: off)
Show in a format designed for machine consumption
Show porcelain format with per-line commit information
Use the same output mode as git-annotate (Default: off)
Show raw timestamp (Default: off)
Show long commit SHA1 (Default: off)
Suppress author name and timestamp (Default: off)
Show author email instead of name (Default: off)
Spend extra cycles to find better match
Use revisions from <file> instead of calling git-rev-list
Use <file>'s contents as the final image
Find line copies within and across files
Find line movements within and across files
Process only line range n,m, counting from 1
use <n> digits to display SHA-1s
<rev-opts> are documented in git-rev-list(1)
assign_blame
color.branch.
column.
color.branch
plain
Invalid branch name: '%s'
Branch: renamed %s to %s
Branch rename failed
branch.%s
refs/heads/
refs/remotes/%s
refs/remotes/
Generic options
change upstream info
set-upstream-to
change the upstream info
unset-upstream
Unset the upstream info
when
use colored output
contains
with
Specific git-branch actions:
delete fully merged branch
list branch names
create-reflog
create the branch's reflog
edit-description
no-merged
list branches in columns
field name to sort on
points-at
branch name required
cannot use -a with -d
branch '%s' not found.
Error deleting branch '%s'
Deleted branch %s (was %s).
Update of config-file failed
%(refname)%(symref)
(no branch, rebasing %s)
(HEAD detached at %s)
(HEAD detached from %s)
%c %s%-*s%s
%c %s%s%s
 **** invalid ref ****
[%s: gone]
[%s]
[%s: behind %d]
[behind %d]
[%s: ahead %d]
[ahead %d]
[%s: ahead %d, behind %d]
[ahead %d, behind %d]
 %s %s%s
builtin/branch.c
branch.%s.description
no such branch '%s'
branch '%s' does not exist
branch.%s.remote
branch.%s.merge
    git branch -d %s
No commit on branch '%s' yet.
No branch named '%s'.
cannot rename the current branch while not on any.
Renamed a misnamed branch '%s' away
Branch renamed to %s, but HEAD is not updated!
Branch is renamed, but update of config-file failed
show hash and subject, give twice for upstream branch
suppress informational messages
set up tracking mode (see git-pull(1))
act on remote-tracking branches
print only branches that contain the commit
list both remote-tracking and local branches
delete branch (even if not merged)
move/rename a branch and its reflog
move/rename a branch, even if target exists
edit the description for the branch
force creation, move/rename, deletion
print only branches that are merged
print only branches that are not merged
print only branches of the object
Failed to resolve HEAD as a valid ref.
--column and --verbose are incompatible
Couldn't look up commit object for HEAD
Cannot delete the branch '%s' which you are currently on.
remote-tracking branch '%s' not found.
Couldn't look up commit object for '%s'
deleting branch '%s' that has been merged to
         '%s', but not yet merged to HEAD.
not deleting branch '%s' that is not yet merged to
         '%s', even though it is merged to HEAD.
The branch '%s' is not fully merged.
If you are sure you want to delete it, run 'git branch -D %s'.
Error deleting remote-tracking branch '%s'
Deleted remote-tracking branch %s (was %s).
(no branch, bisect started on %s)
!filter->verbose && "--column and --verbose are incompatible"
Cannot give description to detached HEAD
cannot edit description of more than one branch
Please edit the description for the branch
  %s
Lines starting with '%c' will be stripped.
could not write branch description template: %s
too many branches for a rename operation
too many branches to set new upstream
could not set upstream of HEAD to %s when it does not point to any branch.
too many branches to unset upstream
could not unset upstream of HEAD when it does not point to any branch.
Branch '%s' has no upstream information
it does not make sense to create 'HEAD' manually
-a and -r options to 'git branch' do not make sense with a branch name
The --set-upstream flag is deprecated and will be removed. Consider using --track or --set-upstream-to
If you wanted to make '%s' track '%s', do this:
    git branch --set-upstream-to %s
HEAD not found below refs/heads!
git branch [<options>] [-r | -a] [--merged | --no-merged]
git branch [<options>] [-l] [-f] <branch-name> [<start-point>]
git branch [<options>] [-r] (-d | -D) <branch-name>...
git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
git branch [<options>] [-r | -a] [--points-at]
format_and_print_ref_item
BRANCH_DESCRIPTION
%s is okay
list-heads
unbundle
Need a repository to create a bundle.
Need a repository to unbundle.
git bundle create <file> <git-rev-list args>
   or: git bundle verify <file>
   or: git bundle list-heads <file> [<refname>...]
   or: git bundle unbundle <file> [<refname>...]
unable to write to stdout
objectname
objecttype
objectsize
objectsize:disk
rest
deltabase
unknown format element: %.*s
%s missing
builtin/cat-file.c
data->info.typep
unable to stream %s to stdout
object %s disappeared
object %s changed type!?
object %s changed size!?
object 
show object type
show object size
pretty-print object's content
allow-unknown-type
buffer
buffer --batch output
batch-check
follow-symlinks
batch-all-objects
dangling %lu
loop %lu
notdir %lu
symlink %lu
Not a valid object name %s
Cannot read object %s
%s not a valid tag
git cat-file %s: bad file
format element '%s' does not end in ')'
%(objectname) %(objecttype) %(objectsize)
<type> can be one of: blob, tree, commit, tag
exit with zero when there's no error
for blob objects, run textconv on object's content
allow -s and -t to work with broken/corrupt objects
show info and content of objects fed from the standard input
show info about objects fed from the standard input
follow in-tree symlinks (used with --batch or --batch-check)
show all objects with --batch or --batch-check
BUG: unknown get_sha1_with_context result %d
git cat-file --allow-unknown-type: use with -s or -t
git cat-file: could not get object info
git cat-file --textconv %s: <object> must be <sha1:path>
git cat-file: unknown option: %s
git cat-file (-t [--allow-unknown-type]|-s [--allow-unknown-type]|-e|-p|<type>|--textconv) <object>
git cat-file (--batch | --batch-check) [--follow-symlinks]
print_object_or_die
unset
unspecified
%s%c%s%c%s%c
: %s: %s
git_check_attr died
git_all_attrs died
invalid cache
No attribute specified
No file specified
attribute to stdout
line is badly quoted
read file names from stdin
Attributes and --all both specified
Can't specify files with --stdin
%s: not a valid attribute name
report all attributes set on file
use .gitattributes only from the index
terminate input and output records by a NUL character
git check-attr [-a | --all | <attr>...] [--] <pathname>...
git check-attr --stdin [-z] [-a | --all | <attr>...]
no pathspec given.
:%d:%s%s%s	
%s%c%d%c%s%s%s%c%s%c
%c%c%c%s%c
no path specified
check-ignore to stdout
suppress progress reporting
non-matching
show non-matching input paths
ignore index when checking
cannot specify pathnames with --stdin
-z only makes sense with --stdin
--quiet is only valid with a single pathname
cannot have both --quiet and --verbose
--non-matching is only valid with --verbose
git check-ignore [<options>] <pathname>...
git check-ignore [<options>] --stdin
unable to parse contact: %s
%.*s 
no contacts specified
also read contacts from stdin
git check-mailmap [<options>] <contact>...
--branch
--normalize
--print
--allow-onelevel
--no-allow-onelevel
--refspec-pattern
'%s' is not a valid branch name
git check-ref-format [--normalize] [<options>] <refname>
   or: git check-ref-format --branch <branchname-shorthand>
stage should be between 1 and 3 or all
check out all files in the index
force overwrite of existing files
no warning for existing files and files not in index
update stat information in the index file
read list of paths from the standard input
write the content to temporary files
when creating files, prepend <string>
copy out the files from named stage
git checkout-index: don't mix '--all' and explicit filenames
git checkout-index: don't mix '--stdin' and explicit filenames
git checkout-index: don't mix '--all' and '--stdin'
git checkout-index [<options>] [--] [<file>...]
git checkout-index: %s 
is not in the cache
does not exist at stage %d
no-create
don't checkout new files
temp
post-checkout
%s %s... %s
diff.ignoresubmodules
submodule.
@{-1}
(invalid)
create reflog for new branch
new-branch
new unparented branch
overwrite-ignore
ignore-skip-worktree-bits
guess
ignore-other-worktrees
force progress reporting
merge.conflictstyle
--track needs a branch name
Missing branch name; try -b
invalid reference: %s
reference is not a tree: %s
invalid path specification
--track
--detach
'%s' cannot be used with %s
--merge
--patch=checkout
corrupt index file
path '%s' is unmerged
path '%s': cannot merge
--ours/--theirs
'%s' cannot be used with '%s'
-b/-B/--orphan
checkout -b
 ... and %d more.
Previous HEAD position was
HEAD is now at
Reset branch '%s'
Already on '%s'
Switched to branch '%s'
create and checkout a new branch
create/reset and checkout a branch
detach the HEAD at named commit
set upstream info for new branch
checkout our version for unmerged files
checkout their version for unmerged files
force checkout (throw away local modifications)
perform a 3-way merge with the new branch
update ignored files (default)
conflict style (merge or diff3)
do not limit pathspecs to sparse entries only
second guess 'git checkout <no-such-branch>'
do not check if another worktree is holding the given ref
-b, -B and --orphan are mutually exclusive
only one reference expected, %d given.
Cannot update paths and switch to branch '%s' at the same time.
Did you intend to checkout '%s' which can not be resolved as commit?
git checkout: --detach does not take a path argument '%s'
git checkout: --ours/--theirs, --force and --merge are incompatible when
checking out of the index.
'%s' cannot be used with updating paths
Cannot update paths and switch to branch '%s' at the same time.
path '%s' does not have our version
path '%s' does not have their version
path '%s' does not have all necessary versions
path '%s' does not have necessary versions
Unable to add merge result for '%s'
'%s' cannot be used with switching branches
Cannot switch branch to a non-commit '%s'
You are on a branch yet to be born
Switched to a new branch '%s'
you need to resolve your current index first
internal error in revision walk
Warning: you are leaving %d commits behind, not connected to
any of your branches:
Warning: you are leaving %d commit behind, not connected to
any of your branches:
If you want to keep them by creating a new branch, this may be a good time
to do so with:
 git branch <new-branch-name> %s
If you want to keep it by creating a new branch, this may be a good time
to do so with:
 git branch <new-branch-name> %s
Can not do reflog for '%s': %s
checkout: moving from %s to %s
Switched to and reset branch '%s'
git checkout [<options>] <branch>
git checkout [<options>] [<branch>] -- <file>...
color.interactive.
color.interactive
prompt
clean.requireforce
Bye.
Input ignore patterns>> 
manual exclude
Remove %s [y/N]? 
%s%2d: 
%s%2d: %s
%s%s%s%s
Huh (%s)?
Select items to delete
Would skip repository %s
Skipping repository %s
failed to remove %s
Would remove %s
Removing %s
interactive cleaning
remove whole directories
add <pattern> to ignore rules
remove ignored files, too
remove only ignored files
--exclude option
*** Commands ***
What now
filter by pattern
select by numbers
ask each
clean               - start cleaning
filter by pattern   - exclude items from deletion
select by numbers   - select items to be deleted by numbers
ask each            - confirm each deletion (like "rm -i")
quit                - stop cleaning
help                - this screen
?                   - help for prompt selection
WARNING: Cannot find items matched by: %s
Bad type of menu_stuff when print menu
Prompt help:
1          - select a numbered item
foo        - select item based on unique prefix
           - (empty) select nothing
Prompt help:
1          - select a single item
3-5        - select a range of items
2-3,6-9    - select multiple ranges
foo        - select item based on unique prefix
-...       - unselect specified items
*          - choose all items
           - (empty) finish selecting
Bad type of menu_stuff when parse choice
do not print names of files removed
-x and -X cannot be used together
clean.requireForce set to true and neither -i, -n, nor -f given; refusing to clean
clean.requireForce defaults to true and neither -i, -n, nor -f given; refusing to clean
Would remove the following items:
Would remove the following item:
No more files to clean, exiting.
git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>...
refs/tags/
gitdir: 
%s/.git
%s/objects
%s/shallow
%s/info/grafts
%s/.git/objects
failed to open '%s'
failed to stat '%s'
failed to stat %s
failed to unlink '%s'
failed to create link '%s'
failed to copy file to '%s'
%s/objects/%s
.bundle
Too many arguments.
%.*s.git
clone: from %s
Cloning into '%s'...
core.bare
+%s*:%s*
remote.%s.url
--local is ignored
Don't know how to clone %s
refs/heads/master
+%s:%s
+%s:%s%s
remote.%s.fetch
remote.%s.mirror
done.
Checking connectivity... 
objects/info/alternates
cannot repack to clean up
.git/.git
--init
--recursive
be more verbose
be more quiet
don't create a checkout
create a bare repository
naked
no-hardlinks
setup as shared repository
template-directory
reference repository
dissociate
single-branch
key=value
git-upload-pack
reference repository '%s' as a linked checkout is not supported yet.
reference repository '%s' is not a local repository.
reference repository '%s' is shallow
reference repository '%s' is grafted
%s exists and is not a directory
You must specify a repository to clone.
--bare and --origin %s options are incompatible.
--bare and --separate-git-dir are incompatible.
repository '%s' does not exist
depth %s is not a positive number
No directory name could be guessed.
Please specify a directory on the command line
destination path '%s' already exists and is not an empty directory.
working tree '%s' already exists.
could not create leading directories of '%s'
could not create work tree dir '%s'
Cloning into bare repository '%s'...
unable to write parameters to config file
--depth is ignored in local clones; use file:// instead.
source repository is shallow, ignoring --local
Could not find remote branch %s to clone.
Remote branch %s not found in upstream %s
You appear to have cloned an empty repository.
remote did not send all necessary objects
cannot unlink temporary alternates file
remote HEAD refers to nonexistent ref, unable to checkout.
unable to checkout working tree
BUG: remote HEAD points at non-head?
create a mirror repository (implies bare)
to clone from a local repository
don't use local hardlinks, always copy
initialize submodules in the clone
directory from which templates will be used
use --reference only while cloning
use <name> instead of 'origin' to track upstream
checkout <branch> instead of the remote's HEAD
path to git-upload-pack on the remote
create a shallow clone of that depth
clone only one branch, HEAD or --branch
separate git dir from working tree
set config inside the new repository
git clone [<options>] [--] <repo> [<dir>]
Clone succeeded, but checkout failed.
You can inspect what was checked out with 'git status'
and retry the checkout with 'git checkout -f HEAD'
lookup config vars
layout to use
raw-mode
Maximum width
Padding space on left border
Padding space on right border
padding
Padding space between columns
--command=
git column [<options>]
--command must be the first argument
duplicate parent %s ignored
--no-gpg-sign
git commit-tree: failed to open '%s'
git commit-tree: failed to read '%s'
git commit-tree: failed to close '%s'
Cannot give more than one trees
git commit-tree: failed to read
git commit-tree [(-p <sha1>)...] [-S[<keyid>]] [-m <message>] [-F <file>] <sha1>
sequencer
status.color.
color.status.
status.submodulesummary
status.short
status.branch
status.color
color.status
status.displaycommentprefix
updated
added
untracked
nobranch
status.showuntrackedfiles
normal
status.relativepaths
commit.template
commit.status
commit.cleanup
could not lookup commit %s
HEAD^1
GIT_INDEX_FILE
interactive add failed
cannot read the index
next-index-%lu
GIT_EDITOR=:
squash
CHERRY_PICK_HEAD
MERGE_HEAD
malformed --author parameter
invalid date format: %s
pre-commit
squash! 
squash! %s
could not read log file '%s'
fixup! %s
could not read MERGE_MSG
could not read SQUASH_MSG
could not open '%s'
%sAuthor:    %.*s <%.*s>
%sDate:      %s
%sCommitter: %.*s <%.*s>
Cannot read index
Error building trees
prepare-commit-msg
commit (amend)
commit (merge)
commit (cherry-pick)
commit (initial)
could not parse HEAD commit
--author=%s
--all
%aN <%aE>
You have nothing to amend.
Invalid cleanup mode %s
Corrupt MERGE_HEAD file (%s)
could not read MERGE_MODE
gpgsig
post-commit
format:%h] %s
%an <%ae>
%cn <%ce>
 Author: 
 Committer: 
~/.gitconfig
detached HEAD
 (root-commit)
[%s%s 
 Date: 
Commit message options
read message from file
override author for commit
override date for commit
reedit-message
reuse-message
fixup
reset-author
add Signed-off-by:
use specified template file
force edit of commit
GPG sign commit
Commit contents options
commit all changed files
interactively add files
interactively add changes
commit only specified files
no-verify
bypass pre-commit hook
show what would be committed
show status concisely
show branch information
machine-readable output
terminate entries with NUL
amend previous commit
no-post-rewrite
bypass post-rewrite hook
untracked-files
ok to record an empty change
show ignored files
Invalid untracked files mode '%s'
--long and -z are incompatible
failed to unpack HEAD tree object
BUG: unable to parse our own ident: %s
BUG: finalize_deferred_config() should have been called
unable to create temporary index
unable to update temporary index
Failed to update main cache tree
unable to write new_index file
cannot do a partial commit during a merge.
cannot do a partial commit during a cherry-pick.
unable to write temporary index file
commit '%s' lacks author header
commit '%s' has malformed author line
(reading log message from standard input)
could not read log from standard input
could not write commit template
unable to select a comment character that is not used
in the current commit message
It looks like you may be committing a merge.
If this is not correct, please remove the file
and try again.
It looks like you may be committing a cherry-pick.
If this is not correct, please remove the file
and try again.
Please enter the commit message for your changes. Lines starting
with '%c' will be ignored, and an empty message aborts the commit.
Please enter the commit message for your changes. Lines starting
with '%c' will be kept; you may remove them yourself if you want to.
An empty message aborts the commit.
Please supply the message using either -m or -F option.
--author '%s' is not 'Name <email>' and matches no existing author
Using both --reset-author and --author does not make sense
You are in the middle of a merge -- cannot amend.
You are in the middle of a cherry-pick -- cannot amend.
Options --squash and --fixup cannot be used together
Only one of -c/-C/-F/--fixup can be used.
Option -m cannot be combined with -c/-C/-F/--fixup.
--reset-author can be used only with -C, -c or --amend.
Only one of --include/--only/--all/--interactive/--patch can be used.
No paths with --include/--only does not make sense.
Clever... amending the last one with dirty index.
Explicit paths specified without -i or -o; assuming --only paths...
Paths with -a does not make sense.
could not read commit message: %s
Aborting commit; you did not edit the message.
Aborting commit due to empty commit message.
Repository has been updated, but unable to write
new_index file. Check that disk is not full and quota is
not exceeded, and then "git reset HEAD" to recover.
Notes added by 'git commit --amend'
couldn't look up newly created commit
could not parse newly created commit
suppress summary after successful commit
show diff in commit message template
reuse and edit message from specified commit
reuse message from specified commit
use autosquash formatted message to fixup specified commit
use autosquash formatted message to squash specified commit
the commit is authored by me now (used with -C/-c/--amend)
how to strip spaces and #comments from message
include status in commit message template
add specified files to index for commit
show status in long format (default)
show untracked files, optional modes: all, normal, no. (Default: all)
ok to record a change with an empty message
ignore changes to submodules, optional when: all, dirty, untracked. (Default: all)
list untracked files in columns
git status [<options>] [--] <pathspec>...
git commit [<options>] [--] <pathspec>...
COMMIT_EDITMSG
If you wish to skip this commit, use:
    git reset
Then "git cherry-pick --continue" will resume cherry-picking
the remaining commits.
Otherwise, please use 'git reset'
The previous cherry-pick is now empty, possibly due to conflict resolution.
If you wish to commit it anyway, use:
    git commit --allow-empty
You asked to amend the most recent commit, but doing so would make
it empty. You can repeat your command with --allow-empty, or you can
remove the commit entirely with "git reset HEAD^".
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:
    git config --global user.name "Your Name"
    git config --global user.email you@example.com
After doing this, you may fix the identity used for this commit with:
    git commit --amend --reset-author
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:
    git config --global --edit
After doing this, you may fix the identity used for this commit with:
    git commit --amend --reset-author
not in a git directory
BUG: cannot normalize type %d
invalid key pattern: %s
wrong number of arguments
diff.color
color.ui
GIT_CONFIG
$HOME not set
only one type at a time.
only one action at a time.
No such section!
color.diff
Config file location
global
use global config file
system
use system config file
use repository config file
use given config file
blob-id
Action
get value: name [value-regex]
get-all
get-regexp
get-urlmatch
replace-all
unset-all
rename-section
remove-section
remove a section: name
list all
open an editor
get-color
get-colorbool
value is "true" or "false"
value is decimal number
bool-or-int
value is --bool or --int
Other
show variable names only
includes
git config [<options>]
writing to stdin is not supported
writing config blobs is not supported
only one config file at a time.
--get-color and variable type are incoherent
--name-only is only applicable to --list or --get-regexp
unable to read config file '%s'
error processing config file(s)
editing stdin is not supported
editing blobs is not supported
# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
#	name = %s
#	email = %s
cannot create configuration file %s
cannot overwrite multiple values with a single value
       Use a regexp, --add or --replace-all to change %s.
unable to parse default color value
read config from given blob object
get all values: key [value-regex]
get values for regexp: name-regex [value-regex]
get value specific for the URL: section[.var] URL
replace all matching variables: name value [value_regex]
add a new variable: name value
remove a variable: name [value-regex]
remove all matches: name [value-regex]
rename section: old-name new-name
find the color configured: slot [default]
find the color setting: slot [stdout-is-tty]
value is a path (file or directory name)
terminate values with NUL byte
respect include directives on lookup
human-readable
count: %lu
size: %s
in-pack: %lu
packs: %lu
size-pack: %s
prune-packable: %lu
garbage: %lu
size-garbage: %s
%lu kilobytes
%lu objects, %s
no corresponding .idx
no corresponding .pack
garbage found
print sizes in human readable format
no corresponding .idx or .pack
git count-objects [-v] [-H | --human-readable]
unable to read credential from stdin
fill
approve
git credential [fill|approve|reject]
-%d-g%s
tag '%s' is really '%s' here
%s is not a valid '%s' object
no tag exactly matches '%s'
searching to describe %s
finished search at %s
 %-11s %8d %s
traversed %lu commits
use any ref
use any tag, even unannotated
always use long format
only follow first parent
exact-match
only output exact matches
candidates
-dirty
--no-undefined
--name-only
--peel-tag
--always
--tags
--refs=refs/tags/%s
lightweight
--quiet
annotated tag %s not available
annotated tag %s has no embedded name
No annotated tags can describe '%s'.
However, there were unannotated tags: try --tags.
No tags can describe '%s'.
Try --always, or create some tags.
more than %i tags found; listed %i most recent
gave up search at %s
find the tag that comes after the commit
debug search strategy on stderr
consider <n> most recent tags (default: 10)
only consider tags matching <pattern>
show abbreviated commit object as fallback
append <mark> on dirty working tree (default: "-dirty")
--long is incompatible with --abbrev=0
No names found, cannot describe anything.
--dirty is incompatible with commit-ishes
git describe [<options>] [<commit-ish>...]
git describe [<options>] --dirty
--base
--ours
read_cache_preload
git diff-files [-q] [-0 | -1 | -2 | -3 | -c | --cc] [<common-diff-options>] [<path>...]
common diff options:
  -z            output diff-raw with lines terminated with NUL.
  -p            output patch format.
  -u            synonym for -p.
  --patch-with-raw
                output both a patch and the diff-raw format.
  --stat        show diffstat instead of patch.
  --numstat     show numeric diffstat instead of patch.
  --patch-with-stat
                output a patch and prepend its diffstat.
  --name-only   show only names of changed files.
  --name-status show names and status of changed files.
  --full-index  show full object name on index lines.
  --abbrev=<n>  abbreviate object names in diff-tree header and diff-raw.
  -R            swap input file pairs.
  -B            detect complete rewrites.
  -M            detect renames.
  -C            detect copies.
  --find-copies-harder
                try unchanged files as candidate for copy detection.
  -l<n>         limit rename attempts up to <n> paths.
  -O<file>      reorder diffs according to the <file>.
  -S<string>    find filepair whose only one side contains the string.
  --pickaxe-all
                show all files diff when -S is used and hit is found.
  -a  --text    treat all files as text.
read_cache
git diff-index [-m] [--cached] [<common-diff-options>] <tree-ish> [<path>...]
common diff options:
  -z            output diff-raw with lines terminated with NUL.
  -p            output patch format.
  -u            synonym for -p.
  --patch-with-raw
                output both a patch and the diff-raw format.
  --stat        show diffstat instead of patch.
  --numstat     show numeric diffstat instead of patch.
  --patch-with-stat
                output a patch and prepend its diffstat.
  --name-only   show only names of changed files.
  --name-status show names and status of changed files.
  --full-index  show full object name on index lines.
  --abbrev=<n>  abbreviate object names in diff-tree header and diff-raw.
  -R            swap input file pairs.
  -B            detect complete rewrites.
  -M            detect renames.
  -C            detect copies.
  --find-copies-harder
                try unchanged files as candidate for copy detection.
  -l<n>         limit rename attempts up to <n> paths.
  -O<file>      reorder diffs according to the <file>.
  -S<string>    find filepair whose only one side contains the string.
  --pickaxe-all
                show all files diff when -S is used and hit is found.
  -a  --text    treat all files as text.
--stdin
Need exactly two trees, separated by a space
Object %s is a %s, not a commit or tree
git diff-tree [--stdin] [-m] [-c] [--cc] [-s] [-v] [--pretty] [-t] [-r] [--root] [<common-diff-options>] <tree-ish> [<tree-ish>] [<path>...]
  -r            diff recursively
  --root        include the initial commit as diff against /dev/null
common diff options:
  -z            output diff-raw with lines terminated with NUL.
  -p            output patch format.
  -u            synonym for -p.
  --patch-with-raw
                output both a patch and the diff-raw format.
  --stat        show diffstat instead of patch.
  --numstat     show numeric diffstat instead of patch.
  --patch-with-stat
                output a patch and prepend its diffstat.
  --name-only   show only names of changed files.
  --name-status show names and status of changed files.
  --full-index  show full object name on index lines.
  --abbrev=<n>  abbreviate object names in diff-tree header and diff-raw.
  -R            swap input file pairs.
  -B            detect complete rewrites.
  -M            detect renames.
  -C            detect copies.
  --find-copies-harder
                try unchanged files as candidate for copy detection.
  -l<n>         limit rename attempts up to <n> paths.
  -O<file>      reorder diffs according to the <file>.
  -S<string>    find filepair whose only one side contains the string.
  --pickaxe-all
                show all files diff when -S is used and hit is found.
  -a  --text    treat all files as text.
[--no-index]
--no-index
Not a git repository
git diff %s <path> <path>
Not a git repository
--staged
invalid object '%s' given.
unhandled object '%s' given.
invalid option: %s
builtin/diff.c
To compare two paths outside a working tree:
more than two blobs given: '%s'
'%s': not a regular file or symlink
git diff [<options>] [<commit> [<commit>]] [--] [<path>...]
path%d
ref%d
User %d <user%d@example.com>
tag message %d
progress %d objects
drop
Unknown signed-tags mode: %s
anonymous blob %d
Could not read blob %s
sha1 mismatch in blob %s
blob
mark :%u
data %lu
Could not write blob '%s'
M %06o %s 
M %06o :%d 
encoding 
subject %d
body
UTF-8
reset %s
from :%d
merge :%d
deleteall
signed-tags
tag-of-filtered-object
export-marks
Dump marks to this file
import-marks
Import marks from this file
fake-missing-tagger
full-tree
no-data
Skip output of blob data
anonymize
anonymize output
feature done
cannot read '%s'
corrupt mark line: %s
object not found: %s
Object %s already has a mark
Could not read tag %s
tagger 
Exporting signed tag %s
Tag %s tags unexported %s!
reset %s
from :%d
reset %s
from %s
:%u %s
Tag %s points nowhere?
Unknown tag-of-filtered mode: %s
BUG: malformed line fed to anonymize_ident_line: %.*s
Malformed Ident <malformed@example.com> 0 -0000
Unexpected comparison status '%c' for %s, %s
Could not find author in commit %s
Could not find committer in commit %s
commit %s
mark :%u
%.*s
%.*s
data %u
tagger Unspecified Tagger <unspecified-tagger> 0 +0000
show progress after <n> objects
select handling of signed tags
select handling of tags that tag filtered objects
Fake a tagger when tags lack one
Output full tree for each commit
Use the done feature to terminate the stream
Apply refspec to exported refs
not a commit? can't happen: %s
Tag points to object of unexpected type %s, skipping.
Omitting tag %s,
since tags of trees (or tags of tags of trees, etc.) are not supported.
-----BEGIN PGP SIGNATURE-----
Encountered signed tag %s; use --signed-tags=<mode> to handle it.
Stripping signature from tag %s
Tag %s tags unexported object; use --tag-of-filtered-object=<mode> to handle it.
Can't find replacement commit for tag %s
tag %s
from :%d
%.*s%sdata %d
%.*s
Unable to open marks file %s for writing.
Unable to write marks file %s.
%s: Unexpected object of type %s, skipping.
git fast-export [rev-list-opts]
--upload-pack=
--exec=
--thin
--include-tag
--diag-url
--depth=
--no-progress
--stateless-rpc
--lock-pack
--cloning
--update-shallow
lock %s
connectivity-ok
no such remote ref %s
--keep
--check-self-contained-and-connected
git fetch-pack [--all] [--stdin] [--quiet | -q] [--keep | -k] [--thin] [--include-tag] [--upload-pack=<git-upload-pack>] [--depth=<n>] [--no-progress] [--diag-url] [-v] [<host>:]<directory> [<refs>...]
--prune
--no-prune
--dry-run
--update-head-ok
--force
--recurse-submodules
--no-tags
fetch.prune
remotes.
updateshallow
   (%s will become dangling)
   (%s has become dangling)
foreign
From %.*s
[deleted]
 x %-*s %-*s -> %s
cannot open %s: %s
--append
Fetching %s
Could not fetch %s
remote-tracking branch
not-for-merge
storing tag
storing head
storing ref
'%s' of 
%s	%s	%s
object %s not found
[up to date]
= %-*s %-*s -> %s
[rejected]
updating tag
[tag update]
%c %-*s %-*s -> %s%s
[new tag]
[new branch]
[new ref]
forced-update
unable to update local ref
forced update
%c %-*s %-*s -> %s  (%s)
(non-fast-forward)
! %-*s %-*s -> %s  %s
* %-*s %-*s -> FETCH_HEAD
refs/tags/%s:refs/tags/%s
Couldn't find remote ref HEAD
--recurse-submodules-default
fetch from all remotes
fetch from multiple remotes
on-demand
keep downloaded pack
allow updating of HEAD ref
unshallow
default mode for recursion
specify fetch refmap
git fetch [<options>] <group>
git fetch --all [<options>]
--recurse-submodules=on-demand
Option "%s" value "%s" is not valid for %s
Option "%s" is ignored for %s
%s did not send all necessary objects
reject %s because shallow roots are not allowed to be updated
! %-*s %-*s -> %s  (can't fetch in current branch)
  (unable to update local ref)
some local refs could not be updated; try running
 'git remote prune %s' to remove any old, conflicting branches
No remote repository specified.  Please, specify either a URL or a
remote name from which new revisions should be fetched.
You need to specify a tag name.
Don't know how to fetch from %s
--refmap option is only meaningful with command-line refspec(s).
Refusing to fetch into current branch %s of non-bare repository
--depth and --unshallow cannot be used together
--unshallow on a complete repository does not make sense
fetch --all does not take a repository argument
fetch --all does not make sense with refspecs
No such remote or remote group: %s
Fetching a group and specifying refspecs does not make sense
append to .git/FETCH_HEAD instead of overwriting
path to upload pack on remote end
force overwrite of local branch
fetch all tags and associated objects
do not fetch all tags (--no-tags)
prune remote-tracking branches no longer on remote
control recursive fetching of submodules
deepen history of shallow clone
convert to a complete repository
prepend this to submodule path output
accept refs that update .git/shallow
git fetch [<options>] [<repository> [<refspec>...]]
git fetch --multiple [<options>] [(<repository> | <group>)...]
merge.log
merge.summary
%s: negative length %s
merge.branchdesc
%c %s 
%s (%d) and %s (%d)
%s (%d) and others
remote-tracking branch 
No current branch
tag 
%s of %s
Merge 
remote-tracking branches 
tags 
commits 
 into %s
gpg verification failed.
^HEAD
* %s: (%d commits)
* %s:
  : %.*s
  ...
Error in line %d: %.*s
alias for --log (deprecated)
file to read from
cannot open '%s'
could not read input file
populate log with at most <n> entries from shortlog
use <text> as start of message
git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]
%(objectname) %(objecttype)	%(refname)
quote placeholders suitably for shells
quote placeholders suitably for perl
quote placeholders suitably for python
quote placeholders suitably for Tcl
print only refs which points at the given object
print only refs that are merged
print only refs that are not merged
print only refs which contain the commit
invalid --count argument: `%d'
git for-each-ref [<options>] [<pattern>]
git for-each-ref [--points-at <object>]
git for-each-ref [(--merged | --no-merged) [<object>]]
git for-each-ref [--contains [<object>]]
shell
perl
python
show only <n> matched refs
format to use for the output
more than one quoting style?
%s in %s %s: %s
unknown
broken link from %7s %s
wrong object type in link
              to %7s %s
Checking cache tree
non-tree in cache-tree
Checking %s %s
broken links
root %s
tagged %s %s
 (%s) in %s
%s: object corrupt or missing
%s: invalid reflog entry %s
Checking reflog %s->%s
tmp_obj_
bad sha1 file: %s
%s: invalid sha1 pointer %s
%s: not a commit
Checking object directory
Checking object directories
other
Checking HEAD link
Invalid HEAD
Checking objects
Checking connectivity
Checking %s
missing %s %s
unreachable %s %s
dangling %s %s
lost-found/%s/%s
Could not create lost-found
Could not open '%s'
Could not write '%s'
Could not finish '%s'
show unreachable objects
dangling
show dangling objects
report tags
report root nodes
make index objects head nodes
full
connectivity-only
check only connectivity
enable more strict checking
show progress
%s: invalid sha1 pointer in cache-tree
HEAD points to something strange (%s)
HEAD: detached HEAD points at nothing
notice: HEAD points to an unborn branch (%s)
invalid parameter: expected sha1, got '%s'
notice: No default references
Checking connectivity (%d objects)
make reflogs head nodes (default)
also consider packs and alternate objects
write dangling objects in .git/lost-found
git fsck [<options>] [<object>...]
--unpack-unreachable=%s
failed to run %s
%s/17
0123456789abcdef
Invalid %s: '%s'
prune unreferenced objects
enable auto-gc mode
--expire
gc.packrefs
notbare
gc.aggressivewindow
gc.aggressivedepth
gc.auto
gc.autopacklimit
gc.autodetach
gc.pruneexpire
gc.worktreepruneexpire
--depth=%d
--window=%d
pre-auto-gc
gc.log
gc.pid
%lu %127c
3.months.ago
2.weeks.ago
git gc [<options>]
insanely long object directory %.*s
be more thorough (increased runtime)
force running gc even if there may be another gc running
Auto packing the repository in background for optimum performance.
Auto packing the repository for optimum performance.
See "git help gc" for manual housekeeping.
The last gc run reported the following. Please correct the root cause
and remove %s.
Automatic cleanup will not be performed until the file is removed.
gc is already running on machine '%s' pid %lu (use --force if not)
There are too many unreachable loose objects; run 'git prune' to remove them.
52 comment=
git get-tar-commit-id: read error
git get-tar-commit-id: write error
git get-tar-commit-id
--not
--and
-e option
unable to read tree (%s)
exclude-standard
invert-match
show non-matching lines
case insensitive matching
word-regexp
process binary files as text
max-depth
line-number
show line numbers
don't show filenames
files-with-matches
files-without-match
print NUL after filenames
highlight matches
heading
before-context
after-context
shortcut for -C NUM
show-function
show the surrounding function
read patterns from file
match <pattern>
open-files-in-pager
dummy
ext-grep
no pattern given.
less
+/%s%s
switch `%c' expects a numerical value
search in index instead of in the work tree
find in contents not managed by git
search in both tracked and untracked files
ignore files specified via '.gitignore'
match patterns only at word boundaries
don't match patterns in binary files
process binary files with textconv filters
descend at most <depth> levels
use extended POSIX regular expressions
use basic POSIX regular expressions (default)
interpret patterns as fixed strings
use Perl-compatible regular expressions
show filenames relative to top directory
show only filenames instead of matching lines
synonym for --files-with-matches
show only the names of files without match
show the number of matches instead of matching lines
print empty line between matches from different files
show filename only once above matches from same file
show <n> context lines before and after matches
show <n> context lines before matches
show <n> context lines after matches
show a line with the function name before matches
combine patterns specified with -e
indicate hit with exit status without output
show only matches from files that match all patterns
show parse tree for grep expression
show matching files in the pager
allow calling of grep(1) (ignored by this build)
grep: failed to create thread: %s
--open-files-in-pager only works on the worktree
--cached or --untracked cannot be used with --no-index.
--no-index or --untracked cannot be used with revs.
--[no-]exclude-standard cannot be used for tracked contents.
both --cached and trees are given.
unable to grep from object of type %s
git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]
Unable to add %s to database
Unable to hash %s
hash to stdout
read the object from stdin
stdin-paths
no-filters
literally
Cannot open '%s'
Multiple --stdin arguments are not supported
Can't use --stdin-paths with --path
Can't use --stdin-paths with --stdin
Can't use --path with --no-filters
Can't specify files with --stdin-paths
write the object into the object database
store file as is without filters
just hash any random garbage to create corrupt objects for debugging Git
process file as it were from this path
git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] [--] <file>...
git hash-object  --stdin-paths
woman
unrecognized help format '%s'
git%s
emacsclient
failed to exec '%s': %s
Failed to start emacsclient.
(woman "%s")
DISPLAY
/konqueror
man:%s(1)
newTab
/bin/sh
'%s': unknown man viewer.
%.*s/kfmclient
help.format
help.htmlpath
man.viewer
man.
Defining attributes per path
usage: %s%s
   %s   
`git %s' is aliased to `%s'
GIT_MAN_VIEWER
MANPATH
INFOPATH
gitman
%s/git.html
%s/%s.html
help.browser
web--browse
The common Git guides are:
everyday
A Git glossary
Defining submodule properties
revisions
tutorial
workflows
print all available commands
print list of useful guides
show man page
show manual in web browser
show info page
Failed to parse emacsclient version.
emacsclient version '%d' too old (< 22).
'%s': path for unsupported man viewer.
Please consider using 'man.<tool>.cmd' instead.
'%s': cmd for supported man viewer.
Please consider using 'man.<tool>.path' instead.
no man viewer handled the request
no info viewer handled the request
'%s': not a documentation directory.
Everyday Git With 20 Commands Or So
Specifies intentionally untracked files to ignore
Specifying revisions and ranges for Git
A tutorial introduction to Git (for version 1.5.1 or newer)
An overview of recommended workflows with Git
git help [--all] [--guides] [--man | --web | --info] [<command>]
pack has bad object at offset %lu: %s
unable to deflate appended object (%d)
cannot close written keep file '%s'
invalid number of threads specified (%d)
used more bytes than were available
pack too large for current definition of off_t
!threads_active && "This should only be reached when all threads are gone"
premature end of pack file, %lu bytes missing
premature end of pack file, %lu byte missing
SHA1 COLLISION FOUND WITH %s !
cannot read existing object %s
data && "data can only be NULL for large _blobs_"
Not all child objects of %s are reachable
BUG: parse_object_buffer transmogrified our buffer
BUG: child->real_type != OBJ_REF_DELTA
child->real_type == OBJ_OFS_DELTA
--fix-thin cannot be used without --stdin
--verify with no packfile name given
Cannot open existing pack file '%s'
Cannot open existing pack idx file for '%s'
offset value overflow for delta base object
delta base offset is out of bound
pack is corrupted (SHA1 mismatch)
confusion beyond insanity in parse_pack_objects()
completed with %d local objects
Unexpected tail checksum for %s (disk corruption?)
did not receive expected object %s
object %s: expected type %s, found %s
chain length = %d: %lu objects
packfile name '%s' does not end with '.pack'
error while closing pack file
cannot write keep file '%s'
%s/pack/pack-%s.pack
cannot store pack file
%s/pack/pack-%s.idx
cannot store index file
%s	%s
pack.indexversion
bad pack.indexversion=%u
pack.threads
object type mismatch at %s
builtin/index-pack.c
cannot pread pack file
serious inflate inconsistency
data || obj_entry
invalid blob object %s
invalid %s
Error in object
failed to apply delta
cannot fill %d bytes
cannot fill %d byte
early EOF
read error on input
--strict=
Cannot come back to cwd
--fix-thin
--strict
--verify
--verify-stat
--verify-stat-only
--keep=
--threads=
--pack_header=
bad %s
--index-version=
pack/tmp_pack_XXXXXX
unable to create '%s'
cannot open packfile '%s'
pack signature mismatch
pack version %u unsupported
Receiving objects
Indexing objects
unknown object type %d
%s %lu
inflate returned %d
cannot fstat packfile
pack has junk at the end
Resolving deltas
GIT_FORCE_THREADS
unable to open %s
unable to create thread: %s
confusion beyond insanity
local object %s is corrupt
pack has %d unresolved deltas
pack has %d unresolved delta
%s %-6s %lu %lu %lu
 %u %s
non delta: %d objects
non delta: %d object
chain length = %d: %lu object
find_unresolved_deltas_1
get_thread_data
sha1_object
git index-pack [-v] [-o <index-file>] [--keep | --keep=<msg>] [--verify] [--strict] (<pack-file> | --stdin [--fix-thin] [<pack-file>])
init.templatedir
cannot stat '%s'
cannot stat template '%s'
cannot opendir '%s'
cannot symlink '%s' '%s'
cannot copy '%s' to '%s'
ignoring template %s
refs/heads
refs/tags
GIT_TEMPLATE_DIR
share/git-core/templates
templates not found %s
core.repositoryformatversion
core.filemode
core.logallrefupdates
core.worktree
tXXXXXX
testing
core.symlinks
CoNfIg
core.ignorecase
%s already exists
unable to handle file type %d
unable to move %s to %s
gitdir: %s
core.sharedrepository
receive.denyNonFastforwards
 shared
Reinitialized existing
Initialized empty
%s%s Git repository in %s%s
permissions
cannot mkdir %s
cannot chdir to %s
Cannot access work tree '%s'
not copying templates of a wrong format version %d from '%s'
BUG: invalid value for shared_repository
specify that the git repository is to be shared amongst several users
git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]
%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-dir=<directory>)
trim-empty
trim empty trailers
trailer
trailer(s) to add
git interpret-trailers [--trim-empty] [(--trailer <token>[(=|:)<value>])...] [<file>...]
deep
to: 
cc: 
color.decorate.
format.pretty
format.subjectprefix
log.abbrevcommit
log.date
log.decorate
log.showroot
log.follow
log.mailmap
Need exactly one range.
Not a range.
suppress diff output
show source
use-mailmap
Use mail map file
decorate options
n,m:file
unrecognized argument: %s
invalid --decorate option: %s
Two output directories?
format.headers
format.headers without value
format.suffix
format.to
format.cc
diff.submodule
format.numbered
format.attach
format.thread
format.signoff
format.signature
format.signaturefile
format.coverletter
%s.%lu.git.%s
Final output: %d %s
incomplete
Cannot open patch file %s
git show %s: bad file
%stag %s%s
Could not read object %s
builtin/log.c
type == OBJ_TAG
Tagger
%stree %s%s
Unknown type: %d
cover-letter
no-numbered
print patches to standard out
generate a cover letter
numbered-files
use <sfx> instead of '.patch'
start-number
reroll-count
subject-prefix
output-directory
keep-subject
don't strip/add [PATCH]
no-binary
don't output binary diffs
zero-commit
ignore-if-in-upstream
no-stat
Messaging
add-header
add email header
add To: header
add Cc: header
ident
in-reply-to
attach the patch
inline the patch
add a signature
signature-file
add a signature from a file
%s v%d
To: 
Cc: 
--check does not make sense
insane in-reply-to: %s
cover
Failed to create output files
--%s%s--
Unknown commit %s
%c %s %s
Process line range n,m in file, counting from 1
name of output directory is too long
use [PATCH n/m] even with a single patch
use [PATCH] even with multiple patches
use simple number sequence for output file names
start numbering patches at <n> instead of 1
mark the series as Nth re-roll
Use [<prefix>] instead of [PATCH]
store resulting files in <dir>
output all-zero hash in From header
don't include a patch matching a commit upstream
show patch format instead of default (patch + stat)
set From address to <ident> (or committer ident if absent)
make first mail a reply to <message-id>
enable message threading, styles: shallow, deep
don't print the patch filenames
-n and -k are mutually exclusive.
--subject-prefix and -k are mutually exclusive.
--name-only does not make sense
--name-status does not make sense
standard output, or directory, which one?
Could not create directory '%s'
unable to read signature file '%s'
Cover letter needs email format
*** SUBJECT HERE ***
*** BLURB HERE ***
Could not find a tracked remote branch, please specify <upstream> manually.
git cherry [-v] [<upstream> [<head> [<limit>]]]
git format-patch [<options>] [<since> | <revision-range>]
git log [<options>] [<revision-range>] [[--] <path>...]
git show [<options>] <object>...
show_tag_object
git ls-files: internal error - cache entry not superset of prefix
git ls-files: internal error - directory entry not superset of prefix
unable to read tree entries %s
identify the file status with tags
use lowercase letters for 'assume unchanged' files
show cached files in the output (default)
show deleted files in the output
show modified files in the output
show other files in the output
show ignored files in the output
show staged contents' object name in the output
show files on the filesystem that need to be removed
show 'other' directories' names only
show unmerged files in the output
exclude patterns are read from <file>
read additional per-directory exclude patterns in <file>
add the standard git exclusions
make the output relative to the project top directory
if any <file> is not in the index, treat this as an error
pretend that paths removed since <tree-ish> are still present
ls-files --ignored needs some exclude pattern
ls-files --with-tree is incompatible with -s or -u
git ls-files [<options>] [<file>...]
%s%06o %s %d	
  ctime: %d:%d
  mtime: %d:%d
  dev: %d	ino: %d
  uid: %d	gid: %d
  size: %d	flags: %x
tree-ish %s not found.
bad tree-ish %s
deleted
modified
killed
empty-directory
don't show empty directories
show resolve-undo information
skip files matching pattern
exclude-from
exclude-per-directory
error-unmatch
with-tree
tree-ish
show debugging data
bug in show-killed-files
Did you forget to 'git add'?
insanely long ref %.*s...
--refs
--get-url
--exit-code
*/%s
bad repository '%s'
From %s
--heads
No remote configured to list refs from.
remote %s has no configured URL
git ls-remote [--heads] [--tags]  [--upload-pack=<exec>]
                     [-q | --quiet] [--exit-code] [--get-url] [<repository> [<refs>...]]
%06o %s %s %7s	
%06o %s %s	
only show trees
recurse into subtrees
show trees when recursing
include object size
list only filenames
use full path names
not a tree object
terminate entries with NUL byte
list entire tree; not just current directory (implies --full-name)
git ls-tree [<options>] <tree-ish> [<path>...]
A Santa lives evil at NASA
--message-id
--encoding=
--scissors
--no-scissors
--no-inbody-headers
git mailinfo [-k | -b] [-m | --message-id] [-u | --encoding=<encoding> | -n] [--scissors | --no-scissors] <msg> <patch> < mail >info
corrupt mailbox
cannot open output file '%s'
cannot write output
cannot read mbox
cannot open mbox %s
cannot read mbox %s
unknown option: %s
cannot stat %s (%s)
cannot opendir %s (%s)
cannot open mail %s (%s)
cannot read mail %s (%s)
cannot split patches from %s
cannot split patches from stdin
git mailsplit [-d<prec>] [-f<n>] [-b] [--keep-cr] -o<directory> [(<mbox>|<Maildir>)...]
merge.diffstat
merge.stat
pull.twohead
pull.octopus
merge.renormalize
merge.ff
merge.defaulttoupstream
git-merge-
Available strategies are:
 (nothing to squash)
Could not write to '%s'
--reset
read-tree failed
 (early part)
could not close '%s'
not something we can merge
%s		branch '%s' of .
%s		tag '%s' of .
%s		branch '%s'%s of .
%s		%s '%s'
%s		commit '%s'
Could not read from '%s'
Empty commit message.
Writing SQUASH_MSG
Finishing SQUASH_MSG
post-merge
switch `m' requires a value
Unable to write index.
unable to write %s
branch.*.mergeoptions
No current branch.
initial pull
'%s' is not a commit
GITHEAD_%s
Already up-to-date.
Updating %s..%s
Fast-forward
In-index merge
could not run stash.
stash failed
not a valid object: %s
Trying merge strategy %s...
Nope.
Wonderful.
Already up-to-date. Yeeah!
updating ORIG_HEAD
(synonym to --stat)
allow fast-forward (default)
verify-signatures
merge strategy to use
option=value
git merge --abort
Could not find merge strategy '%s'.
Available custom strategies are:
Could not open '%s' for writing
Not committing merge; use 'git commit' to complete the merge.
not something we can merge in %s: %s
'%s' does not point to a commit
%s		remote-tracking branch '%s' of .
Squash commit -- not updating HEAD
Squashed commit of the following:
No merge message -- not updating HEAD
Not handling anything other than two heads merge.
Unknown option for merge-recursive: -X%s
Bad branch.%s.mergeoptions string: %s
There is no merge to abort (MERGE_HEAD missing).
You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before you merge.
You have not concluded your merge (MERGE_HEAD exists).
You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).
Please, commit your changes before you merge.
You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).
You cannot combine --squash with --no-ff.
No remote for the current branch.
No default upstream defined for the current branch.
No remote-tracking branch for %s from %s
No commit specified and merge.defaultToUpstream not set.
Squash commit into empty head not supported yet
Non-fast-forward commit does not make sense into an empty head
%s - not something we can merge
Can merge only exactly one commit into empty head
4b825dc642cb6eb9a060e54bf8d69288fbee4904
old-style 'git merge <msg> HEAD <commit>' is deprecated.
Commit %s has an untrusted GPG signature, allegedly by %s.
Commit %s has a bad GPG signature allegedly by %s.
Commit %s does not have a GPG signature.
Commit %s has a good GPG signature by %s
Bad value '%s' in environment '%s'
 (no commit created; -m option ignored)
Not possible to fast-forward, aborting.
Trying really trivial in-index merge...
Merge made by the '%s' strategy.
No merge strategy handled the merge.
Merge with strategy %s failed.
Rewinding the tree to pristine...
Using the %s to prepare resolving by hand.
Automatic merge went well; stopped before committing as requested
Automatic merge failed; fix conflicts and then commit the result.
do not show a diffstat at the end of the merge
show a diffstat at the end of the merge
add (at most <n>) entries from shortlog to merge commit message
create a single commit instead of doing a merge
perform a commit if the merge succeeds (default)
edit message before committing
abort if fast-forward is not possible
Verify that the named commit has a valid GPG signature
option for selected merge strategy
merge commit message (for a non-fast-forward merge)
abort the current in-progress merge
git merge [<options>] [<commit>...]
git merge [<options>] <msg> HEAD <commit>
GIT_MERGE_AUTOEDIT
Please enter a commit message to explain why this merge is necessary,
especially if it merges an updated upstream into a topic branch.
Lines starting with '%c' will be ignored, and an empty message aborts
the commit.
Not a valid commit name %s
output all common ancestors
independent
is-ancestor
No such ref: '%s'
Ambiguous refname: '%s'
Not a valid object name: '%s'
find ancestors for a single n-way merge
list revs not reachable from others
is the first one ancestor of the other?
find where <commit> forked from reflog of <ref>
--is-ancestor cannot be used with --all
--is-ancestor takes exactly two commits
--independent cannot be used with --all
git merge-base [-a | --all] <commit> <commit>...
git merge-base [-a | --all] --octopus <commit>...
git merge-base --independent <commit>...
git merge-base --is-ancestor <commit> <commit>
git merge-base --fork-point <ref> [<commit>]
too many labels on the command line
send results to standard output
for conflicts, use our version
for conflicts, use their version
for conflicts, use a union version
for conflicts, use this marker size
set labels for file1/orig-file/file2
failed to redirect stderr to /dev/null: %s
git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> <orig-file> <file2>
diff3
use a diff3 based merge
union
do not warn about conflicts
Cannot merge binary files: %s
Could not open %s for writing
Could not write to %s
Could not close %s
merge program failed
git merge-index: %s not in the cache
git merge-index [-o] [-q] <merge-program> (-a | [--] [<filename>...])
git merge-index: unknown option %s
git merge-ours <base>... -- HEAD <remote>...
Unknown option %s
Could not parse object '%s'
Could not resolve ref '%s'
Merging %s with %s
Cannot handle more than %d bases. Ignoring %s.
git %s <base>... -- <head> <remote> ...
unknown rev %s
%s is not a tree
added in remote
added in both
added in local
removed in both
changed in both
removed in local
removed in remote
  %-6s %o %s %s
unable to generate diff
git merge-tree <base-tree> <branch1> <branch2>
git mktag
could not read from stdin
type 
char%lu: no "tag " found
char%lu: type too long
char%lu: missing tagger name
0123456789
unable to write tag file
invalid tag signature file
wanna fool me ? you obviously got the size wrong !
char%d: does not start with "object "
char%d: could not get SHA1 hash
char%d: could not find "\ntype "
char%lu: could not find next "\n"
char%d: could not verify object %s
char%lu: could not verify tag name
char%lu: could not find "tagger "
char%lu: malformed tagger field
char%lu: missing tag timestamp
char%lu: malformed tag timestamp
char%lu: malformed tag timezone
char%lu: trailing garbage in tag header
input is NUL terminated
allow missing objects
input format error: %s
invalid quoting
path %s contains slash
%o %s%c
allow creation of more than one tree
input format error: (blank line only valid in batch mode)
entry '%s' object type (%s) doesn't match mode type (%s)
entry '%s' object %s is unavailable
entry '%s' object %s is a %s but specified type was (%s)
git mktree [-z] [--missing] [--batch]
skip move/rename errors
bad source
%.*s is in index
source directory is empty
not under version control
destination exists
overwriting '%s'
Cannot overwrite
%s, source=%s, destination=%s
Renaming %s to %s
renaming '%s' failed
builtin/mv.c
pos >= 0
force move/rename even if target exists
destination '%s' is not a directory
Checking rename of '%s' to '%s'
can not move directory into itself
cannot move directory over file
Directory %s is in index and no submodule?
Please stage your changes to .gitmodules or stash them to proceed
multiple sources for the same target
destination directory does not exist
git mv [<options>] <source>... <destination>
cmd_mv
%.*s~%d
cannot describe '%s'
%s^0
generation: %d, but deref?
%.*s~%d^%d
%.*s^%d
print only names (no SHA-1)
%.*s (%s)
only use tags to name the commits
only use refs matching <pattern>
list all commits reachable from all refs
allow to print `undefined` names (default)
dereference tags in the input (internal use)
Specify either a list, or --all, not both!
Could not get sha1 for %s. Skipping.
Could not get commit for %s. Skipping.
Could not get object for %s. Skipping.
git name-rev [<options>] <commit>...
git name-rev [<options>] --all
git name-rev [<options>] --stdin
NOTES_MERGE_PARTIAL
NOTES_MERGE_REF
refs/notes/
unable to write note object
Failed to read object '%s'.
Object %s has no note
Removing note for object %s
NOTES_EDITMSG
could not create file '%s'
--stat
--no-notes
could not read 'show' output
could not open or read '%s'
note contents as a string
note contents in a file
reuse specified note object
allow storing empty note
too many parameters
Notes added by 'git notes %s'
notes-ref
use notes from <notes-ref>
GIT_NOTES_REF
No note found for object %s.
replace existing notes
read objects from stdin
for-rewrite
too few parameters
General options
Merge options
Committing unmerged notes
abort notes merge
notes: 
Unknown -s/--strategy: %s
notes.mergeStrategy
NOTES_MERGE_WORKTREE
do not remove, show only
report pruned notes
Unknown subcommand: %s
notes.%s.mergeStrategy
git notes get-ref
git notes prune [<options>]
git notes remove [<object>]
git notes show [<object>]
git notes edit [<object>]
git notes [list [<object>]]
Failed to delete ref NOTES_MERGE_PARTIAL
Failed to delete ref NOTES_MERGE_REF
Failed to remove 'git notes merge' worktree
unknown notes merge strategy %s
Refusing to %s notes in %s (outside of refs/notes/)
The note contents have been left in %s
Failed to resolve '%s' as a valid ref.
Cannot read note data from non-blob object '%s'.
unable to start 'show' for object '%s'
failed to finish 'show' for object '%s'
Please supply the note contents using either -m or -F option
reuse and edit specified note object
The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.
Please use 'git notes add -f -m/-F/-c/-C' instead.
BUG: combine_notes_overwrite failed
Notes removed by 'git notes %s'
Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite existing notes
Overwriting existing notes for object %s
Notes added by 'git notes add'
Notes removed by 'git notes add'
load rewriting config for <command> (implies --stdin)
Notes added by 'git notes copy'
Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite existing notes
Missing notes on source object %s. Cannot copy.
resolve notes conflicts using the given strategy (manual/ours/theirs/union/cat_sort_uniq)
finalize notes merge by committing unmerged notes
Aborting notes merge resolution
cannot mix --commit, --abort or -s/--strategy
Must specify a notes ref to merge
Failed to read ref NOTES_MERGE_PARTIAL
Could not find commit from NOTES_MERGE_PARTIAL.
Could not parse commit from NOTES_MERGE_PARTIAL.
Failed to resolve NOTES_MERGE_REF
Failed to finalize notes merge
notes: Merged notes from %s into %s
A notes merge into %s is already in-progress at %s
Failed to store link to current notes ref (%s)
Automatic notes merge failed. Fix conflicts in %s and commit the result with 'git notes merge --commit', or abort the merge with 'git notes merge --abort'.
attempt to remove non-existent note is not an error
read object names from the standard input
Notes removed by 'git notes remove'
Notes removed by 'git notes prune'
BUG: local ref %s is outside of refs/notes/
git notes merge [<options>] <notes-ref>
git notes merge --commit [<options>]
git notes merge --abort [<options>]
git notes append [<options>] [<object>]
git notes copy [<options>] <from-object> <to-object>
git notes copy --stdin [<from-object> <to-object>]...
git notes add [<options>] [<object>]
git notes [--ref <notes-ref>] [list [<object>]]
git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]
git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>
git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]
git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]
git notes [--ref <notes-ref>] show [<object>]
git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>
git notes merge --commit [-v | -q]
git notes merge --abort [-v | -q]
git notes [--ref <notes-ref>] remove [<object>...]
git notes [--ref <notes-ref>] prune [-n | -v]
git notes [--ref <notes-ref>] get-ref
Write/edit the notes for the following object:
object %s cannot be read
pack.window
pack.windowmemory
pack.depth
pack.compression
bad pack compression level %d
pack.deltacachesize
pack.deltacachelimit
pack.writebitmaphashcache
pack.usebitmaps
deflate error (%d)
unsupported index version %s
bad index version '%s'
delta size changed
bad packed object CRC for %s
corrupt packed object for %s
--objects-edge-aggressive
--objects-edge
do not show progress meter
all-progress
index-version
version[,offset]
max-pack-size
ignore packed objects
limit pack window by objects
window-memory
reuse existing deltas
reuse existing objects
use OFS_DELTA objects
output pack to stdout
keep-unreachable
keep unreachable objects
create thin packs
pack compression level
do not hide commits by grafts
--objects
--reflog
--indexed-objects
--unpacked
Counting objects
fgets
--shallow 
not an SHA-1 '%s'
not a rev '%s'
bad revision '%s'
builtin/pack-objects.c
reuse_packfile_objects
unable to add recent objects
cannot open pack index
unable to force loose object
Compressing objects
Writing objects
<stdout>
pack_to_stdout
packfile is invalid: %s
failed to stat %s: %s
failed utime() on %s: %s
%s.bitmap
object %s inconsistent object length (%lu vs %lu)
suboptimal pack - out of memory
recursive delta detected for object %s
show progress meter during object writing phase
similar to --all-progress when progress meter is shown
write the pack index file in the specified idx format version
maximum size of each output pack file
ignore borrowed objects from alternate object store
limit pack window by memory in addition to object limit
maximum length of delta chain allowed in the resulting pack
use threads when searching for best delta matches
do not create an empty pack output
read revision arguments from standard input
limit the objects to those that are not yet packed
include objects reachable from any reference
include objects referred by reflog entries
include objects referred to by the index
include tag objects that refer to objects to be packed
unpack unreachable objects newer than <time>
create packs suitable for shallow fetches
ignore packs that have companion .keep file
use a bitmap index if available to speed up counting objects
write a bitmap index together with the pack index
--max-pack-size cannot be used to build a pack for transfer.
minimum pack size limit is 1 MiB
--thin cannot be used to build an indexable pack.
--keep-unreachable and --unpack-unreachable are incompatible.
fgets returned NULL, not EOF, not error!
expected edge sha1, got garbage:
expected sha1, got garbage:
delta base offset overflow in pack for %s
delta base offset out of bound for %s
unable to get type of object %s
Delta compression using up to %d threads.
inconsistency with delta count
ordered %u objects, expected %u
unable to open packfile for reuse: %s
unable to seek in reused packfile
unable to read from reused packfile
wrote %u objects while expecting %u
Total %u (delta %u), reused %u (delta %u)
git pack-objects --stdout [<options>...] [< <ref-list> | < <object-list>]
git pack-objects [<options>...] <base-name> [< <ref-list> | < <object-list>]
write_pack_file
get_object_list_from_bitmap
disabling bitmap writing, as some objects are not being packed
--verbose
--alt-odb
Bad pack filename: %s
Zero packs found!
Bad sha1 on stdin: %s
Filename %s not found in packed_git
There are %lu packs available in alt-odbs.
The smallest (bytewise) set of packs is:
containing %lu duplicate objects with a total size of %lukb.
A total of %lu unique objects were considered.
Redundant packs (with indexes):
%luMB of redundant packs in total.
Internal error: No complete sets found!
git pack-redundant [--verbose] [--alt-odb] (--all | <filename.pack>...)
pack everything
prune loose refs (default)
git pack-refs [<options>]
patchid.stable
--stable
--unstable
diff-tree 
0123456789
git patch-id [--stable | --unstable]
rm -f %s
Removing duplicate objects
git prune-packed [-n | --dry-run] [-q | --quiet]
Unable to open directory %s
tmp_
report pruned objects
expiry-date
%s/pack
Removing stale temporary file %s
expire objects older than <time>
cannot prune in a precious-objects repo
git prune [-n] [-v] [--expire <time>] [--] [<head>...]
pull.rebase
Invalid value for %s: %s
--rebase
--ff-only
--ff
--no-ff
pull.ff
Invalid value for pull.ff: %s
branch.%s.rebase
Pull
rebase.autostash
refs/remotes/%s/%s
builtin/pull.c
curr_branch_remote
--fork-point
BUG: refspecs without repo?
	not-for-merge	
See git-pull(1) for details.
<remote>
--preserve-merges
--onto
Options related to merging
false|true|preserve
allow fast-forward
Options related to fetching
Updating an unborn branch with changes added to the index.
Cannot pull with rebase: You have unstaged changes.
Additionally, your index contains uncommitted changes.
Cannot pull with rebase: Your index contains uncommitted changes.
fetch updated the current branch head.
fast-forwarding your working tree from
commit %s.
Cannot fast-forward your working tree.
After making sure that you saved anything precious from
$ git diff %s
output, run
$ git reset --hard
to recover.
There is no candidate for rebasing against among the refs that you just fetched.
There are no candidates for merging among the refs that you just fetched.
Generally this means that you provided a wildcard refspec which had no
matches on the remote end.
You asked to pull from the remote '%s', but did not specify
a branch. Because this is not the default configured remote
for your current branch, you must specify a branch on the command line.
You are not currently on a branch.
Please specify which branch you want to rebase against.
Please specify which branch you want to merge with.
    git pull <remote> <branch>
There is no tracking information for the current branch.
If you wish to set tracking information for this branch you can do so with:
    git branch --set-upstream-to=%s/<branch> %s
Your configuration specifies to merge with the ref '%s'
from the remote, but no such ref was fetched.
Cannot merge multiple branches into empty head.
Cannot rebase onto multiple branches.
incorporate changes by rebasing rather than merging
verify that the named commit has a valid GPG signature
git pull [<options>] [<repository> [<refspec>...]]
get_upstream_branch
%s missing parameter
push.followtags
push.gpgsign
Invalid value for '%s'
push.recursesubmodules
force-with-lease
Pushing to %s
push all refs
mirror all refs
delete refs
force updates
refname>:<expect
check|on-demand|no
use thin pack
receive pack program
prune locally removed refs
bypass pre-push hook
follow-tags
signed
yes|no|if-asked
GPG sign the push
refs/tags/*
tag shorthand without <tag>
%s%s:%s
The current branch %s has no upstream branch.
To push the current branch and set the remote as upstream, use
    git push --set-upstream %s %s
The current branch %s has multiple upstream branches, refusing to push.
You are pushing to remote '%s', which is not the upstream of
your current branch '%s', without telling me what to push
to update which remote branch.
To choose either option permanently, see push.default in 'git help config'.
The upstream branch of your current branch does not match
the name of your current branch.  To push to the upstream branch
on the remote, use
    git push %s HEAD:%s
To push to the branch of the same name on the remote, use
    git push %s %s
underlying transport does not support --%s option
failed to push some refs to '%s'
push tags (can't be used with --all or --mirror)
require old value of ref to be at this value
control recursive pushing of submodules
set upstream for git pull/status
push missing but relevant tags
request atomic transaction on remote side
--delete is incompatible with --all, --mirror and --tags
--delete doesn't make sense without any refs
--delete only accepts plain target ref names
No configured push destination.
Either specify the URL from the command-line or configure a remote repository using
    git remote add <name> <url>
and then push using the remote name
    git push <name>
--all and --tags are incompatible
--all can't be combined with refspecs
--mirror and --tags are incompatible
--mirror can't be combined with refspecs
--all and --mirror are incompatible
You didn't specify any refspecs to push, and push.default is "nothing".
git push [<options>] [<repository> [<refspec>...]]
You cannot update a remote ref that points at a non-commit object,
or update a remote ref to make it point at a non-commit object,
without using the '--force' option.
Updates were rejected because the tag already exists in the remote.
Updates were rejected because the remote contains work that you do
not have locally. This is usually caused by another repository pushing
to the same ref. You may want to first integrate the remote changes
(e.g., 'git pull ...') before pushing again.
See the 'Note about fast-forwards' in 'git push --help' for details.
Updates were rejected because a pushed branch tip is behind its remote
counterpart. Check out this branch and integrate the remote changes
(e.g. 'git pull ...') before pushing again.
See the 'Note about fast-forwards' in 'git push --help' for details.
Updates were rejected because the tip of your current branch is behind
its remote counterpart. Integrate the remote changes (e.g.
'git pull ...') before pushing again.
See the 'Note about fast-forwards' in 'git push --help' for details.
You are not currently on a branch.
To push the history leading to the current (detached HEAD)
state now, use
    git push %s HEAD:<name-of-remote-branch>
more than one --exclude-per-directory given.
write resulting index to <file>
perform a merge in addition to a read
3-way merge if no file level merging required
3-way merge in presence of adds and removes
same as -m, but discard unmerged entries
read the tree into the index under <subdirectory>/
update working tree with merge result
allow explicitly ignored files to be overwritten
don't check the working tree after merging
don't update the index or the work tree
alula
skip applying sparse checkout filter
Which one? -m, --reset, or --prefix?
You need to resolve your current index first
I cannot read more than %d trees
read-tree: emptying the index with no arguments is deprecated; use --empty
passing trees as arguments contradicts --empty
-u and -i at the same time makes no sense
%s is meaningless without -m, --reset, or --prefix
--exclude-per-directory is meaningless unless -u
just how do you expect me to merge %d trees?
failed to unpack tree object %s
git read-tree [(-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>) [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--index-output=<file>] (--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])
(missing)
(conflict)
%06o #%d %s %.8s
* %d-way merge
ent#%d
index-output
only empty the index
Merging
trivial
<subdirectory>/
no-sparse-checkout
debug-unpack
debug unpack-trees
protocol error: expected old/new/ref, got '%s'
unknown error in parse_pack_header
report-status delete-refs side-band-64k quiet
By default, updating the current branch in a non-bare repository
By default, deleting the current branch is denied, because the next
push-to-checkout hook declined
denyCurrentBranch = updateInstead needs a worktree
deletion of the current branch prohibited
Invalid denyDeleteCurrent setting
branch is currently checked out
Could not update working tree to new HEAD
Working directory has staged changes
Working directory has unstaged changes
refusing to create funny ref '%s' remotely
refusing to update checked out branch: %s
unpack should have generated %s, but I can't find it!
refusing to delete the current branch: %s
denying non-fast-forward %s (you should pull first)
Allowing deletion of corrupt ref.
shallow: update_shallow_ref %s
--reject-thin-pack-for-testing
'%s' does not appear to be a git repository
protocol error: expected shallow sha, got '%s'
protocol error: got both push certificate and unsigned commands
malformed push certificate %.*s
refusing update to broken symref '%s'
refusing inconsistent update between symref '%s' (%s..%s) and its target '%s' (%s..%s)
BUG: connectivity check has not been run on ref %s
BUG: connectivity check skipped???
protocol error (pack version unsupported)
protocol error (pack signature mismatch detected)
eof before pack header was fully read
'git clone' won't result in any file checked out, causing confusion.
You can set 'receive.denyDeleteCurrent' configuration variable to
'warn' or 'ignore' in the remote repository to allow deleting the
current branch, with or without a warning message.
To squelch this message, you can set it to 'refuse'.
is denied, because it will make the index and work tree inconsistent
with what you pushed, and will require 'git reset --hard' to match
You can set 'receive.denyCurrentBranch' configuration variable to
'ignore' or 'warn' in the remote repository to allow pushing into
its current branch; however, this is not recommended unless you
arranged to update its work tree to match what you pushed in some
To squelch this message and still keep the default behaviour, set
'receive.denyCurrentBranch' configuration variable to 'refuse'.
index-pack fork failed
index-pack abnormal exit
unpack-objects abnormal exit
--pack_header=%u,%u
--strict%s
localhost
--keep=receive-pack %lu on %s
error: 
warning: 
refuse
updateinstead
receive.fsck.
receive.denydeletes
receive.denynonfastforwards
receive.unpacklimit
transfer.unpacklimit
receive.fsck.skiplist
%cskiplist=%s
%c%s=%s
Skipping unknown msg id '%s'
transfer.fsckobjects
receive.denycurrentbranch
receive.denydeletecurrent
repack.usedeltabaseoffset
receive.updateserverinfo
receive.autogc
receive.shallowupdate
receive.certnonceseed
receive.certnonceslop
receive.advertiseatomic
receive.fsckobjects
%s:%lu
%lu-%.*s
 atomic
 ofs-delta
 push-cert=%s
 agent=%s
%s %s%c%s
.have
failed to delete
shallow error
failed to update ref
funny refname
bad pack
deletion prohibited
bad ref
non-fast-forward
Up-to-date check failed
updating the current branch
GIT_DIR=%s
push-to-checkout
--ignore-submodules
--refresh
GIT_WORK_TREE=%s
denying ref deletion for %s
deleting the current branch
bad sha1 objects for %s
hook declined to update %s
Deleting a non-existent ref.
builtin/receive-pack.c
MISSING
UNSOLICITED
SLOP
nonce
GIT_PUSH_CERT=%s
GIT_PUSH_CERT_SIGNER=%s
GIT_PUSH_CERT_KEY=%s
GIT_PUSH_CERT_STATUS=%c
GIT_PUSH_CERT_NONCE=%s
GIT_PUSH_CERT_NONCE_STATUS=%s
GIT_PUSH_CERT_NONCE_SLOP=%ld
transaction failed to start
atomic push failure
atomic transaction failed
--advertise-refs
push-cert
push-cert-end
GIT_SHALLOW_FILE
shallow update not allowed
unpacker error
missing necessary objects
deny updating a hidden ref
deny deleting a hidden ref
pre-receive
pre-receive hook declined
broken symref
inconsistent aliased update
unpack %s
ok %s
post-receive
post-update
capabilities^{}
the work tree to HEAD.
other way.
git receive-pack <git-dir>
refs/stash
--rewrite
--updateref
Nothing to delete?
Not a reflog: %s
no reflog for '%s'
reflogexpire
reflogexpireunreachable
--expire=
'%s' is not a valid timestamp
--expire-unreachable=
--stale-fix
Marking reachable objects...
%s points nowhere!
invalid ref format: %s
'%s' for '%s' is not a valid timestamp
git reflog [ show | expire | delete | exists ]
git reflog exists <ref>
git reflog delete [--rewrite] [--updateref] [--dry-run | -n] [--verbose] <refs>...
git reflog expire [--expire=<time>] [--expire-unreachable=<time>] [--rewrite] [--updateref] [--stale-fix] [--dry-run | -n] [--verbose] [--all] <refs>...
remotes.default
%s (fetch)
%s (push)
refs/%s:refs/%s
more than one %s
    %-*s 
rebases onto remote %s
 merges with remote %s
    and with remote
    %-*s %s %s
 tracked
 ???
    %-*s
up to date
fast-forwardable
local out of date
    %-*s forces to %-*s (%s)
    %-*s pushes to %-*s (%s)
    %-*s forces to %s
    %-*s pushes to %s
unknown mirror argument: %s
No such remote: %s
refs/heads/*
(matching)
(delete)
fetch the remote branches
branch(es) to track
master branch
push|fetch
remote %s already exists.
remote.%s.tagopt
Updating %s
refs/remotes/%s/HEAD
remote add
Could not setup master '%s'
remote.%s.push
branches/%s
remote.%s
:refs/remotes/%s/
deleting '%s' failed
remote: renamed %s to %s
creating '%s' failed
branch.%s.%s
Cannot determine remote HEAD
  git remote set-head %s %s
Could not delete %s
Not a valid ref: %s
remote set-head
Could not setup %s
%s/HEAD set to %s
set-branches
add branch
no remote specified
No such remote '%s'
return all URLs
set-url
manipulate push URLs
add URL
delete URLs
remote.%s.pushurl
Invalid old URL pattern: %s
No such URL found: %s
do not query remotes
* remote %s
(no URL)
  Fetch URL: %s
  Push  URL: %s
  HEAD branch: %s
(not queried)
 (status not queried)
  Remote branches:%s
  Remote branch:%s
 %s will become dangling!
 %s has become dangling!
Pruning %s
 * [would prune] %s
 * [pruned] %s
prune remotes after fetching
--multiple
git remote remove <name>
git remote rename <old> <new>
git remote [-v | --verbose]
refs/heads/%s:refs/remotes/%s/%s
invalid branch.%s.merge; cannot rebase onto > 1 branch
 new (next fetch will store in remotes/%s)
 stale (use 'git remote prune' to remove)
Could not get fetch map for refspec %s
be verbose; must be placed before a subcommand
import all tags and associated objects when fetching
or do not fetch any tag at all (--no-tags)
set up remote as a mirror to push to or fetch from
specifying a master branch makes no sense with --mirror
specifying branches to track makes sense only with fetch mirrors
refs/heads/test:refs/remotes/%s/test
'%s' is not a valid remote name
Could not rename config section '%s' to '%s'
Not updating non-default fetch refspec
	Please update the configuration manually if necessary.
Note: Some branches outside the refs/remotes/ hierarchy were not removed;
to delete them, use:
Note: A branch outside the refs/remotes/ hierarchy was not removed;
to delete it, use:
Could not remove config section '%s'
set refs/remotes/<name>/HEAD according to remote
delete refs/remotes/<name>/HEAD
Multiple remote HEAD branches. Please choose one explicitly with:
query push URLs rather than fetch URLs
no URLs configured for remote '%s'
--add --delete doesn't make sense
Will not delete all non-push URLs
  HEAD branch (remote HEAD is ambiguous, may be one of the following):
  Local branches configured for 'git pull':
  Local branch configured for 'git pull':
  Local refs will be mirrored by 'git push'
  Local refs configured for 'git push'%s:
  Local ref configured for 'git push'%s:
git remote set-url [--push] <name> <newurl> [<oldurl>]
git remote set-url --add <name> <newurl>
git remote set-url --delete <name> <url>
git remote get-url [--push] [--all] <name>
git remote update [<options>] [<group> | <remote>]...
git remote prune [<options>] <name>
git remote show [<options>] <name>
git remote set-branches <name> <branch>...
git remote set-branches --add <name> <branch>...
git remote set-head <name> (-a | --auto | -d | --delete | <branch>)
git remote add [<options>] <name> <url>
git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>
git remote [-v | --verbose] show [-n] <name>
git remote prune [-n | --dry-run] <name>
git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]
git remote set-branches [--add] <name> <branch>...
--mirror is dangerous and deprecated; please
	 use --mirror=fetch or --mirror=push instead
Comammand input error
capabilities
*connect
connect 
Can't run specified command
%s %s%c
%s %s%chost=%s%c
Bad command
GIT_EXT_SERVICE
GIT_EXT_SERVICE_NOPREFIX
Expected two arguments
Bad remote-ext placeholder '%%%c'.
remote-ext command has incomplete placeholder
Input error
Bad command: %s
Bad URL syntax
Copying data between file descriptors failed
pack everything in a single pack
same as -a, and turn unreachable objects loose
remove redundant packs, and run git-prune-packed
pass --no-reuse-delta to git-pack-objects
pass --no-reuse-object to git-pack-objects
do not run git-update-server-info
pass --local to git-pack-objects
with -A, do not loosen objects older than this
size of the window used for delta compression
same as the above, but limit memory size instead of entries count
limits the maximum delta depth
repack objects in packs marked with .keep
cannot delete packs in a precious-objects repo
repack: Expecting 40 character sha1 lines only from pack-objects.
WARNING: Some packs in use have been renamed by
WARNING: prefixing old- to their name, in order to
WARNING: replace them with the new version of the
WARNING: file.  But the operation failed, and the
WARNING: attempt to rename them back to their
WARNING: original names also failed.
WARNING: Please rename them in %s manually:
repack.packkeptobjects
repack.writebitmaps
approxidate
maximum size of each packfile
pack-kept-objects
%s/.tmp-%d-pack
--keep-true-parents
--honor-pack-keep
--non-empty
--window=%s
--window-memory=%s
--depth=%s
--max-pack-size=%s
--no-reuse-delta
--no-reuse-object
--write-bitmap-index
GIT_REF_PARANOIA=1
--unpack-unreachable
--incremental
--local
--delta-base-offset
Nothing new to pack.
%s/pack-%s%s
%s/old-%s%s
%s/old-%s
WARNING:   old-%s -> %s
%s-%s%s
removing '%s' failed
%s/%s.keep
git repack [<options>]
bad mergetag in commit '%s'
%s (%s) -> %s (%s)
'%s' is not a valid ref name.
list replace refs
delete replace refs
edit existing object
graft
change a commit's parents
replace the ref if it exists
use this format
replace ref '%s' not found.
Deleted replace ref '%s'
bad number of arguments
-e needs exactly one argument
REPLACE_EDITOBJ
unable to open %s for writing
cat-file reported failure
editing object file failed
unable to open %s for reading
unable to spawn mktree
unable to read from mktree
mktree reported failure
unable to fstat %s
parent 
medium
BUG: invalid cmdmode %d
git replace -d <object>...
malformed mergetag in commit '%s'
original commit '%s' contains mergetag '%s' that is discarded; use --edit instead of --graft
replace ref name too long: %.*s...
replace ref '%s' already exists
Objects must be of the same type.
'%s' points to a replaced object of type '%s'
while '%s' points to a replacement object of type '%s'.
do not pretty-print contents for --edit
--format cannot be used when not listing
-f only makes sense when writing a replacement
--raw only makes sense with --edit
-d needs at least one argument
unable to get object type for %s
mktree did not return an object name
unable to write object to database
new object is the same as the old one: '%s'
-g needs at least one argument
the original commit '%s' has a gpg signature.
the signature will be removed in the replacement commit!
could not write replacement commit for: '%s'
new commit is the same as the old one: '%s'
only one pattern can be given with -l
invalid replace format '%s'
valid formats are 'short', 'medium' and 'long'
git replace [-f] <object> <replacement>
git replace [-f] --edit <object>
git replace [-f] --graft <commit> [<parent>...]
git replace [--format=<format>] [-l [<pattern>]]
forget
clear
remaining
preimage
--- a/%s
+++ b/%s
register clean resolutions in index
'git rerere forget' without paths is deprecated
unable to generate diff for %s
git rerere [clear | forget <path>... | status | remaining | diff | gc]
reset HEAD, index and working tree
reset HEAD but keep local changes
record only the fact that removed paths will be added later
Failed to resolve '%s' as a valid revision.
Failed to resolve '%s' as a valid tree.
--patch is incompatible with --{hard,mixed,soft}
--mixed with paths is deprecated; use 'git reset -- <paths>' instead.
Cannot do %s reset with paths.
%s reset is not allowed in a bare repository
-N can only be used with --mixed
Cannot do a %s reset in the middle of a merge.
Could not reset index file to revision '%s'.
Could not write new index file.
git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]
git reset [-q] <tree-ish> [--] <paths>...
git reset --patch [<tree-ish>] [--] [<paths>...]
reset: moving to %s
reset: %s
You do not have a valid HEAD.
Failed to find tree of HEAD.
Failed to find tree of %s.
be quiet, only report errors
mixed
reset HEAD and index
soft
reset only HEAD
--patch=reset
Unstaged changes after reset:
updating HEAD
HEAD is now at %s
missing blob object '%s'
--header
--timestamp
--bisect
--bisect-all
--bisect-vars
--use-bitmap-index
--test-bitmap
bisect_rev
%s='%s'
bisect_nr
%s=%d
bisect_good
bisect_bad
bisect_all
bisect_steps
%d	%d	%d
rev-list does not support display of notes
git rev-list [OPTION] <commit-id>... [ -- paths... ]
  limiting output:
    --max-count=<n>
    --max-age=<epoch>
    --min-age=<epoch>
    --sparse
    --no-merges
    --min-parents=<n>
    --no-min-parents
    --max-parents=<n>
    --no-max-parents
    --remove-empty
    --all
    --branches
    --tags
    --remotes
    --stdin
    --quiet
  ordering output:
    --topo-order
    --date-order
    --reverse
  formatting output:
    --parents
    --children
    --objects | --objects-edge
    --unpacked
    --header | --pretty
    --abbrev=<n> | --no-abbrev
    --abbrev-commit
    --left-right
    --count
  special purpose:
    --bisect
    --bisect-vars
    --bisect-all
Needed a single revision
%s%lu
refname '%s' is ambiguous
 --no-%s
 -%c
 --%s
--parseopt
set --
premature end of input
*=?!
--sq-quote
--git-path
-n requires an argument
--default
--prefix
--prefix requires an argument
--revs-only
--no-revs
--flags
--no-flags
--short
--short=
--sq
--symbolic
--symbolic-full-name
--abbrev-ref
loose
unknown mode for %s
--disambiguate=
refs/bisect/bad
refs/bisect/good
--branches=
--branches
--tags=
--glob=
--remotes=
--remotes
--exclude=
--local-env-vars
--show-toplevel
--show-prefix
--show-cdup
%s%s.git
--git-common-dir
--resolve-git-dir
not a gitdir '%s'
--is-inside-git-dir
--is-inside-work-tree
--is-bare-repository
--shared-index-path
sharedindex.%s
--since=
--max-age=
--after=
--before=
--min-age=
--until=
--dense
--ignore-missing
--max-count=
--no-merges
--min-parents=
--no-min-parents
--max-parents=
--no-max-parents
--parents
--pretty
--sparse
--topo-order
--date-order
keep-dashdash
stop-at-non-option
stuck-long
output in stuck long form
no usage string given before the `--' separator
--git-path requires an argument
--default requires an argument
--resolve-git-dir requires an argument
git rev-parse --parseopt [<options>] -- [<args>...]
keep the `--` passed as an arg
stop parsing after the first non-option argument
HEAD
git rev-parse --parseopt [<options>] -- [<args>...]
   or: git rev-parse --sq-quote [<arg>...]
   or: git rev-parse [<options>] [<arg>...]
Run "git rev-parse --parseopt -h" for more information on the first usage.
%s: %s cannot be used with %s
--quit
don't automatically commit
edit the commit message
parent number
option for merge strategy
append commit name
keep-redundant-commits
keep redundant, empty commits
program error
--signoff
--no-commit
--strategy-option
--strategy
--mainline
--edit
revert failed
cherry-pick failed
git cherry-pick <subcommand>
git revert <subcommand>
end revert or cherry-pick sequence
resume revert or cherry-pick sequence
cancel revert or cherry-pick sequence
preserve initially empty commits
allow commits with empty messages
git cherry-pick [<options>] <commit-ish>...
git revert [<options>] <commit-ish>...
    %s
(use -f to force removal)
rm '%s'
git rm: unable to remove %s
git rm: '%s'
do not list removed files
only remove from the index
override the up-to-date check
allow recursive removal
ignore-unmatch
(use 'rm -rf' if you really want to remove it including all of its history)
the following submodules (or one of their nested submodules)
use a .git directory:
the following submodule (or one of its nested submodules)
uses a .git directory:
Please, stage your changes to .gitmodules or stash them to proceed
not removing '%s' recursively without -r
the following files have staged content different from both the
file and the HEAD:
the following file has staged content different from both the
file and the HEAD:
(use --cached to keep the file, or -f to force removal)
the following files have changes staged in the index:
the following file has changes staged in the index:
the following files have local modifications:
the following file has local modifications:
exit with a zero status even if nothing matched
git rm [<options>] [--] <file>...
stale info
needs force
fetch first
non-fast forward
no match
git-receive-pack
remote name
use stateless RPC protocol
read refs from stdin
helper-status
Everything up-to-date
print status from remote helper
Destination %s is not a uri for %s
git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<host>:]<directory> [<ref>...]
  --all and explicit <ref> specification are mutually exclusive.
[PATCH
<none>
Missing author: %s
%6d	%s
%s (%d):
      %s
w[,i1[,i2]]
Linewrap output
sort output according to the number of commits per author
Suppress commit descriptions, only provides commit count
Show the email address of each author
git shortlog [<options>] [<revision-range>] [[--] [<path>...]]
-w[<width>[,<indent1>[,<indent2>]]]
(unavailable)
[PATCH] 
showbranch.default
color.showbranch
no matching refs with %s
bad sha1 reference %s
show remote-tracking branches
more
synonym to more=-1
no-name
suppress naming strings
include the current branch
sha1-name
show possible merge bases
topics
<n>[,<base>]
No such ref %s
(%s) %s
%s@{%d}
No revs to be shown.
'%s' is not a valid ref.
cannot find commit %s (%s)
%c [%s] 
%s%c%s [%s] 
%s~%d
unrecognized reflog param '%s'
ignoring %s; cannot handle more than %d refs
show remote-tracking and local branches
color '*!+-' corresponding to the branch
show <n> more commits after the common ancestor
name commits with their object names
show refs unreachable from any other ref
show commits in topological order
show only commits not on the first branch
show merges reachable from only one tip
topologically sort, maintaining date order where possible
show <n> most recent ref-log entries starting at base
--reflog is incompatible with --all, --remotes, --independent or --merge-base
no branches given, and HEAD is not valid
--reflog option needs one branch name
Only %d entries can be shown at one time.
cannot handle more than %d revs.
git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]
		[--current] [--color[=<when>] | --no-color] [--sparse]
		[--more=<n> | --list | --independent | --merge-base]
		[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]
git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]
git show-ref: bad ref %s (%s)
%s %s^{}
ref '%s' ignored
--verify requires a reference
'%s' - not a valid ref
No match
dereference
exclude-existing
only show tags (can be combined with heads)
only show heads (can be combined with tags)
stricter reference checking, requires exact ref path
show the HEAD reference, even if it would be filtered out
dereference tags into object IDs
only show SHA1 hash using <n> digits
do not print results to stdout (useful with --verify)
show refs from stdin that aren't in local repository
git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]
git show-ref --exclude-existing[=<pattern>]
strip-comments
comment-lines
could not read the input
skip and remove all lines starting with comment character
prepend comment character and space to each line
git stripspace [-s | --strip-comments]
git stripspace [-c | --comment-lines]
git submodule--helper name <path>
no submodule mapping found in .gitmodules for path '%s'
alternative anchor for relative paths
git submodule--helper list [--prefix=<path>] [<path>...]
where the new submodule will be cloned to
url where to clone the submodule from
Suppress output for cloning a submodule
git submodule--helper clone [--prefix=<path>] [--quiet] [--reference <repository>] [--name <name>] [--url <url>][--depth <depth>] [--] [<path>...]
could not create directory '%s'
clone of '%s' into submodule path '%s' failed
could not get submodule directory for '%s'
fatal: submodule--helper subcommand must be called with a subcommand
fatal: '%s' is not a valid submodule--helper subcommand
%06o %s U	
#unmatched
name of the new submodule
depth for shallow clones
%s/modules/%s
--no-checkout
--depth
--reference
--separate-git-dir
%s/index
cannot open file '%s'
gitdir: %s
could not close file %s
delete symbolic ref
shorten ref output
reason
reason of the update
No such ref: %s
ref %s is not a symbolic ref
suppress error message for non-symbolic (detached) refs
Refusing to perform update with empty message
Refusing to point HEAD outside of refs/
Cannot delete %s, not a symbolic ref
git symbolic-ref [<options>] <name> [<ref>]
git symbolic-ref -d [-q] <name>
version:
tag.sort
tag name too long: %.*s...
tag '%s' not found.
Deleted tag '%s' (was %s)
SHA1_HEX
could not verify the tag '%s'
%(refname:strip=2)
list tag names
delete tags
verify tags
Tag creation options
tag message
annotated and GPG-signed tag
local-user
replace the tag if exists
create a reflog
Tag listing options
show tag list in columns
print only tags of the object
%s %%(contents:lines=%d)
too many params
'%s' is not a valid tag name.
tag '%s' already exists
bad object type.
tag header too big.
TAG_EDITMSG
no tag message?
unable to sign the tag
Updated tag '%s' (was %s)
git tag -d <tagname>...
git tag -v <tagname>...
print <n> lines of each tag message
annotated tag, needs a message
use another key to sign the tag
print only tags that contain the commit
print only tags that are merged
print only tags that are not merged
--column and -n are incompatible
%(align:15)%(refname:strip=2)%(end)
-n option is only allowed with -l.
--contains option is only allowed with -l.
--points-at option is only allowed with -l.
--merged and --no-merged option are only allowed with -l
only one -F or -m option is allowed.
object %s
type %s
tag %s
tagger %s
The tag message has been left in %s
git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> [<head>]
git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]
		[--format=<format>] [--[no-]merged [<commit>]] [<pattern>...]
Write a message for tag:
  %s
Lines starting with '%c' will be kept; you may remove them yourself if you want to.
Write a message for tag:
  %s
Lines starting with '%c' will be ignored.
git unpack-file <sha1>
unable to read blob object %s
.merge_file_XXXXXX
unable to write temp-file
object %s tried to add buffer twice!
Whoops! Cannot find object '%s'
Error on reachable objects of %s
offset value out of bound for delta base object
failed to read delta-pack base object %s
unresolved deltas left after unpacking
failed to write object
invalid blob object
object type mismatch
object of unexpected type
failed to write object %s
bad pack file
unknown pack file version %u
Unpacking objects
bad object type %d
final sha1 did not match
git unpack-objects [-n] [-q] [-r] [--strict]
option 'chmod' expects "+x" or "-x"
%s: does not exist and --remove not passed
%s: cannot remove from the index
No HEAD -- no initial commit yet?
Not in the middle of a merge.
%s: skipping still unmerged path.
%s: identical in both, skipping.
%s: cannot add our version to the index.
%s: cannot add their version to the index.
%s: cannot add to the index - missing --add option?
git update-index: cannot chmod %cx '%s'
option '%s' must be the last argument
git update-index: unable to remove %s
'%s' is beyond a symbolic link
%s: is a directory - add individual files instead
%s: is a directory - add files inside instead
git update-index: --cacheinfo cannot add %s
option 'cacheinfo' expects <mode>,<sha1>,<path>
git update-index: bad quoting of path name
git update-index: unable to update %s
continue refresh even when index needs update
let files replace directories and vice-versa
notice files missing from worktree
refresh even if index contains unmerged entries
like --refresh, but ignore assume-unchanged setting
add the specified entry to the index
override the executable bit of the listed files
add to index only; do not add content to object database
remove named paths even if present in worktree
with --stdin: input lines are terminated by null bytes
read list of paths to be updated from standard input
add entries from standard input to the index
repopulate stages #2 and #3 for the listed paths
only update entries that differ from HEAD
ignore files missing from worktree
report actions to standard output
(for porcelains) forget saved unresolved conflicts
enable/disable untracked cache
enable untracked cache without testing the filesystem
index-version %d not in range: %d..%d
Could not make temporary directory
directory stat info does not change after adding a new file
directory stat info does not change after adding a new directory
directory stat info changes after updating a file
directory stat info changes after adding a file inside subdirectory
directory stat info does not change after deleting a file
directory stat info does not change after deleting a directory
git update-index [<options>] [--] [<file>...]
%s: not in %s branch.
%s: not a blob in %s branch.
Invalid path '%s'
add '%s'
chmod %cx '%s'
Ignoring path %s
Unable to mark file %s
remove '%s'
lstat("%s"): %s
Unable to process path %s
failed to stat %s
failed to create file %s
failed to delete file %s
malformed index info %s
refresh: ignore submodules
do not ignore new files
refresh stat information
really-refresh
cacheinfo
<mode>,<object>,<path>
chmod
(+/-)x
mark files as "not changing"
no-assume-unchanged
clear assumed-unchanged bit
mark files as "index-only"
no-skip-worktree
clear skip-worktree bit
info-only
force-remove
index-info
unresolve
again
clear-resolve-undo
write index in this format
split-index
enable or disable split index
force-untracked-cache
cache corrupted
unknown option '%s'
unknown switch '%c'
mtime-test-XXXXXX
Testing 
newfile
new-dir
failed to create directory %s
new-dir/new
failed to delete directory %s
.gitignore
badly quoted argument: %s
%s %s: invalid <oldvalue>: %s
%s %s: invalid <newvalue>: %s
delete the reference
no-deref
read updates from stdin
empty command in input
whitespace before command: %s
update 
update: missing <ref>
update %s: missing <newvalue>
update %s: extra input: %s
create 
create: missing <ref>
create %s: missing <newvalue>
create %s: zero <newvalue>
create %s: extra input: %s
delete 
delete: missing <ref>
delete %s: zero <oldvalue>
delete %s: extra input: %s
verify 
verify: missing <ref>
verify %s: extra input: %s
option 
option unknown: %s
unknown command: %s
%s: not a valid SHA1
%s: not a valid old SHA1
unexpected character after quoted argument: %s
%s %s: unexpected end of input when reading <oldvalue>
%s %s: unexpected end of input when reading <newvalue>
%s %s: expected SP but got: %s
%s %s: expected NUL but got: %s
%s %s: missing <newvalue>, treating as zero
update <refname> not the one it points to
stdin has NUL-terminated arguments
Refusing to perform update with empty message.
git update-ref [<options>] -d <refname> [<old-val>]
git update-ref [<options>]    <refname> <new-val> [<old-val>]
git update-ref [<options>] --stdin [-z]
update the info files from scratch
git update-server-info [--force]
sent error to the client: %s
read error: %s
Too many options (>%d)
argument 
upload-archive: %s
poll failed resuming: %s
'argument' token or flush expected
NACK unable to spawn subprocess
git upload-archive: archiver died with error
git upload-archive <repo>
%s=%s
GIT_COMMITTER_IDENT
GIT_AUTHOR_IDENT
GIT_EDITOR
Terminal is dumb, but EDITOR unset
git var (-l | <variable>)
print commit contents
print raw gpg status output
commit '%s' not found.
%s: unable to read file.
%s: cannot verify a non-commit object of type %s.
git verify-commit [-v | --verbose] <commit>...
show statistics only
%s: bad
%s: ok
git verify-pack [-v | --verbose] [-s | --stat-only] <pack>...
print tag contents
no signature found
%s: cannot verify a non-tag object of type %s.
git verify-tag [-v | --verbose] <tag>...
create a new branch
create or reset a branch
detach HEAD at named commit
worktrees/%.*s
initializing
gitdir: %s/worktrees/%s
%s/commondir
../..
Preparing %s (identifier %s)
--hard
worktrees/%s/locked
worktrees/%s/gitdir
worktrees/%s/link
failed to remove: %s
worktree %s
HEAD %s
detached
branch %s
(bare)
(detached HEAD)
git worktree list [<options>]
checkout <branch> even if already checked out in other worktree
-b, -B, and --detach are mutually exclusive
could not create directory of '%s'
0000000000000000000000000000000000000000
Removing worktrees/%s: not a valid directory
Removing worktrees/%s: gitdir file does not exist
Removing worktrees/%s: unable to read gitdir file (%s)
Removing worktrees/%s: gitdir file points to non-existent location
Removing worktrees/%s: invalid gitdir file
git worktree add [<options>] <path> [<branch>]
git worktree prune [<options>]
missing-ok
<prefix>/
ignore-cache-tree
only useful for debugging
git-write-tree
%s: error reading the index
%s: error building trees
%s: prefix %s not found
write tree object for a subdirectory <prefix>
git write-tree [--missing-ok] [--prefix=<prefix>/]
The empty string is not a valid path
Could not get current working directory
Could not switch to '%s'
Invalid symlink '%s'
Could not change back to '%s'
hint: %.*s
advice.
pushupdaterejected
pushnonffcurrent
pushnonffmatching
pushalreadyexists
pushfetchfirst
pushneedsforce
statushints
statusuoption
commitbeforemerge
resolveconflict
implicitidentity
detachedhead
setupstreamfailure
objectnamewarning
rmhints
pushnonfastforward
%s is not possible because you have unmerged files.
Fix them up in the work tree, and then use 'git add/rm <file>'
as appropriate to mark resolution and make a commit.
Exiting because of an unresolved conflict.
Please, commit your changes before merging.
Exiting because of unfinished merge.
Note: checking out '%s'.
You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.
If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:
  git checkout -b <new-branch-name>
alias.%s
cmdline ends with \
unclosed quote
%10s: %8u (%lu kB)
export-ignore
export-subst
%.*s%s/
$Format:
archive format
worktree-attributes
store only
compress faster
compress better
Unexpected option --remote
Unexpected option --output
Unknown archive format '%s'
no such ref: %.*s
Not a valid object name
git archive --list
prepend prefix to each pathname in the archive
read .gitattributes in working directory
report archived files on stderr
list supported archive formats
Option --exec can only be used together with --remote
Argument not supported for format '%s': -%d
uploadarchive.allowunreachable
current working directory is untracked
git archive [<options>] <tree-ish> [<path>...]
git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]
git archive --remote <repo> [--exec <cmd>] --list
%07o
%011lo
tar.umask
%u %s=
comment
pax_global_header
 -%d
unable to start '%s' filter
unable to redirect descriptor
'%s' filter reported error
cannot stream blob %s
%s.data
cannot read %s
see %s.paxheader
linkpath
gzip -cn
tar.tgz.command
tar.tgz.remote
tar.tar.gz.command
tar.tar.gz.remote
BUG: tar-filter archiver called with no filter defined
unsupported file mode: 0%o (SHA1: %s)
Path is not valid UTF-8: %s
path too long (%d chars, SHA1: %s): %s
[attr]
%s not allowed: %s:%d
GIT_ATTR_NOSYSTEM
[builtin]
/etc/gitattributes
.gitattributes
info/attributes
attr.c
attr_stack->origin
%.*s is not a valid attribute name: %s:%d
Negative patterns are ignored in git attributes
Use '\!' for literal leading exclamation.
BUG: non-INDEX attr direction in a bare repo
[attr]binary -diff -merge -text
prepare_attr_stack
(builtin)unknown
(builtin)false
(builtin)true
invalid base85 alphabet %c
invalid base85 sequence %.5s
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&()*+-;<=>?@^_`{|}~skip-
bisect_rev_setup
BISECT_NAMES
Could not open file '%s'
BISECT_EXPECTED_REV
BISECT_HEAD
We cannot bisect more!
dist=%d
BISECT_TERMS
could not read file '%s': %s
refs/bisect/
reading bisect refs failed
BISECT_ANCESTORS_OK
a %s revision is needed
%s was both %s and %s
%s is the first %s commit
Badly quoted content in file '%s': %s
There are only 'skip'ped commits left to test.
The first %s commit could be any of:
The merge base %s is bad.
This means the bug has been fixed between %s and [%s].
The merge base %s is new.
The property has changed between %s and [%s].
The merge base %s is %s.
This means the first '%s' commit is between %s and [%s].
Some %s revs are not ancestor of the %s rev.
git bisect cannot work properly in this case.
Maybe you mistook %s and %s revs?
the merge base between %s and [%s] must be skipped.
So we cannot be sure the first %s commit is between %s and %s.
We continue anyway.
Bisecting: a merge base must be tested
could not create file '%s': %s
No testable commit found.
Maybe you started with bad path parameters?
Bisecting: %d revision%s left to test after this (roughly %d step%s)
?Ambiguous object name: '%s'.
branch: Reset to %s
branch: Created from %s
Not setting branch %s as its own upstream.
Branch %s set up to track remote branch %s from %s by rebasing.
Branch %s set up to track remote branch %s from %s.
Branch %s set up to track local branch %s by rebasing.
Branch %s set up to track local branch %s.
Branch %s set up to track remote ref %s by rebasing.
Branch %s set up to track remote ref %s.
Branch %s set up to track local ref %s by rebasing.
Branch %s set up to track local ref %s.
Unable to write upstream branch configuration
'%s' is not a valid branch name.
A branch named '%s' already exists.
Cannot force update the current branch.
Not a valid object name: '%s'.
Not a valid branch point: '%s'.
Not tracking: ambiguous information for ref %s
'%s' is already checked out at '%s'
If you are planning on basing your work on an upstream
branch that already exists at the remote, you may need to
run "git fetch" to retrieve it.
If you are planning to push out a new local branch that
will track its remote counterpart, you may want to use
"git push -u" to set the upstream config as you push.
the requested upstream branch '%s' does not exist
Cannot setup tracking information; starting point '%s' is not a branch.
After fixing the error cause you may try to fix up
the remote tracking information by invoking
"git branch --set-upstream-to=%s%s%s".
%s/pack/pack-
unable to write pack header
BUG: should not happen
cannot seek back
cannot find the current offset
failed to read %d bytes from '%s'
unexpected deflate failure: %d
The bundle contains this ref:
The bundle requires this ref:
unable to dup file descriptor
--pretty=oneline
--boundary
rev-list died
--stdout
--all-progress-implied
Could not spawn pack-objects
pack-objects died
cannot create '%s'
index-pack died
'%s' does not look like a v2 bundle file
unrecognized header: %s%s (%d)
Repository lacks these prerequisite commits:
The bundle contains these %d refs:
The bundle records a complete history.
The bundle requires these %d refs:
ref '%s' is excluded by the rev-list options
Refusing to create empty bundle.
# v2 git bundle
%c%d %d
cache-tree.c
!(dryrun && repair)
%o %.*s%c
cache-tree: internal error
%s: unmerged (%s)
You have both %s and %s
fatal - unsorted cache subtree
index cache-tree records empty sub-tree
cache-tree.c: '%.*s' in '%s' not found
invalid object %06o %s for '%.*s'
update_one
%c8;5;%d
%c8;2;%d;%d;%d
black
invalid color value: %.*s
TERM
dumb
nobold
nodim
noul
noblink
noreverse
green
yellow
blue
magenta
cyan
white
[31m
[32m
[33m
[34m
[35m
[36m
[1;31m
[1;32m
[1;33m
[1;34m
[1;35m
[1;36m
BUG: color parsing ran out of space
unsupported option '%s'
column.c
0123456789;
BUG: invalid layout mode %d
invalid column.%s mode %s
--raw-mode=%d
--width=%d
--indent=%s
--padding=%d
(colopts & COL_ENABLE_MASK) != COL_AUTO
print_columns
object '%s' is not a blob!
%.*s%s%s
diff --cc 
diff --combined 
%s%sindex 
..%s%s
%s%snew file mode %06o
%s%sdeleted file 
%s%06o
..%06o
readlink(%s): %s
read error '%s'
early EOF '%s'
Binary files differ
 -%lu,%lu
 +%lu,%lu 
%s%s %s%s
unable to generate combined diff for %s
mergetag
%s %s is not a commit!
bad graft data: %s
duplicate graft data: %s
bogus commit object %s
bad tree pointer in commit %s
bad parents in commit %s
committer
Could not read %s
Object %s not a commit
cannot read commit object %s
(null)
encoding %s
expected commit for %s, got %s
a NUL byte in commit log message not allowed.
Warning: commit message did not conform to UTF-8.
You may want to amend it after fixing the message, or set the config
variable i18n.commitencoding to the encoding your project uses.
gpgsig
BUG: config_buf can only ungetc the same character
key does not contain a section: %s
key does not contain variable name: %s
bad numeric config value '%s' for '%s' in %s: %s
bad numeric config value '%s' for '%s': %s
bogus format in GIT_CONFIG_PARAMETERS
failed to expand user dir in: '%s'
core.autocrlf=input conflicts with core.eol=crlf
core.commentChar should only be one character
invalid mode for object creation: %s
Must be one of nothing, matching, simple, upstream or current.
Could not expand include path '%s'
relative config includes must come from files
unable to parse command-line config
unable to resolve config blob '%s'
unable to load config blob object '%s'
reference '%s' does not point to a blob
unknown error occured while reading the configuration files
unable to parse '%s' from command-line config
bad config variable '%s' in file '%s' at line %d
could not lock config file %s: %s
could not write config file %s: %s
failed to write new configuration file %s
invalid key: %s
invalid key (newline): %s
invalid unit
[%.*s "
[%.*s]
	%.*s = %s
%s has multiple values
bad config file line %d in %s
GIT_CONFIG_PARAMETERS
bogus config parameter: %s
Missing value for '%s'
core.
core.trustctime
core.checkstat
core.quotepath
core.attributesfile
core.ignorestat
core.prefersymlinkrefs
core.warnambiguousrefs
core.abbrev
core.loosecompression
bad zlib compression level %d
core.compression
core.packedgitwindowsize
core.bigfilethreshold
core.packedgitlimit
core.deltabasecachelimit
core.autocrlf
core.safecrlf
core.eol
native
core.notesref
core.pager
core.editor
core.commentchar
core.askpass
core.excludesfile
core.whitespace
core.fsyncobjectfiles
core.preloadindex
core.createobject
core.sparsecheckout
core.precomposeunicode
core.protecthfs
core.protectntfs
user.
i18n.
i18n.commitencoding
i18n.logoutputencoding
branch.autosetupmerge
branch.autosetuprebase
Malformed value for %s
push.
push.default
nothing
simple
tracking
Malformed value for %s: %s
mailmap.
mailmap.file
mailmap.blob
pager.color
color.pager
pack.packsizelimit
the command line
include.path
/etc/gitconfig
failed to parse %s
GIT_CONFIG_NOSYSTEM
config.c
values->nr > 0
opening %s: %s
invalid config file %s
unable to mmap '%s': %s
chmod on %s failed: %s
Could not set '%s' to '%s'
could not lock config file %s
invalid section name: %s
git_configset_get_value
exceeded maximum include depth (%d) while including
from
Do you have circular includes?
NONE
git+ssh
ssh+git
I don't handle protocol '%s'
Diag: url=%s
Diag: protocol=%s
Diag: hostandport=%s
Diag: path=%s
GIT_OVERRIDE_VIRTUAL_HOST
strange pathname '%s' blocked
Diag: userandhost=%s
Diag: port=%s
strange hostname '%s' blocked
GIT_SSH_COMMAND
GIT_SSH
tortoiseplink
tortoiseplink.exe
unable to fork
-batch
The remote end hung up upon initial contact
Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
protocol error: expected shallow sha-1, got '%s'
repository on the other end cannot be shallow
protocol error: expected sha/ref, got '%s'
No path specified. See 'man git-pull' for valid url syntax
Could not run 'git rev-list'
failed write to rev-list: %s
failed to close rev-list's stdin: %s
convert_to_git_filter_fd
smudge
external filter %s failed %d
external filter %s failed
%s: smudge filter %s failed
$Id: 
%s: clean filter '%s' failed
convert.c
ca.drv
ca.drv->clean
: %s $
cannot fork to run external filter %s
cannot feed the input to external filter %s
read from external filter %s failed
CRLF will be replaced by LF in %s.
The file will have its original line endings in your working directory.
CRLF would be replaced by LF in %s.
LF will be replaced by CRLF in %s.
The file will have its original line endings in your working directory.
LF would be replaced by CRLF in %s
copy-fd: read returned %s
copy-fd: write returned %s
%s: close error: %s
https
http
%s://
%s for '%s': 
%s: 
username
password
invalid credential line: %s
git credential-%s
Username
Password
store
erase
credential.
usehttppath
credential helper '%s' told us to quit
unable to get password from user
%s: sha1 file read error
%s: sha1 file truncated
sha1 file '%s' write error
%s: sha1 file error on close
unable to open /dev/null
unable to open '%s'
sha1 file '%s' validation error
sha1 file '%s' write error. Out of diskspace
%s: error when reading the tail of sha1 file
%s: sha1 file has trailing garbage
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
@@@@@@@@@AA@@A@@@@@@@@@@@@@@@@@@
     
%lu %c%02d%02d
January
yesterday
seconds
Sundays
months
in the future
%lu seconds ago
%lu second ago
%lu minutes ago
%lu minute ago
%lu hours ago
%lu hour ago
%lu days ago
%lu day ago
%lu weeks ago
%lu week ago
%lu years
%lu year
%s, %lu months ago
%s, %lu month ago
%lu years ago
%lu year ago
%lu %+05d
%04d-%02d-%02d
IDLW
default-local
iso8601-strict
iso-strict
iso8601
rfc2822
unknown date format %s
minutes
hours
weeks
three
four
five
seven
nine
noon
midnight
MEWT
MEST
CEST
MESZ
EEST
WAST
WADT
EAST
EADT
NZST
NZDT
IDLE
Mondays
Tuesdays
Wednesdays
Thursdays
Fridays
Saturdays
February
March
April
June
July
August
September
October
November
December
BUG: cannot create anonymous strftime date_mode struct
%04d-%02d-%02d %02d:%02d:%02d %+05d
%04d-%02d-%02dT%02d:%02d:%02d%c%02d:%02d
%.3s, %d %.3s %d %02d:%02d:%02d %+05d
%.3s %.3s %d %02d:%02d:%02d %d%c%+05d
date format missing colon separator: %s
failed to read orderfile '%s'
diff-delta.c
packed_entry - (struct index_entry *)mem == entries
create_delta_index
(G]>
pENOXHn
0lY;
F==8
p;I}
=J-f
VYk[(
	[x*w1
L<<'2
[<tR
yrhj
>/Vm-ikP I
xj4UWg
 h'$
zyT_
Lv<l
rq{1
A'eW|
3B-9
NN'C
2waN
	mdIP
gwz3
;9	kb
4}@4m
.(uw
OJqj
m"2T
FH9<
x6(T!
p	~K
X|	e
h`LK
JbEv
R;*&
bad tree object %s
Could not open directory %s
Could not access '%s'
invalid diff option/value: %s
error while reading from stdin %s
data->o
%s%s:%d: %s.
invalid diff
%s%4d.%01d%% %.*s
XXXXXX_
unable to create temp-file
%sdelta %lu
%sliteral %lu
1,%d
Option '%c' requires a value
cannot hash %s
 %s mode %06o 
unable to generate word diff
noncumulative
%s%s--- %s%s%s
%s%s+++ %s%s%s
 %s %s (%d%%)
%s mode change %06o => %06o%c
myers
diff.color.
color.diff.
diff.renamelimit
meta
frag
func
diff.suppress-blank-empty
diff.dirstat
diff.suppressblankempty
diff.context
diff.renames
diff.autorefreshindex
diff.mnemonicprefix
diff.noprefix
diff.statgraphwidth
diff.external
diff.wordregex
diff.orderfile
diff.algorithm
 %d file changed
 %d files changed
, %d insertion(+)
, %d insertions(+)
, %d deletion(-)
, %d deletions(-)
 0 files changed
Subproject commit %s%s
stat(%s)
readlink(%s)
cannot read data blob for %s
unable to read files to diff
--dirstat=
--dirstat-by-file=
-name-width
-graph-width
--relative=
--color=
--color-words=
--word-diff=
--ignore-submodules=
--submodule=
--ws-error-highlight=
--abbrev=
unified
--raw
--patch-with-raw
--numstat
--shortstat
--dirstat
--dirstat-by-file
--summary
--patch-with-stat
--name-status
--no-patch
--break-rewrites=
--break-rewrites
invalid argument to -B: %s
--find-renames=
--find-renames
invalid argument to -M: %s
--irreversible-delete
--find-copies=
--find-copies
invalid argument to -C: %s
--no-renames
--rename-empty
--no-rename-empty
--relative
--no-minimal
--ignore-space-change
--ignore-space-at-eol
--ignore-blank-lines
--patience
--histogram
diff-algorithm
--binary
--full-index
--find-copies-harder
--follow
--no-follow
--color
--color-words
bad --word-diff argument: %s
--ext-diff
--no-ext-diff
--textconv
--no-textconv
--pickaxe-all
--pickaxe-regex
diff-filter
--abbrev
dst-prefix
--no-prefix
inter-hunk-context
--function-context
--no-function-context
--cumulative
--check
--minimal
--no-color
--word-diff
word-diff-regex
--submodule
src-prefix
--ignore-all-space
--text
internal diff status error
diff.renameLimit
--unified=
%s%sdiff --git %s %s%s
%s%snew file mode %06o%s
%s%sdeleted file mode %06o%s
%s%sold mode %06o%s
%s%snew mode %06o%s
 @@%s
%sGIT binary patch
GIT_DIFF_OPTS
%s%ssimilarity index %d%%
%s%scopy from 
%s%scopy to 
%s%srename from 
%s%srename to 
%s%sindex %s..
GIT_DIFF_PATH_COUNTER=%d
GIT_DIFF_PATH_TOTAL=%d
* Unmerged path %s
GIT_EXTERNAL_DIFF
:%06o %06o %s 
%c%03d%c
%c%c
%lu	%lu	
 %s%-*s |
 %*s
 %s%lu%s
 Unmerged
 %*lu%s
%s ...
%s rewrite 
Could not open /dev/null
%s%s:%d: leftover conflict marker
  Failed to parse dirstat cut-off percentage '%s'
  Unknown dirstat parameter '%s'
Failed to parse --dirstat/-X option parameter:
Found errors in 'diff.dirstat' config variable:
Unknown value for 'diff.submodule' config variable: '%s'
insertions == 0 && deletions == 0
internal error: asking to populate invalid file.
BUG: diff is failing to clean up its tempfiles
unable to generate diffstat for %s
--name-only, --name-status, --check and -s are mutually exclusive
--follow requires exactly one pathspec
Option '--%s' requires a value
Option '--stat-width' requires a value
Option '--stat-name-width' requires a value
Option '--stat-graph-width' requires a value
Option '--stat-count' requires a value
option diff-algorithm accepts "myers", "minimal", "patience" and "histogram"
option `color' expects "always", "auto", or "never"
Failed to parse --submodule option parameter: '%s'
unknown value after ws-error-highlight=%.*s
unknown change class '%c' in --diff-filter=%s
BUG: stat option does not begin with --stat: %s
diff--gita/%.*sb/%.*snewfilemode%06o---/dev/null+++b/%.*s
diff--gita/%.*sb/%.*sdeletedfilemode%06o---a/%.*s+++/dev/null
diff--gita/%.*sb/%.*s---a/%.*s+++b/%.*s
unable to generate patch-id diff for %s
feeding unmodified %s to diffcore
BUG: fill_textconv called with non-textconv driver
error reading from textconv command '%s'
%s%s--- %s%s%s
%s%s+++ %s%s%s
%s%s@@ -
%sBinary files %s and %s differ
Invalid regular expression: %s
%s%sdissimilarity index %d%%%s
external diff died, stopping at %s
internal error in diff-resolve-rename-copy
unable to generate checkdiff for %s
fn_out_diff_words_aux
diff_words_show
checkdiff_consume
print_stat_summary
you may want to set your %s variable to at least %d and retry the command.
only found copies from modified paths due to too many files.
inexact rename detection was skipped due to too many files.
ACDMRTXU*B
------------
@dir.c
Location %s, system %s %s %s
oops in prep_exclude
GIT_DISABLE_UNTRACKED_CACHE
info/exclude
GIT_TRACE_UNTRACKED_STATS
failed to get kernel name and information
pathspec '%s' did not match any file(s) known to git.
cannot use %s as an exclude file
x->baselen == 0 || x->base[x->baselen - 1] == '/'
stk->baselen == dir->basebuf.len
Untracked cache is disabled on this system.
node creation: %u
gitignore invalidation: %u
directory invalidation: %u
opendir: %u
dir && subdir && *dir && *subdir
dir_inside_of
prep_exclude
last_exclude_matching_from_list
VISUAL
unable to start editor '%s'
There was a problem with the editor '%s'.
.merge_link_XXXXXX
unable to create file %s (%s)
unable to write file %s
entry.c
state->istate
cannot lstat '%s'
cannot unlink '%s'
cannot rmdir '%s'
unable to create symlink %s (%s)
cannot create temporary submodule %s
cannot create submodule directory %s
unknown file mode for %s in index
unable to read sha1 file of %s (%s)
%s already exists, no checkout
unable to unlink old '%s' (%s)
cannot create directory at '%s'
write_entry
refs/replace/
GIT_OBJECT_DIRECTORY
GIT_GRAFT_FILE
GIT_REPLACE_REF_BASE
refs/namespaces/%s
bad git namespace path "%s"
%s/pack/pack-%s.keep
Could not set GIT_DIR to '%s'
GIT_COMMON_DIR
internal error: work tree has already been set
Current worktree: %s
New worktree: %s
GIT_ALTERNATE_OBJECT_DIRECTORIES
ewah/ewah_bitmap.c
i >= self->bit_size
it->literals < it->lw
it->pointer < it->buffer_size
rlw_get_literal_words(self->rlw) == current_num + 1
rlw_get_run_bit(self->rlw) == v
rlw_get_running_len(self->rlw) == run_len + 1
rlw_get_running_len(self->rlw) == 0
rlw_get_run_bit(self->rlw) == 0
rlw_get_literal_words(self->rlw) == 0
ewah_iterator_next
ewah_set
add_literal
add_empty_word
/usr
GIT_EXEC_PATH
/usr/lib/git-core
/usr/bin:/bin
exec_cmd.c
trace: exec failed: %s
too many args to run %s
common
ready
unshallow 
fetch.unpacklimit
fetch.fsckobjects
no matching remote head
Server supports no-done
Server supports multi_ack
Server supports side-band
allow-tip-sha1-in-want
allow-reachable-sha1-in-want
Server supports ofs-delta
agent
Server version is %.*s
Marking %s as complete
want %s (%s)
already have %s (%s)
 multi_ack_detailed
 multi_ack
 no-done
 side-band-64k
 side-band
 thin-pack
 no-progress
 include-tag
want %s%s
want %s
deepen %d
invalid shallow line: %s
invalid unshallow line: %s
error in object: %s
no shallow found: %s
have %s
got ack %d %s
invalid commit %s
giving up
got ack (%d) %s
no common commits
--keep=fetch-pack %lu on %s
git fetch-pack: expected ACK/NAK, got EOF
git fetch_pack: expected ACK/NAK, got '%s'
git fetch-pack: expected shallow list
Server does not support shallow clients
Server supports multi_ack_detailed
Server supports side-band-64k
Server supports allow-tip-sha1-in-want
Server supports allow-reachable-sha1-in-want
--stateless-rpc requires multi_ack_detailed
fetch-pack: unable to fork off sideband demultiplexer
protocol error: bad pack header
fetch-pack: unable to fork off %s
error in sideband demultiplexer
expected shallow/unshallow, got %s
fsck.c
*msg_id
unterminated header
Unhandled message id: %s
Cannot demote %s to %s
skiplist requires a path
Could not open skip list: %s
Could not read '%s'
Invalid SHA-1: %s
Missing '=': '%s'
Unknown object type for %s
no valid object to fsck
contains full pathnames
contains empty pathname
contains '.'
contains '..'
contains '.git'
contains bad file modes
not properly sorted
graft objects missing
parent objects missing
could not load tagged object
cannot read tag object
expected tag got %s
invalid 'type' value
refs/tags/%.*s
invalid 'tag' name: %.*s
object %s: %s
NUL_IN_HEADER
UNTERMINATED_HEADER
BAD_DATE
BAD_DATE_OVERFLOW
BAD_EMAIL
BAD_NAME
BAD_OBJECT_SHA1
BAD_PARENT_SHA1
BAD_TAG_OBJECT
BAD_TIMEZONE
BAD_TREE
BAD_TREE_SHA1
BAD_TYPE
DUPLICATE_ENTRIES
MISSING_AUTHOR
MISSING_COMMITTER
MISSING_EMAIL
MISSING_GRAFT
MISSING_NAME_BEFORE_EMAIL
MISSING_OBJECT
MISSING_PARENT
MISSING_SPACE_BEFORE_DATE
MISSING_SPACE_BEFORE_EMAIL
MISSING_TAG
MISSING_TAG_ENTRY
MISSING_TAG_OBJECT
MISSING_TREE
MISSING_TYPE
MISSING_TYPE_ENTRY
MULTIPLE_AUTHORS
TAG_OBJECT_NOT_TAG
TREE_NOT_SORTED
UNKNOWN_TYPE
ZERO_PADDED_DATE
BAD_FILEMODE
EMPTY_NAME
FULL_PATHNAME
HAS_DOT
HAS_DOTDOT
HAS_DOTGIT
ZERO_PADDED_FILEMODE
BAD_TAG_NAME
MISSING_TAGGER_ENTRY
Unknown fsck message type: '%s'
msg_id >= 0 && msg_id < FSCK_MSG_MAX
unterminated header: NUL at offset %ld
invalid author/committer line - missing space before email
invalid author/committer line - bad name
invalid author/committer line - missing email
invalid author/committer line - bad email
invalid author/committer line - missing space before date
invalid author/committer line - zero-padded date
invalid author/committer line - date causes integer overflow
invalid author/committer line - bad date
invalid author/committer line - bad time zone
in tree %s: entry %s has bad mode %.6o
contains entries pointing to null sha1
contains zero-padded file modes
contains duplicate file entries
invalid 'tree' line format - bad sha1
invalid 'parent' line format - bad sha1
invalid format - expected 'author' line
invalid format - multiple 'author' lines
could not load commit's tree %s
invalid 'object' line format - bad sha1
invalid format - unexpected end after 'type' line
unknown type '%d' (internal fsck error)
invalid format - expected 'tree' line
invalid format - expected 'committer' line
invalid format - expected 'object' line
invalid format - expected 'type' line
invalid format - expected 'tag' line
invalid format - expected 'tagger' line
append_msg_id
fsck_msg_type
LANGUAGE
POSIX
/usr/share/locale
GIT_TEXTDOMAINDIR
David_K
gedal
[GNUPG:] GOODSIG 
-----BEGIN PGP SIGNATURE-----
-----BEGIN PGP MESSAGE-----
user.signingkey
gpg.program
-bsau
could not run gpg.
gpg did not accept the data
gpg failed to sign the data
--status-fd=1
.git_vtag_tmpXXXXXX
[GNUPG:] BADSIG 
[GNUPG:] TRUST_NEVER
[GNUPG:] TRUST_UNDEFINED
could not create temporary file '%s': %s
failed writing detached signature to '%s': %s
graph.c
graph->num_parents >= 3
graph->revs->boundary
target * 2 <= i
graph->new_mapping[i] == -1
graph->new_mapping[i - 2] < 0
par_column
0 <= graph->expansion_row && graph->expansion_row < num_expansion_rows
graph->new_mapping[i - 1] > target
graph->new_mapping[i - 3] == target
graph_output_collapsing_line
graph_output_post_merge_line
graph_output_commit_char
graph_output_pre_commit_line
graph_next_line
diff_output_prefix_callback
unmatched parenthesis
not a pattern expression %s
In '%s' at %d, 
%s, 
%s'%s': %s
true
*and*
*not*
*or*
pattern_head
pattern_body
<head %d>
<body>
(not
(and
grep.c
regexp returned nonsense
Not a valid grep expression
'%s': short read %s
'%s': unable to read %s
BUG: invalid grep_source type
Binary file 
 matches
grep.extendedregexp
grep.patterntype
basic
extended
fixed
bad %s argument: %s
grep.fullname
color.grep
color.grep.context
color.grep.filename
color.grep.function
color.grep.linenumber
color.grep.matchcontext
color.grep.matchselected
color.grep.selected
color.grep.separator
color.grep.match
bug: unknown header field %d
bug: malformed header expr
x->node == GREP_NODE_OR
[all-match]
reflog 
--not not followed by pattern expression
--not followed by non pattern expression
--and not followed by pattern expression
pcre_exec failed with error code %d
p->field < ARRAY_SIZE(header_field)
Unexpected node type (internal error) %d
bug: unknown binary handling mode
BUG: attempt to textconv something without a path?
bug: a non-header pattern in grep header list.
incomplete pattern expression: %s
match_one_pattern
grep_splice_or
alias.
help.autocorrect
Did you mean one of these?
Did you mean this?
git version %s
%s: %s - %s
available git commands in '%s'
git commands available from elsewhere on your $PATH
These are common Git commands used in various situations:
Uh oh. Your system reports no Git commands at all.
WARNING: You called a Git command named '%s', which does not exist.
Continuing under the assumption that you meant '%s'
in %0.1f seconds automatically...
git: '%s' is not a git command. See 'git --help'.
start a working area (see also: git help tutorial)
work on the current change (see also: git help everyday)
examine the history and state (see also: git help revisions)
grow, mark and tweak your common history
collaborate (see also: git help workflows)
'%s' appears to be a git command, but we were not
able to execute it. Maybe git-%s is broken?
0123456789abcdef
Unknown
cannot get host name: %s
%s.(none)
/etc/mailname
cannot open /etc/mailname: %s
cannot read /etc/mailname: %s
user.name
user.email
*** Please tell me who you are.
  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"
to set your account's default identity.
Omit --global to set the identity only in this repository.
empty ident name (for <%s>) not allowed
unable to auto-detect name (got '%s')
unable to auto-detect email address (got '%s')
memory exhausted
Cannot read blob %s
line-log.c
out->nr == 0
d && line <= d->lines
d->spec && d->spec->data
src != dst
a <= b
pair->two->path
rg->path
pair->two->sha1_valid
o <= rs->nr
No commit specified?
malformed -L argument '%s'
%s%sdiff --git a/%s b/%s%s
%s%s+++ b/%s%s
rs->ranges[0].start < rs->ranges[0].end
rs->ranges[i-1].end < rs->ranges[i].start
rs->ranges[i].start < rs->ranges[i].end
rs->nr == 0 || rs->ranges[rs->nr-1].end <= a
More than one commit to dig from: %s and %s?
-L argument not 'start,end:file' or ':funcname:file': %s
There is no path %s in the commit
%s%s@@ -%ld,%ld +%ld,%ld @@%s
process_diff_filepair
process_all_files
move_diff_queue
queue_diffs
line_log_data_copy_one
line_log_data_copy
range_set_union
nth_line
range_set_check_invariants
sort_and_merge_range_set
range_set_append
range_set_append_unsafe
-L invalid empty range
-L invalid line number: %ld
line-range.c
*arg == ':'
-L parameter '%s': %s
-L parameter '%s' starting at line %ld: %s
-L parameter: regexec() failed: %s
-L parameter '%s' starting at line %ld: no match
-L parameter '%s' matches at EOF
parse_range_funcname
bad blob object
bad tree object
unknown pending object %s (%s)
ll-merge.c
merge.default
driver
%s: lacks value
conflict-marker-size
built-in binary merge
built-in 3-way text merge
built-in union merge
Cannot merge binary files: %s (%s vs. %s)
custom merge driver %s lacks command line.
ll_ext_merge
ll_binary_merge
ll_xdl_merge
ll_union_merge
Unable to create '%s.lock': %s.
If no other git process is currently running, this probably means a
git process crashed in this repository earlier. Make sure no other git
process is running and remove the file manually to continue.
Unable to create '%s.lock': %s
BUG: get_locked_file_path() called for malformed lock object
%s%.*s%s%s
malformed mergetag
merged tag '%s'
parent #%d, tagged '%s'
tag %s names a non-parent %s
No signature
remoteBranch
grafted
log-tree.c
cb_data == NULL
invalid replace ref %s
replaced
tag: 
v%d-
%04d-%s
References: 
attachment
Subject: [%s%s%0*d/%d] 
Subject: [%s] 
Message-Id: <%s>
In-Reply-To: <%s>
%s<%s>
 (from %s)
log size %i
object names
From %s Mon Sep 17 00:00:00 2001
%sMIME-Version: 1.0
Content-Type: multipart/mixed; boundary="%s%s"
This is a multi-part message in MIME format.
--%s%s
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit
--%s%s
Content-Type: text/x-patch; name="%s"
Content-Transfer-Encoding: 8bit
Content-Disposition: %s; filename="%s"
add_ref_decoration
cannot convert from %s to %s
mailinfo.
mailinfo.scissors
>From 
Content-Type
Too many boundaries to handle
charset=
quoted-printable
Content-Transfer-Encoding
Content-Type: 
boundary=
Message-Id
base64
>From
Subject
diff -
Index: 
Message-Id: %s
%s: %.*s
Author: %s
Email: %s
Detected mismatched boundaries, can't recover
From e6807f3efca28b30decfecb1732a56c7db1137ee Mon Sep 17 00:00:00 2001
HEAD:.mailmap
mailmap is not a blob: %s
unable to open mailmap at %s: %s
unable to read mailmap object at %s
# repo-abbrev:
merge-%s
failed to read the cache
.our
.their
Failed to execute internal merge
unsupported object type in the tree
addinfo_cache failed for path '%s'
Removing %s to make room for subdirectory
refusing to lose untracked file at '%s'
do not know what to do with %06o %s '%s'
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree.
CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree at %s.
%s is a directory in %s adding as %s instead
Skipped %s (merged same as existing)
CONFLICT (%s): Merge conflict in %s
BUG: There are unmerged index entries:
merging of trees %s and %s failed
CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s
CONFLICT (rename/rename): Rename "%s"->"%s" in branch "%s" rename "%s"->"%s" in "%s"%s
CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s
Renaming %s to %s and %s to %s instead
CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s
Fatal merge failure, shouldn't happen.
!pair2 == !dst_entry2
virtual %s
(bad commit)
cannot read object %s
object %s is not a blob
o_sha && a_sha
cannot read object %s '%s'
blob expected for %s '%s'
failed to create path '%s'%s
: perhaps a D/F conflict?
failed to symlink '%s'
add/add
Adding as %s instead
Auto-merging %s
Bug in merge-recursive.c
BUG: %d %.*s
Already up-to-date!
ren1_src != ren2_src
ren1_dst != ren2_dst
Adding merged %s
renamed
 (left unresolved)
Removing %s
modify
file/directory
directory/file
Adding %s
Unprocessed path??? %s
Merging:
found %u common ancestors:
found %u common ancestor:
Temporary merge branch 1
Temporary merge branch 2
merge returned no commit
merged common ancestors
merged tree
merge.renamelimit
merge.verbosity
GIT_MERGE_VERBOSITY
subtree=
diff-algorithm=
rename-threshold=
no-renormalize
blob_unchanged
setup_rename_conflict_info
notes.c
fanout < 20
!tws->next
note_path_len <= 40 + 19
prefix_len * 2 >= n
GET_PTR_TYPE(entry) == 0
tree && parent
list->strdup_strings
notes ref %s is invalid
notes.displayref
refs/notes/commits
!t->initialized
!display_notes_trees
GIT_NOTES_DISPLAY_REF
Notes:
Notes (%s):
tws->path[0] == '\0' && tws->path[1] == '\0'
memchr(path + 3 * n, '/', path_len - (3 * n)) == NULL
Could not read %s for notes-index
Failed to load %s %s into notes tree from %s
i == n && parent_stack[i] == tree
CLR_PTR_TYPE(parent->a[index]) == tree
GET_PTR_TYPE(*p) == PTR_TYPE_NOTE || GET_PTR_TYPE(*p) == PTR_TYPE_SUBTREE
path_len < FANOUT_PATH_MAX - 1
Failed to read notes tree referenced by %s (%s)
utf-8
format_display_notes
prune_notes
tree_write_stack_init_subtree
write_each_note_helper
write_each_note
write_notes_tree
construct_path_with_fanout
for_each_note_helper
for_each_note
get_note
remove_note
add_note
init_display_notes
note_tree_consolidate
note_tree_remove
note_tree_insert
load_subtree
init_notes
string_list_add_refs_by_glob
refs/notes/%s
update notes cache
notes-merge.c
p->one->mode == p->two->mode
!is_null_sha1(p->one->sha1)
!is_null_sha1(p->two->sha1)
NOTES_MERGE_WORKTREE/%s
found existing file at '%s'
notes-merge
notes-merge: disk full?
local version
remote version
o->local_ref && o->remote_ref
	local commit: %.7s
	remote commit: %.7s
One merge base found (%.7s)
!hashcmp(mp->obj, obj)
is_null_sha1(mp->remote)
is_null_sha1(mp->base)
		%.7s: %.7s -> %.7s/%.7s
			need content-level merge
Conflicts:
Auto-merging notes for %s
NOTES_MERGE_*
NOTES_MERGE_WORKTREE/.test
unable to create directory %s
!is_null_sha1(p->remote)
!is_null_sha1(p->local)
Using local notes for %s
Using remote notes for %s
Unknown strategy (%i).
could not open %s
Failed to stat '%s'
!strcmp(p->one->path, p->two->path)
unable to create directory for '%s'
cannot read note %s for object %s
blob expected in note %s for object %s
Merge result: %i unmerged notes and a dirty notes tree
Merge result: %i unmerged notes and a clean notes tree
!strcmp(o->local_ref, local_tree->ref)
notes_merge(o->local_ref = %s, o->remote_ref = %s)
Failed to resolve local notes ref '%s'
Could not parse local commit %s (%s)
Failed to resolve remote notes ref '%s'
Could not parse remote commit %s (%s)
Cannot merge empty notes ref (%s) into empty notes ref (%s)
No merge base found; doing history-less merge
Multiple merge bases found. Using the first (%.7s)
Merging remote commit %.7s into local commit %.7s with merge-base %.7s
	merge_from_diffs(base = %.7s, local = %.7s, remote = %.7s)
	diff_tree_remote(base = %.7s, remote = %.7s)
		Cannot merge entry '%s' (%c): %.7s -> %.7s. Skipping!
!"Invalid existing change recorded"
		Stored remote change for %s: %.7s -> %.7s
	diff_tree_local(len = %i, base = %.7s, local = %.7s)
	merge_changes(num_changes = %i)
		Ignoring local-only change for %s: %.7s -> %.7s
is_null_sha1(mp->local) || !hashcmp(mp->local, uninitialized)
!hashcmp(p->one->sha1, mp->base)
!hashcmp(mp->local, uninitialized)
		Stored local change for %s: %.7s -> %.7s
			skipping (no remote change)
			skipping (local == remote)
			no local change, adopted remote
			merge_one_change_manual(obj = %.7s, base = %.7s, local = %.7s, remote = %.7s)
You have not concluded your previous notes merge (%s exists).
Please, use 'git notes merge --commit' or 'git notes merge --abort' to commit/abort the previous merge before you start a new notes merge.
You have not concluded your notes merge (%s exists).
missing '%s'. This should not happen
CONFLICT (delete/modify): Notes for object %s deleted in %s and modified in %s. Version from %s left in tree.
CONFLICT (%s): Merge conflict in notes for object %s
			removing from partial merge result
Concatenating local and remote notes for %s
failed to concatenate notes (combine_notes_concatenate)
Concatenating unique lines in local and remote notes for %s
failed to concatenate notes (combine_notes_cat_sort_uniq)
notes_merge(): result = %i, result_sha1 = %.7s
Committing notes in notes merge worktree at %s
partial notes commit has empty message
Skipping non-SHA1 entry '%s%s'
Failed to write blob object from '%s'
Failed to add resolved note '%s' to notes tree
Added resolved note for object %s: %s
Finalized notes merge commit: %s
Removing notes merge worktree at %s/*
merge_one_change_manual
diff_tree_local
verify_notes_filepair
diff_tree_remote
notes_merge
concatenate
cat_sort_uniq
notes.rewrite.
notes.rewritemode
notes.rewriteref
notes-utils.c
manual
GIT_NOTES_REWRITE_MODE
GIT_NOTES_REWRITE_REF
Bad %s value: '%s'
Bad notes.rewriteMode value: '%s'
Refusing to rewrite notes in %s (outside of refs/notes/)
Failed to write notes tree to database
Failed to find/parse commit %s
Failed to commit notes tree to database
Cannot commit uninitialized/unreferenced notes tree
create_notes_commit
invalid object type "%s"
object %s is a %s, not a %s
sha1 mismatch %s
unable to parse object: %s
object %s has unknown type id %d
Object not in bitmap: %s
pack-bitmap.c
%.*s.bitmap
Corrupted bitmap pack index
bad tag
bitmap_git.result
failed to load bitmap indexes
Verifying bitmap entries
Mismatch!
Reusing bitmaps
Failed to load bitmap index (corrupted?)
!bitmap_git.map && !bitmap_git.loaded
ignoring extra bitmap file: %s
Corrupted bitmap index (missing header data)
Corrupted bitmap index file (wrong header)
Unsupported version for bitmap index file (%d)
Unsupported options for bitmap index file (Git requires BITMAP_OPT_FULL_DAG)
BUG: pack_name does not end in .pack
Invalid XOR offset in bitmap pack index
Duplicate entry in bitmap index: %s
bitmap_git.map && !bitmap_git.loaded
BUG: failed to perform bitmap walk
you must specify exactly one commit to test
Bitmap v%d test (%d entries loaded)
Commit %s doesn't have an indexed bitmap
Found bitmap for %s. %d bits / %08x checksum
count_bitmap_commit_list
traverse_bitmap_commit_list
reuse_partial_packfile_from_bitmap
load_pack_bitmap
open_pack_bitmap
BITM
?Failed to write bitmap index. Packfile doesn't have full closure (object %s is missing)
Missing type information for %s (%d/%d)
Duplicate entry when writing index: %s
BUG: trying to write commit not in index
unable to make temporary bitmap file readable
unable to rename temporary bitmap file to '%s'
Building bitmaps
Selecting bitmap commits
pack/tmp_bitmap_XXXXXX
Failed to write bitmap index
BITM
?packfile %s index not opened
%s SHA1 checksum mismatch
packed %s from %s is corrupt
Packfile index for %s SHA1 mismatch
%s SHA1 does not match its index
internal error pack-check nth-packed-object
index CRC mismatch for object %s from %s at offset %lu
cannot unpack %s from %s at offset %lu
BUG: Duplicate object in hash
internal error: pack revindex fubar
bad offset for revindex
pack-write.c
index_name
pack/tmp_idx_XXXXXX
Failed to checksum '%s'
keep	
bad type %d
The same object %s appears twice in the pack
Failed seeking to start of '%s'
Unable to reread header of '%s'
Unexpected checksum for %s (disk corruption?)
unable to make temporary pack file readable
unable to make temporary index file readable
unable to rename temporary pack file
unable to rename temporary index file
write_idx_file
COLUMNS
LESS
LESS=FRX
LV=-c
GIT_PAGER_IN_USE
pager.%s
[=%s]
[<%s>]
 <%s>
[=<%s>]
cat <<\EOF
usage: %s
   or: %s
-NUM
%*s%s
BUG: switch '%c' (--%s) %s
BUG: option '%s' %s
BUG: switch '%c' %s
invalid short name
short name already used
should not accept an argument
switch `%c' %s
option `no-%s' %s
option `%s' %s
takes no value
isn't available
: incompatible with %s
expects a numerical value
help-all
unknown option `%s'
unknown switch `%c'
did you mean `--%s` (with two dashes ?)
STOP_AT_NON_OPTION and KEEP_UNKNOWN don't go together
uses incompatible flags LASTARG_DEFAULT and OPTARG
uses feature not supported for dashless options
multi-word argh should use dash to separate words
: incompatible with something else
expects a non-negative integer value with an optional k/m/g suffix
should not happen, someone must be hit on the forehead
Ambiguous option: %s (could be --%s%s or --%s%s)
unknown non-ascii option in string: `%s'
--no-
malformed object name %s
malformed object name '%s'
expects "always", "auto", or "never"
unexpected delta opcode 0
delta replay has gone wild
git~1
path.c
XDG_CONFIG_HOME
%s/git/%s
%s/.config/git/%s
REVERT_HEAD
hooks
info/sparse-checkout
logs/HEAD
logs/refs/bisect
rr-cache
Could not make %s writable by group
xdg_config_home
BUG: PATHSPEC_PREFER_CWD and PATHSPEC_PREFER_FULL are incompatible
BUG: PATHSPEC_PREFER_CWD requires arguments
global 'glob' and 'noglob' pathspec settings are incompatible
global 'literal' pathspec setting is incompatible with all other global pathspec settings
invalid parameter for pathspec magic 'prefix'
Missing ')' at the end of pathspec magic in '%s'
BUG: 'prefix' magic is supposed to be used at worktree's root
%s: 'literal' and 'glob' are incompatible
%s: '%s' is outside repository
Pathspec '%s' is in submodule '%.*s'
item->nowildcard_len <= item->len && item->prefix <= item->len
%s: pathspec magic not supported by this command: %s
pathspec '%s' is beyond a symbolic link
There is nothing to exclude from by :(exclude) patterns.
Perhaps you forgot to add either ':/' or '.' ?
BUG: PATHSPEC_MAXDEPTH_VALID and PATHSPEC_KEEP_ORDER are incompatible
Invalid pathspec magic '%.*s' in '%s'
Unimplemented pathspec magic '%c' in '%s'
prefix:
,prefix:%d)
:(prefix:%d)
pathspec.c
literal
glob
icase
prefix_pathspec
BUG: multiple sources given to packet_read
The remote end hung up unexpectedly
protocol error: impossibly long line
protocol error: bad line length character: %.4s
protocol error: bad line length %d
PACK ...
sideband
PACK
packet: %12s%c 
pkt-line.c
0000
GIT_TRACE_PACKFILE
GIT_TRACE_PACKET
0123456789abcdef
unable to create threaded lstat
unable to join threaded lstat
pretty.
tformat:
=%02X
 =?%s?q?
fuller
invalid --pretty format: %s
%s: %.*s%.*s <%.*s>
Date:   %s
%sDate: %s
auto,
(auto)
ltrunc)
mtrunc)
bad parent line in commit
Merge:
Commit
Author
invalid --pretty format: '%s' references an alias which points to itself
unable to parse --pretty format
MIME-Version: 1.0
Content-Type: text/plain; charset=%s
Content-Transfer-Encoding: 8bit
BUG: prio_queue_reverse() on non-LIFO queue
%s: %3u%% (%u/%u)%s%s
%s: %u%s%s
, %s.
terminal prompts disabled
GIT_ASKPASS
SSH_ASKPASS
GIT_TERMINAL_PROMPT
could not read %s%s
unable to read askpass response from '%s'
Too many or long arguments
abtnvfr
symbolic ref is dangling: %s
unable to lookup %s
unable to stat %s: %s
unable to mark recent objects
unable to get object info for %s
unknown object type for %s: %s
internal error: ce_mode is %o
GIT_INDEX_VERSION
index.version
GIT_TEST_SPLIT_INDEX
GIT_ALLOW_NULL_SHA1
read-cache.c
unable to index file %s
unable to add %s to index
add '%s'
unable to stat '%s'
A	%s
T	%s
D	%s
M	%s
U	%s
%s needs update
%s: needs update
%s: needs merge
%s: index file open failed
cannot stat the open index
unable to map index file
bad signature
bad index version %d
bad index file sha1 signature
ignoring %.4s extension
sharedindex_XXXXXX
%s: cannot drop to stage #0
unordered stage entries in index
multiple stage entries for merged file '%s'
unordered stage entries for '%s'
index.version set, but the value is invalid.
Using version %i
GIT_INDEX_VERSION set, but the value is invalid.
Using version %i
(flags & (COMMIT_LOCK | CLOSE_LOCK)) != (COMMIT_LOCK | CLOSE_LOCK)
cannot create an empty blob in the object database
'%s' appears as both a file and as a directory
%s: can only add regular files, symbolic links or git-directories
Will not add file alias '%s' ('%s' already exists in index)
index file smaller than expected
Unknown index entry format %08x
malformed name field in the index
index uses %.4s extension, which we do not understand
broken index, expect %s in %s, got %s
cache entry has null sha1: %s
do_write_locked_index
Cannot walk reflogs for %s
%s@{
Reflog: %s (%s)
Reflog message: %s
Log for ref %s has gap after %s.
Log for ref %s unexpectedly ended on %s.
BUG: update called for transaction that is not open
refusing to update ref with bad name %s
BUG: create called without valid new_sha1
BUG: delete called with old_sha1 set to zeros
Unexpected sha1 when deleting %s
BUG: verify called with old_sha1 set to NULL
Could not open '%s' for writing: %s
Unexpected sha1 when writing %s
update_ref failed for ref '%s': %s
%sHEAD
ignoring dangling symref %s.
ignoring broken ref %s.
Log for %s is empty.
refs.c
could not read ref '%s'
offset < total_len
transfer.hiderefs
refs/%.*s
refs/heads/%.*s
refs/remotes/%.*s
refs/remotes/%.*s/HEAD
shorten_unambiguous_ref
ref_transaction_update
ref_transaction_begin
Couldn't write %s
unable to append to %s: %s
would prune %s
%s %s %s %lu %+05d	%s
keep %s
Duplicated ref: %s
refs/files-backend.c
bad ref for %s
entry->flag & REF_DIR
# pack-refs with:
 peeled 
 fully-peeled 
core.packedrefstimeout
dir->sorted == dir->nr
dir1->sorted == dir1->nr
dir2->sorted == dir2->nr
GIT_REF_PARANOIA
can't verify ref %s
%srefs/
could not remove reference %s
Couldn't set %s
reflog for %s is a symlink
refname %s not found
logs/refs/.tmp-renamed-log
unable to delete old %s
Directory not empty: %s
unable to delete existing %s
Directory not empty: logs/%s
ref: %s
refname too long: %s
Unable to open %s for writing
Unable to write to %s
Unable to create %s
cannot lock ref '%s': %s
Couldn't close %s.lock
cannot fdopen %s (%s)
couldn't write %s: %s
couldn't write %s
couldn't set %s
Trying to write ref %s with nonexistent object %s
Trying to write non-commit object %s to branch %s
unable to create directory for %s: %s
There are still logs under '%s'
internal error: packed-ref cache cleared while locked
Reference directory conflict: %s
Duplicated ref, and SHA1s don't match: %s
internal error: %s is not a valid packed reference!
Multiple updates for ref '%s' not allowed.
%s does not point to a valid object!
Reference has invalid format: '%s'
loose refname is dangerous: %s
internal error peeling reference %s (%s)
packed refname is dangerous: %s
internal error: packed-refs not locked
unable to fdopen packed-refs descriptor
unable to overwrite old ref-pack file: %s
'%s' exists; cannot create '%s'
cannot process '%s' and '%s' at the same time
conflict between reference and directory: %s
there are still refs under '%s'
unable to resolve reference %s: %s
unable to create directory for %s
ref %s is at %s but expected %s
could not delete reference %s: %s
could not delete references: %s
Cannot update the ref '%s': %s
refname %s is a symbolic ref, renaming it is not supported
unable to move logfile logs/%s to logs/refs/.tmp-renamed-log: %s
unable to move logfile logs/refs/.tmp-renamed-log to logs/%s: %s
unable to rename '%s' to '%s': %s
unable to write current sha1 into %s: %s
unable to lock %s for rollback: %s
unable to restore logfile %s from %s: %s
unable to restore logfile %s from logs/refs/.tmp-renamed-log: %s
no symlink - falling back to symbolic ref
Unable to fix permissions on %s
cannot seek back reflog for %s: %s
cannot read %d bytes from reflog for %s: %s
BUG: reverse reflog parser had leftover data
BUG: commit called for transaction that is not open
cannot update the ref '%s': %s
unable to overwrite old ref-pack file
BUG: initial ref transaction called with existing refs
BUG: initial ref transaction with old_sha1 set
unable to lock packed-refs file: %s
internal error: packed refs not locked
unable to commit packed-refs file: %s
unable to write reflog '%s' (%s)
initial_ref_transaction_commit
ref_update_reject_duplicates
ref_transaction_commit
lock_ref_sha1_basic
verify_refname_available_dir
repack_without_refs
do_for_each_entry_in_dir
do_for_each_entry_in_dirs
get_ref_dir
# pack-refs with: peeled fully-peeled 
objectname:short
ignoring broken ref %s
malformed object at '%s'
contents:lines=
contents:subject
contents:body
contents:signature
    
creatordate
creator
numparent
Eh?  Object of type %d?
,symref
,packed
align
strip=
unable to parse format
flag
middle
trackshort
ref-filter.c
unknown %.*s format %s
%s^{}
missing object %s for %s
left
malformed field name: %.*s
unknown field name: %.*s
color:
malformed format string %s
filter_refs: invalid type
format: %%(end) atom missing
must point to a commit
authorname
authoremail
authordate
committername
committeremail
committerdate
taggername
taggeremail
taggerdate
refname
populate_value
format: %%(end) atom used without corresponding atom
ignoring ref with broken name %s
positive value expected contents:lines=%s
expected format: %%(color:<color>)
expected format: %%(align:<width>,<position>)
positive width expected with the %%(align) atom
improper format entered align:%s
:strip= requires a positive integer argument
ref '%s' does not have %ld components to :strip
parse_object_buffer failed on %s for %s
BUG: couldn't parse 'reset' as a color
Invalid refspec '%s'
remote.c
replaced == NULL
.pushremote
url.
.insteadof
.pushinsteadof
remote.
pushdefault
.skipdefaultupdate
.skipfetchall
.receivepack
.uploadpack
.proxy
.vcs
URL:
Push:
Pull:
refs/heads/%s:refs/heads/%s
HEAD:refs/heads/%s
%s usually tracks %s, not %s
%s tracks both %s and %s
Internal error
no such branch: '%s'
BUG: unhandled push situation
Couldn't find remote ref %s
--left-right
%s...%s
Key '%s' of pattern had no '*'
Value '%s' of pattern has no '*'
Config remote shorthand cannot begin with '/': %s
more than one receivepack given, using the first
more than one uploadpack given, using the first
query_refspecs_multiple: need either src or dst
Cannot fetch both %s and %s to %s
query_refspecs: need either src or dst
push destination '%s' on remote '%s' has no local tracking branch
src refspec %s matches more than one.
src refspec %s does not match any.
%s cannot be resolved to branch.
unable to delete '%s': remote ref does not exist
unable to push to unqualified destination: %s
The destination refspec neither matches an existing ref on the remote nor
begins with refs/, and we are unable to guess a prefix based on the source ref.
dst refspec %s matches more than one.
dst ref %s receives from more than one src.
HEAD does not point to a branch
no upstream configured for branch '%s'
upstream branch '%s' not stored as a remote-tracking branch
branch '%s' has no remote for pushing
push refspecs for '%s' do not include '%s'
push has no destination (push.default is 'nothing')
cannot resolve 'simple' push to a single destination
* Ignoring funny ref '%s' locally
  (use "git branch --unset-upstream" to fixup)
Your branch is up-to-date with '%s'.
Your branch is ahead of '%s' by %d commits.
Your branch is ahead of '%s' by %d commit.
  (use "git push" to publish your local commits)
  (use "git pull" to update your local branch)
Your branch and '%s' have diverged,
and have %d and %d different commits each, respectively.
Your branch and '%s' have diverged,
and have %d and %d different commit each, respectively.
  (use "git pull" to merge the remote branch into yours)
Your branch is based on '%s', but the upstream is gone.
Your branch is behind '%s' by %d commits, and can be fast-forwarded.
Your branch is behind '%s' by %d commit, and can be fast-forwarded.
cannot parse expected object name '%s'
make_remote
bad replace ref name: %s
duplicate replace ref: %s
replace depth too high for object %s
Could not read index
postimage
rr-cache/%s/%s
rerere.c
%s	%s%c
unable to write rerere record
thisimage
rr-cache/%s
Could not open %s
Could not write %s
Failed to flush %s: %s
rerere.enabled
rerere.autoupdate
Could not create directory %s
corrupt MERGE_RR
Recorded preimage for '%s'
Could not open %s: %s
Could not write %s: %s
Writing %s failed: %s
cannot unlink %s: %s
Updated preimage for '%s'
Forgot resolution for %s
gc.rerereresolved
gc.rerereunresolved
rr->items[i].util != RERERE_RESOLVED
There were errors while writing %s (%s)
Could not parse conflict hunks in %s
Resolved '%s' using previous resolution.
Recorded resolution for '%s'.
Staged '%s' using previous resolution.
Could not parse conflict hunks in '%s'
no remembered resolution for %s
unable to open rr-cache directory
write_rr
%o%c
cannot unmerge '%s'
Index records invalid resolve-undo information
update_treesame %s
bad object %s
compact_treesame %u
bad tree %s
refs/bisect/%s
--do-walk
--no-walk=
max-count
max-age
since
after
min-age
before
until
--first-parent
--ancestry-path
--walk-reflogs
bad --default argument
--simplify-merges
--simplify-by-decoration
--author-date-order
--early-output
--show-all
--remove-empty
--merges
--left-only
--right-only
--cherry
--count
--cherry-mark
--cherry-pick
--verify-objects
--unpacked=
--cc
--pretty=
--format=
--show-notes
--notes
--show-signature
--show-linear-break
--show-linear-break=
--show-notes=
--notes=
--standard-notes
--no-standard-notes
--oneline
--graph
--root
--no-commit-id
--no-abbrev
--abbrev-commit
--no-abbrev-commit
--full-diff
--full-history
--relative-date
--log-size
grep-reflog
--grep-debug
--basic-regexp
--extended-regexp
--regexp-ignore-case
--perl-regexp
--all-match
--invert-grep
--fixed-strings
Invalid revision range %s
unsorted
invalid argument to --no-walk
--stdin given twice?
--merge without HEAD?
--merge without MERGE_HEAD?
%s is unknown object
treesame
compact_treesame parents mismatch
reflog of '%s' references pruned commits
'%s': not a non-negative integer
--left-only is incompatible with --right-only or --cherry
--right-only is incompatible with --left-only
--cherry is incompatible with --left-only
--cherry-mark is incompatible with --cherry-pick
--cherry-pick is incompatible with --cherry-mark
--unpacked=<packfile> no longer supported.
                    ..........
--show-linear-break and --graph are incompatible
cannot simplify commit %s (because of %s)
cannot simplify commit %s (invalid %s)
bad tree compare for commit %s
unable to add index blob to traversal
Invalid symmetric difference expression %s
options not supported in --stdin mode
your current branch appears to be broken
your current branch '%s' does not have any commits yet
cannot combine --reverse with --walk-reflogs
cannot combine --parents and --children
cannot combine --reverse with --graph
cannot combine --walk-reflogs with --graph
cannot combine --no-walk with --graph
cannot use --grep-reflog without --walk-reflogs
--first-parent is incompatible with --bisect
--ancestry-path given but there are no bottom commits
mark_redundant_parents %d %d %d %d
Failed to traverse parents of commit %s
Failed to simplify parents of commit %s
HEAD
waitpid for %s failed: %s
waitpid is confused (%s)
%s died of signal %d
fatal: 
open /dev/null failed
standard output
standard error
trace: run_command:
run-command.c
dup2(%d,%d) failed
exec '%s': cd to '%s' failed
BUG: shell command is empty
|&;<>()$`\"' 	
*?[#~=%
%s "$@"
cannot run %s: %s
cannot exec '%s'
cannot fork() for %s: %s
cannot create pipe: %s
cannot create thread: %s
pthread_join failed
hooks/%s
cannot create %s pipe for %s: %s
BUG: run_command with a pipe can cause deadlock
send-pack: send refs
shallow %s
delete-refs
no-thin
 report-status
certificate version 0.1
pusher %s 
pushee %s
nonce %s
push-cert%c%s
%s %s %s%c%s
--revs
--progress
--shallow
git pack-objects failed
unpack 
did not receive remote status
unpack ok
unpack failed: %s
the receiving end asked to sign an invalid nonce <%.*s>
the receiving end does not support --signed push
not sending a push certificate since the receiving end does not support --signed push
No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
the receiving end does not support --atomic push
failed to sign the push certificate
atomic push failed for ref %s. status: %d
send-pack: unable to fork off sideband demultiplexer
invalid ref status from remote: %s
remote reported status on unknown ref: %s
remote reported status on unexpected ref: %s
Error wrapping up %s
options.no-commit
options.edit
options.signoff
options.record-origin
options.allow-ff
options.mainline
options.strategy
options.gpg-sign
options.strategy-option
Invalid key: %s
(empty tree)
Your index file is unmerged.
%s: fast-forward
parent of %s
Revert "
This reverts commit 
, reversing
changes made to 
could not revert %s... %s
could not apply %s... %s
GIT_CHERRY_PICK_HELP
Unable to update cache tree
Could not parse commit %s
-S%s
--cleanup=verbatim
--allow-empty
--allow-empty-message
sequencer.c
sequencer/todo
%s %s %.*s
Error wrapping up %s.
opts->revs
sequencer/head
cannot resolve HEAD
unexpected end of file
cannot read %s: %s
sequencer/opts
Malformed options sheet: %s
Could not read %s.
Cannot %s during a %s
Could not parse line %d.
No commits parsed.
%s: can't cherry-pick a %s
%s: bad revision
empty commit set passed
git %s: failed to read the index
git %s: failed to refresh the index
no cherry-pick or revert in progress
Your local changes would be overwritten by cherry-pick.
Your local changes would be overwritten by revert.
Commit your changes or stash them to proceed.
Commit %s is a merge but no -m option was given.
Commit %s does not have parent %d
Mainline was specified but commit %s is not a merge.
%s: cannot parse parent commit %s
%s: Unable to write new index file
after resolving the conflicts, mark the corrected paths
with 'git add <paths>' or 'git rm <paths>'
after resolving the conflicts, mark the corrected paths
with 'git add <paths>' or 'git rm <paths>'
and commit the result with 'git commit'
Could not resolve HEAD commit
Could not parse parent commit %s
!(opts->signoff || opts->no_commit || opts->record_origin || opts->edit)
cannot abort from a branch yet to be born
stored pre-cherry-pick HEAD file '%s' is corrupt
Unusable instruction sheet: %s
BUG: expected exactly one commit from walk
a cherry-pick or revert is already in progress
try "git cherry-pick (--continue | --quit | --abort)"
Could not create sequencer directory %s
Can't revert as initial commit
Can't cherry-pick into empty head
pick_commits
sequencer_pick_revisions
(cherry picked from commit 
Signed-off-by: 
%s	%s^{}
%s_XXXXXX
unable to update %s: %s
unrecognized: %s
P %s
info/refs
%s/info/packs
info/rev-cache
bad flag '%s' used after filename
%s: no such path in the working tree.
Use 'git <command> -- <path>...' to specify paths that do not exist locally.
ambiguous argument '%s': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
Expected git repo version <= %d, found %d
unknown repository extension: %s
ambiguous argument '%s': both revision and filename
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
unable to set up work tree using invalid config
This operation must be run in a work tree
Too large to be a .git file: '%s'
core.bare and core.worktree do not make sense
Unable to read current working directory
GIT_DISCOVERY_ACROSS_FILESYSTEM
Not a git repository (or any of the parent directories): %s
Not a git repository (or any parent up to mount point %s)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Problem with core.sharedRepository filemode value (0%.3o).
The owner of files must always have read and write permissions.
'%s' is outside repository
failed to read %s
Please upgrade Git
%.*s%.*s
Error opening '%s'
Error reading %s
Invalid gitfile format: %s
No path in gitfile: %s
Not a git repository: %s
setup.c
orig_path_len != 0
'$%s' too big
Not a git repository: '%s'
Could not chdir to '%s'
Could not come back to cwd
GIT_CEILING_DIRECTORIES
failed to stat '%*s%s%s'
Cannot change to '%s/..'
group
world
everybody
extensions.
preciousobjects
noop
open /dev/null or dup failed
setsid failed
is_nonbare_repository_dir
BUG: assertion failed in binary search
ofs %u lov %x, hiv %x, kyv %x
assertion failure lo %u mi %u hi %u %s
GIT_DEBUG_LOOKUP
sha1-lookup.c
lov < hiv
lo %u hi %u rg %u mi %u 
sha1_entry_pos
invalid object type
%s/pack/pack-%s.%s
GIT_MMAP_LIMIT
mmap failed
%s/info/alternates
index file %s is too small
non-monotonic index %s
%.*s.idx
packfile %s index unavailable
packfile %s size changed
cannot set FD_CLOEXEC
file %s is not a GIT packfile
object file %s is empty
bad object header
corrupt loose object '%s'
GIT_USE_LOOKUP
lo %u hi %u rg %u mi %u
I am totally screwed
%s %lu
sha1_file.c
unable to unpack %s header
unable to parse %s header
failed to read object %s
/tmp_obj_XXXXXX
file write error (%s)
unable to write sha1 file
error when closing sha1 file
corrupt commit
corrupt tag
cannot read sha1_file for %s
open("%s"): %s
readlink("%s"): %s
%s: unsupported file type
%s is not a valid object
/%02x
unable to open %s: %s
%02x%s
GIT_TRACE_PACK_ACCESS
insanely long object directory %s
pack_report: getpagesize()            = %10lu
pack_report: core.packedGitWindowSize = %10lu
pack_report: core.packedGitLimit      = %10lu
pack_report: pack_used_ctr            = %10u
pack_report: pack_mmap_calls          = %10u
pack_report: pack_open_windows        = %10u / %10u
pack_report: pack_mapped              = %10lu / %10lu
attempting to mmap %lu over limit %lu
pack '%s' still has open windows to it
BUG! Want to close pack marked 'do-not-close'
unable to open object pack directory: %s: %s
%s: ignoring alternate object stores, nesting too deep.
%s: ignoring relative alternate object store %s
object directory %s does not exist; check .git/objects/info/alternates.
unable to fdopen alternates lockfile
unable to read alternates file
unable to move new alternates file into place
index file %s is version %u and is not supported by this binary (try upgrading GIT to a newer version)
wrong index v1 file size in %s
wrong index v2 file size in %s
packfile %s not a regular file
cannot determine file descriptor flags
file %s is far too short to be a packfile
packfile %s is version %u and not supported (try upgrading GIT to a newer version)
packfile %s claims to have %u objects while index indicates %u objects
end of packfile %s is unavailable
packfile %s signature is unavailable
packfile %s does not match index
packfile %s cannot be accessed
offset beyond end of packfile (truncated pack?)
offset before end of packfile (broken .idx?)
garbage at end of loose object '%s'
delta data unpack-initial failed
offset before start of pack index for %s (corrupt index?)
offset beyond end of pack index for %s (truncated index?)
%02x%02x%02x... lo %u hi %u nr %u
failed to read object %s at offset %lu from %s
failed to validate delta base reference at offset %lu from %s
BUG in unpack_entry: left loop at a valid delta
unknown object type %i at offset %lu in %s
failed to read delta base object %s at offset %lu from %s
failed to unpack compressed delta at offset %lu from %s
unable to parse %s header with --allow-unknown-type
unable to unpack %s header with --allow-unknown-type
replacement %s not found for %s
loose object %s (stored in %s) is corrupt
packed object %s (stored in %s) is corrupt
unable to write sha1 filename %s: %s
unable to set permission to '%s'
insufficient permission for adding an object to repository database %s
unable to create temporary file: %s
unable to deflate new object %s (%d)
deflateEnd on object %s failed (%d)
confused by unstable object source data for %s
would_convert_to_git_filter_fd(path)
%s: failed to insert into database
unable to get sha1 of object %u in %s
index_stream_convert_blob
0123456789abcdef
%.2s
%.2s/
short SHA1 %.*s is ambiguous.
@{push}
@{upstream}
@{u}
checkout: moving from 
commit}
tag}
tree}
blob}
object}
refname '%.*s' is ambiguous.
Invalid object name '%.*s'.
BUG: startup_info struct is not initialized.
relative path syntax can't be used outside working tree.
%.*s: expected %s type, but the object dereferences to %s type
Git normally never creates a ref that ends with 40 hex characters
because it will be ignored when you just specify 40-hex. These refs
may be created by mistake. For example,
  git checkout -b $br $(git rev-parse ...)
where "$br" is somehow empty and a 40-hex ref is created. Please
examine these refs and maybe delete them. Turn this message off by
running "git config advice.objectNameWarning false"
Log for '%.*s' only goes back to %s.
Log for '%.*s' only has %d entries.
Path '%s' is in the index, but not at stage %d.
Did you mean ':%d:%s'?
Path '%s' is in the index, but not '%s'.
Did you mean ':%d:%s' aka ':%d:./%s'?
Path '%s' exists on disk, but not in the index.
Path '%s' does not exist (neither on disk nor in the index).
Path '%s' exists on disk, but not in '%.*s'.
Path '%s' exists, but not '%s'.
Did you mean '%.*s:%s' aka '%.*s:./%s'?
Path '%s' does not exist in '%.*s'
BUG: incompatible flags for get_sha1_with_context
BUG: shallow must be initialized by now
shallow file has changed since we read it
Removing %s from .git/shallow
BUG: is_repository_shallow must not be called before set_alternate_shallow_file
shallow: prepare_shallow_info
shallow: remove_nonexistent_theirs_shallow
shallow: assign_shallow_commits_to_refs
shallow %s
bad shallow line: %s
shallow_XXXXXX
failed to write to %s
shallow.c
shallow: post_assign_shallow
GIT_TRACE_SHALLOW
        
%04x
%s: protocol error: no band designator
%s: protocol error: bad band #%d
BUG: signal out of range: %d
position for delete %d exceeds base index size %d
position for replacement %d exceeds base index size %d
too many replacements (%d vs %d)
entry %d is marked as both replaced and deleted
corrupt link extension, entry %d should have zero length name
corrupt link extension (too short)
corrupt delete bitmap in link extension
corrupt replace bitmap in link extension
garbage at the end of link extension
corrupt link extension, entry %d should have non-zero length name
!(ce->ce_flags & CE_STRIP_NAME)
split-index.c
prepare_to_write_split_index
you want to use way too much memory
`pos' is too far after the end of the buffer
`pos + len' is too far after the end of the buffer
BUG: your vsnprintf is broken (returned %d)
BUG: your vsnprintf is broken (insatiable)
Out of memory, getdelim failed
strbuf.c
r == -1
"<>&
&quot;
&lt;
&gt;
&amp;
%%%02x
%u.%2.2u GiB
%u.%2.2u MiB
%u.%2.2u KiB
%u bytes
strbuf_getwholeline
%s:%p
internal error in string_list_split(): list->strdup_strings must be set
internal error in string_list_split_in_place(): list->strdup_strings must not be set
 %h: %m %s
fetch.recursesubmodules
/.gitmodules
(submodule deleted)
(not checked out)
(new submodule)
(commits not present)
(revision walker failed)
 (rewind)
%s%sSubmodule %s %s..
%s:%s
--remotes=%s
Pushing submodule '%s'
%s%s/
Fetching submodule %s%s
--submodule-prefix
--porcelain
-uno
foreach
test -f .git
--ignore-submodules=none
not checked out
commits not present
not fast-forward
multiple merges found
%s/config
Could not run 'git rev-list %s --not --remotes -n 1' command in submodule %s
Cannot change unmerged .gitmodules, resolve merge conflicts first
Could not find section in .gitmodules where path=%s
Could not update .gitmodules entry %s
Could not remove .gitmodules entry for %s
staging updated .gitmodules failed
bad --ignore-submodules argument: %s
%sSubmodule %s contains untracked content
%sSubmodule %s contains modified content
Unable to push submodule '%s'
Could not run 'git status --porcelain' in submodule %s
'git status --porcelain' failed in submodule %s
Could not run 'git status --porcelain -uall --ignore-submodules=none' in submodule %s
'git status --porcelain -uall --ignore-submodules=none' failed in submodule %s
Failed to merge submodule %s (%s)
commits don't follow merge-base
merge following commits not found
Found a possible merge resolution for the submodule:
If this is correct simply add it to the index for example
by using:
  git update-index --cacheinfo 160000 %s "%s"
which will accept this suggestion.
  %m %s
fetchrecursesubmodules
%s:.gitmodules
%s:.gitmodules, multiple configurations found for 'submodule.%s.%s'. Skipping second one!
Invalid parameter '%s' for config option 'submodule.%s.ignore'
missing object referenced by '%.*s'
Unknown type %s
Object %s not a tag
core.gitproxy
 for 
9418
Unable to look up %s
Looking up %s ... 
%s[%d: %s:%s]: %s
%s[%d: %s]: errno=%s
unable to connect to %s:
GIT_PROXY_COMMAND
strange port '%s' blocked
cannot start proxy %s
unable to set SO_KEEPALIVE on socket: %s
done.
Connecting to %s (port %s) ... 
BUG: prepare_tempfile_object called for active object
BUG: prepare_tempfile_object called for improperly-reset object
Unable to create temporary file '%s'
BUG: fdopen_tempfile() called for inactive object
BUG: fdopen_tempfile() called for open object
BUG: get_tempfile_path() called for inactive object
BUG: get_tempfile_fd() called for inactive object
BUG: get_tempfile_fp() called for inactive object
BUG: reopen_tempfile called for an open object
BUG: reopen_tempfile called for an inactive object
cannot fix permission bits on %s
BUG: rename_tempfile called for inactive object
/tmp
TMPDIR
%02d:%02d:%02d.%06ld 
%s:%d 
performance: %.9f s
setup: git_dir: %s
trace.c
setup: git_common_dir: %s
setup: worktree: %s
setup: cwd: %s
setup: prefix: %s
git command:%s
GIT_TRACE_SETUP
GIT_TRACE_BARE
GIT_TRACE
GIT_TRACE_PERFORMANCE
Could not open '%s' for tracing: %s
Defaulting to tracing on stderr...
What does '%s' for %s mean?
If you want to trace into a file, then please set %s to an absolute pathname (starting with /).
Defaulting to tracing on stderr...
Could not trace into fd given by GIT_TRACE environment variable
AaddIfDifferent
addIfDifferentNeighbor
doNothing
$ARG
trailer.
internal bug in trailer.c
where
ifexists
ifmissing
separators
%s%c %s
running trailer command '%s' failed
empty trailer token in trailer '%.*s'
unknown value '%s' for key '%s'
could not read input file '%s'
%c	%s:%s	
%c	:%s	
 %c %-*s 
To %s
[no match]
new shallow roots not allowed
[remote rejected]
[remote failure]
atomic push failed
GIT_ALLOW_PROTOCOL
rsync:
rsync://
rsync
--ignore-existing
--exclude
%s/objects/
Could not read bundle '%s'.
update by push
Could not push objects to %s
rsync-refs-XXXXXX
Could not get ref %s
Could not push to %s
/packed-refs
invalid SHA-1: %s
transport '%s' not allowed
file://
git+ssh://
ssh+git://
pre-push
%s %s %s %s
Aborting.
Done
remote does not support deleting refs
remote failed to report status
updating local tracking ref '%s'
problems writing temporary file %s: %s
rsync transport does not support mirror mode
Could not remove temporary directory %s.
Could not run rsync to get refs
Error removing temporary directory %s.
remote part of refspec is not a valid name in %s
Bug detected: Taking over transport requires non-NULL smart_options field.
No remote provided to transport_get()
transport: invalid depth option '%s'
This transport does not support using --set-upstream
Failed to push all needed submodules!
The following submodule paths contain changes that can
not be found on any remote:
Please try
	git push --recurse-submodules=on-demand
or cd to the path and use
	git push
to push them to a remote.
Would set upstream of '%s' to '%s' of '%s'
Operation not supported by protocol
Debug: Remote helper: -> %s
GIT_TRANSLOOP_DEBUG
Transfer loop debugging: %s
%s is readable
read(%s) failed: %s
%s is writable
write(%s) failed: %s
Closed %s.
%s thread failed
%s thread failed to join: %s
Debug: Disconnecting.
Debug: Remote helper quit.
Debug: Remote helper: <- %s
error 
update by helper
%s unexpectedly said: '%s'
option %s 
refspec 
export-marks 
import-marks 
git-remote-%s
Can't dup helper output fd
capabilities
Debug: Got cap %s
bidi-import
check-connectivity
connect
no-private-update
servpath
Invalid remote service path.
connect %s
fallback
list for-push
list
Could not read ref %s
Debug: Read ref listing.
pushcert
--stats
fetch %s %s
lock 
%s also locked %s
--cat-blob-fd=%d
Couldn't run fast-import
import %s
--signed-tags=verbatim
--signed-tags=warn-strip
push 
export
--refspec
--use-done-feature
--export-marks=%s.tmp
--import-marks=%s
Couldn't run fast-export
GIT_TRANSPORT_HELPER_DEBUG
remote input
remote output
Git to program copy
Program to git copy
Full write to remote helper failed
%s EOF (with %i bytes in buffer)
Read %i bytes from %s (buffer now at %i)
Wrote %i bytes to %s (buffer now at %i)
Debug: Remote helper: Waiting...
expected ok/error, helper said '%s'
helper reported unexpected status of %s
Unable to find remote helper for '%s'
Unknown mandatory capability %s. This remote helper probably needs newer version of Git.
This remote helper should implement refspec capability.
Debug: Capabilities complete.
impossibly large verbosity value
Setting remote service path not supported by protocol.
Debug: Smart transport connection ready.
Debug: Falling back to dumb transport.
Unknown response to connect: %s
Operation not supported by protocol.
Can't connect to subservice %s.
Malformed response in ref list: %s
helper %s does not support dry-run
helper %s does not support --signed
helper %s does not support --signed=if-asked
Error while running fast-import
remote-helper doesn't support push; refspec needed
helper %s does not support 'force'
Error while running fast-export
Can't start thread for copying data: %s
tree-diff.c
t || tp
emit_path
Object %s not a tree
Commit %s in submodule path %s%s not found
Invalid commit %s in submodule path %s%s
corrupt tree file
tree-walk.c
unable to read tree %s
%.*s/
cannot stat '%s': %s
ent#%d %06o %s
switch branches
removed
overwritten
Checking out files
Aborting
* unpack mask %lu, dirmask %lu, cnt %d 
programming error in a caller of mark_ce_used_same_name
Your local changes to the following files would be overwritten by %s:
%%sPlease, commit your changes or stash them before you can %s.
Your local changes to the following files would be overwritten by %s:
The following untracked working tree files would be %s by %s:
The following untracked working tree files would be %s by %s:
%%sPlease move or remove them before you can %s.
Updating the following directories would lose untracked files in it:
Entry '%s' overlaps with '%s'.  Cannot bind.
Cannot update sparse checkout: the following entries are not up-to-date:
The following Working tree files would be overwritten by sparse checkout update:
The following Working tree files would be removed by sparse checkout update:
unpack_trees takes at most %d trees
Merge requires file-level merging
Sparse checkout leaves no entry on working directory
BUG: both update and delete flags are set on %s
Cannot do a twoway merge of %d trees
Cannot do a bind merge of %d trees
Cannot do a oneway merge of %d trees
Entry '%s' would be overwritten by merge. Cannot merge.
Entry '%s' not uptodate. Cannot merge.
Updating '%s' would lose untracked files in it
Untracked working tree file '%s' would be overwritten by merge.
Untracked working tree file '%s' would be removed by merge.
Entry '%s' not uptodate. Cannot update sparse checkout.
Working tree file '%s' would be overwritten by sparse checkout update.
Working tree file '%s' would be removed by sparse checkout update.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+.-
invalid URL scheme name or missing '://' suffix
missing host and scheme is not 'file:'
a 'file:' URL may not have a port number
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789.-[:]
invalid characters in host name
 <>"%{}|\^`
%%%02X
:/?#[]@!$&'()*+,;=
invalid %XX escape sequence
:/?#
http:
https:
invalid port number
invalid '..' path segment
usage: 
fatal: recursion detected in die handler
fatal: recursion detected in die_errno handler
xfuncname
cachetextconv
textconv/%s
!diff
diff=true
fortran
fountain
^[ 	]*(<[Hh][1-6][ 	].*>.*)$
java
matlab
objc
pascal
^[ 	]*((class|def)[ 	].*)$
ruby
bibtex
csharp
!^(.*[ 	])?(is[ 	]+new|renames|is[ 	]+separate)([ 	].*)?$
!^[ 	]*with[ 	].*$
^[ 	]*((procedure|function)[ 	]+.*)$
^[ 	]*((package|protected|task)[ 	]+.*)$
[a-zA-Z][a-zA-Z0-9_]*|[-+]?[0-9][0-9#_.aAbBcCdDeEfF]*([eE][+-]?[0-9_]+)?|=>|\.\.|\*\*|:=|/=|>=|<=|<<|>>|<>|[^[:space:]]|[
!^([C*]|[ 	]*!)
!^[ 	]*MODULE[ 	]+PROCEDURE[ 	]
^[ 	]*((END[ 	]+)?(PROGRAM|MODULE|BLOCK[ 	]+DATA|([^'" 	]+[ 	]+)*(SUBROUTINE|FUNCTION))[ 	]+[A-Z].*)$
[a-zA-Z][a-zA-Z0-9_]*|\.([Ee][Qq]|[Nn][Ee]|[Gg][TtEe]|[Ll][TtEe]|[Tt][Rr][Uu][Ee]|[Ff][Aa][Ll][Ss][Ee]|[Aa][Nn][Dd]|[Oo][Rr]|[Nn]?[Ee][Qq][Vv]|[Nn][Oo][Tt])\.|[-+]?[0-9.]+([AaIiDdEeFfLlTtXx][Ss]?[-+]?[0-9.]*)?(_[a-zA-Z0-9][a-zA-Z0-9_]*)?|//|\*\*|::|[/<>=]=|[^[:space:]]|[
^((\.[^.]|(int|ext|est|int\.?/ext|i/e)[. ]).*)$
[^ 	-]+|[^[:space:]]|[
[^<>= 	]+|[^[:space:]]|[
!^[ 	]*(catch|do|for|if|instanceof|new|return|switch|throw|while)
^[ 	]*(([A-Za-z_][A-Za-z_0-9]*[ 	]+)+[A-Za-z_][A-Za-z_0-9]*[ 	]*\([^;]*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>>?=?|&&|\|\||[^[:space:]]|[
^[[:space:]]*((classdef|function)[[:space:]].*)$|^%%[[:space:]].*$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|[=~<>]=|\.[*/\^']|\|\||&&|[^[:space:]]|[
!^[ 	]*(do|for|if|else|return|switch|while)
^[ 	]*([-+][ 	]*\([ 	]*[A-Za-z_][A-Za-z_0-9* 	]*\)[ 	]*[A-Za-z_].*)$
^[ 	]*(([A-Za-z_][A-Za-z_0-9]*[ 	]+)+[A-Za-z_][A-Za-z_0-9]*[ 	]*\([^;]*)$
^(@(implementation|interface|protocol)[ 	].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->|[^[:space:]]|[
^(((class[ 	]+)?(procedure|function)|constructor|destructor|interface|implementation|initialization|finalization)[ 	]*.*)$
^(.*=[ 	]*(class|record).*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|<>|<=|>=|:=|\.\.|[^[:space:]]|[
^package .*
^sub [[:alnum:]_':]+[ 	]*(\([^)]*\)[ 	]*)?(:[^;#]*)?(\{[ 	]*)?(#.*)?$
^(BEGIN|END|INIT|CHECK|UNITCHECK|AUTOLOAD|DESTROY)[ 	]*(\{[ 	]*)?(#.*)?$
^=head[0-9] .*
[[:alpha:]_'][[:alnum:]_']*|0[xb]?[0-9a-fA-F_]*|[0-9a-fA-F_]+(\.[0-9a-fA-F_]+)?([eE][-+]?[0-9_]+)?|=>|-[rwxoRWXOezsfdlpSugkbctTBMAC>]|~~|::|&&=|\|\|=|//=|\*\*=|&&|\|\||//|\+\+|--|\*\*|\.\.\.?|[-+*/%.^&<>=!|]=|=~|!~|<<|<>|<=>|>>|[^[:space:]]|[
^[	 ]*(((public|protected|private|static)[	 ]+)*function.*)$
^[	 ]*(class.*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|[-+*/<>%&^|=!.]=|--|\+\+|<<=?|>>=?|===|&&|\|\||::|->|[^[:space:]]|[
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[jJlL]?|0[xX]?[0-9a-fA-F]+[lL]?|[-+*/<>%&^|=!]=|//=?|<<=?|>>=?|\*\*=?|[^[:space:]]|[
^[ 	]*((class|module|def)[ 	].*)$
(@|@@|\$)?[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+|0[xXbB]?[0-9a-fA-F]+|\?(\\C-)?(\\M-)?.|//=?|[-+*/<>%&^|=!]=|<<=?|>>=?|===|\.{1,3}|::|[!=]~|[^[:space:]]|[
(@[a-zA-Z]{1,}[ 	]*\{{0,1}[ 	]*[^ 	"@',\#}{~%]*).*$
[={}"]|[^={}" 	]+|[^[:space:]]|[
^(\\((sub)*section|chapter|part)\*{0,1}\{.*)$
\\[a-zA-Z@]+|\\.|[a-zA-Z0-9
]+|[^[:space:]]|[
!^[ 	]*[A-Za-z_][A-Za-z_0-9]*:[[:space:]]*($|/[/*])
^((::[[:space:]]*)?[A-Za-z_].*)$
[a-zA-Z_][a-zA-Z0-9_]*|[-+0-9.e]+[fFlL]?|0[xXbB]?[0-9a-fA-F]+[lLuU]*|[-+*/<>%&^|=!]=|--|\+\+|<<=?|>>=?|&&|\|\||::|->\*?|\.\*|[^[:space:]]|[
!^[ 	]*(do|while|for|if|else|instanceof|new|return|switch|case|throw|catch|using)
^[ 	]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 	]+)*[][<>@.~_[:alnum:]]+[ 	]+[<>@._[:alnum:]]+[ 	]*\(.*\))[ 	]*$
^[ 	]*(((static|public|internal|private|protected|new|virtual|sealed|override|unsafe)[ 	]+)*[][<>@.~_[:alnum:]]+[ 	]+[@._[:alnum:]]+)[ 	]*$
^[ 	]*(((static|public|internal|private|protected|new|unsafe|sealed|abstract|partial)[ 	]+)*(class|enum|interface|struct)[ 	]+.*)$
^[ 	]*(namespace[ 	]+.*)$
utf-8
%*s%-*s
git/2.7.4
GIT_USER_AGENT
2.7.4
versionsort.prereleasesuffix
	alnum
blank
cntrl
lower
upper
xdigit
alpha
punct
%s/worktrees
%s/worktrees/%s/HEAD
GIT_ALLOC_LIMIT
unable to %s %s: %s
Out of memory, strdup failed
Out of memory, realloc failed
Out of memory, calloc failed
could not open %s for writing
could not close %s
Out of memory? fdopen failed
wrapper.c
unable to unlink %s: %s
unlink
rmdir
unable to access '%s': %s
unable to access '%s'
BUG: your snprintf is broken
attempting to allocate %lu over limit %lu
Out of memory, malloc failed (tried to allocate %lu bytes)
Data too large to fit into virtual memory space.
data too large to fit into virtual memory space
could not open '%s' for reading and writing
could not open '%s' for writing
unable to get current working directory
BUG: attempt to snprintf into too-small buffer
unlink_or_msg
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
GIT_FLUSH
write failure on '%s'
fsync error on '%s'
%s: write error (%s)
trailing-space
tabwidth=
tabwidth %.*s out of range
trailing whitespace
new blank line at EOF
space before tab in indent
indent with spaces
space-before-tab
indent-with-non-tab
cr-at-eol
blank-at-eol
blank-at-eof
tab-in-indent
cannot enforce both tab-in-indent and indent-with-non-tab
exec 
both deleted:
added by us:
deleted by them:
added by them:
deleted by us:
both added:
both modified:
new file:
copied:
renamed:
typechange:
unknown:
unmerged:
HEAD^
--files
--for-status
--summary-limit
You are currently rebasing.
new commits, 
modified content, 
untracked content, 
bug: unhandled diff status %c
wt-status.c
len >= 0
%s%.*s%s -> %s
%s%.*s%s
%s%s	%s
%c %s
Changes to be committed:
rebase-apply/applying
rebase-apply/patch
rebase-apply/head-name
rebase-apply/onto
rebase-merge
rebase-merge/interactive
rebase-merge/head-name
rebase-merge/onto
BISECT_LOG
BISECT_START
On branch 
rebase in progress; onto 
HEAD detached at 
HEAD detached from 
Not currently on any branch.
s->branch && !s->is_initial
The current patch is empty.
rebase-merge/done
rebase-merge/git-rebase-todo
No commands done.
  (see more in file %s)
No commands remaining.
rebase-merge/amend
rebase-merge/orig-head
You are currently bisecting.
Initial commit
Unmerged paths:
%s%.*s%s
Untracked files
Ignored files
add -f
Untracked files not listed%s
No changes
no changes added to commit
nothing to commit
You have unmerged paths.
gone
behind 
ahead 
Initial commit on 
HEAD (no branch)
, %s
%s -> 
Could not open file %s for reading
bug: unhandled unmerged status %x
Submodules changed but not updated:
Submodule changes to be committed:
You are currently rebasing branch '%s' on '%s'.
BUG: unhandled change_type %d in wt_status_print_change_data
  (use "git %s <file>..." to include in what will be committed)
Do not touch the line above.
Everything below will be removed.
--------------------------------------------------
Changes not staged for commit:
interactive rebase in progress; onto 
  (fix conflicts and run "git commit")
  (use "git commit" to conclude merge)
You are in the middle of an am session.
  (fix conflicts and then run "git am --continue")
  (use "git am --skip" to skip this patch)
  (use "git am --abort" to restore the original branch)
Last commands done (%d commands done):
Last command done (%d command done):
Next commands to do (%d remaining commands):
Next command to do (%d remaining command):
  (use "git rebase --edit-todo" to view and edit)
  (fix conflicts and then run "git rebase --continue")
  (use "git rebase --skip" to skip this patch)
  (use "git rebase --abort" to check out the original branch)
  (all conflicts fixed: run "git rebase --continue")
You are currently splitting a commit while rebasing branch '%s' on '%s'.
You are currently splitting a commit during a rebase.
  (Once your working directory is clean, run "git rebase --continue")
You are currently editing a commit while rebasing branch '%s' on '%s'.
You are currently editing a commit during a rebase.
  (use "git commit --amend" to amend the current commit)
  (use "git rebase --continue" once you are satisfied with your changes)
You are currently cherry-picking commit %s.
  (use "git cherry-pick --abort" to cancel the cherry-pick operation)
You are currently reverting commit %s.
  (use "git revert --abort" to cancel the revert operation)
You are currently bisecting, started from branch '%s'.
  (use "git bisect reset" to get back to the original branch)
  (use "git reset %s <file>..." to unstage)
  (use "git rm --cached <file>..." to unstage)
  (use "git add <file>..." to mark resolution)
  (use "git add/rm <file>..." as appropriate to mark resolution)
  (use "git rm <file>..." to mark resolution)
  (use "git add <file>..." to update what will be committed)
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
It took %.2f seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
 (use -u option to show untracked files)
no changes added to commit (use "git add" and/or "git commit -a")
nothing added to commit but untracked files present (use "git add" to track)
nothing added to commit but untracked files present
nothing to commit (create/copy files and use "git add" to track)
nothing to commit (use -u to show untracked files)
nothing to commit, working directory clean
All conflicts fixed but you are still merging.
  (fix conflicts and run "git cherry-pick --continue")
  (all conflicts fixed: run "git cherry-pick --continue")
  (fix conflicts and run "git revert --continue")
  (all conflicts fixed: run "git revert --continue")
wt_status_print_change_data
wt_status_print_tracking
------------------------ >8 ------------------------
@malformed diff output: %s
Could not stat %s
'%s' is not a boolean
Last expression must not be negated: %s
Invalid regexp to look for hunk header: %s
unknown style '%s' given for '%s'
BUG: total_out mismatch
BUG: total_in mismatch
no message
unknown error
1.2.8
deflateInit2: %s (%s)
inflateInit: %s (%s)
inflateInit2: %s (%s)
inflateEnd: %s (%s)
inflate: out of memory
inflate: %s (%s)
deflateInit: %s (%s)
deflateEnd: %s (%s)
deflate: out of memory
deflate: %s (%s)
wrong version
data stream error
stream consistency error
needs dictionary
srv.c
wt < (1 << 16)
n < (1 << 16)
k < n
*j <= k
absurdly long hostname
cannot parse SRV response: %s
cannot parse DNS RR: %s
SRV RR is too short
!unsigned_add_overflows(total, wt + 1)
expected SRV RR, found RR type %d
cannot expand target domain name in SRV RR
shuffle_one
weighted_shuffle
get_srv
Unable to look up %s (port %s) (%s)
/dev/tty
internal error in merge #1
internal error in merge #2
internal error in merge #3
internal error in merge #4
diffcore-pickaxe.c
data[sz] == '\0'
invalid regex: %s
contains
internal error: dst already matched.
Performing inexact rename detection
skipping rename detection, detected duplicate destination '%s'
Ccannot read tree %s
entry %.*s not found in tree %s
entry %s in tree %s is not a tree
cannot find path %s in tree %s
\ No newline at end of file
xdiff/xutils.c
*ptr == '\n'
xdl_hash_record
;*3$"
git blame [<options>] [<rev-opts>] [<rev>] [--] <file>
[31m
[32m
[34m
[1;34m
[1;31m
[1;31m
push.default is unset; its implicit value has changed in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the traditional behavior, use:
  git config --global push.default matching
To squelch this message and adopt the new behavior now, use:
  git config --global push.default simple
When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.
Since Git 2.0, Git defaults to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.
See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)
[36m
[31m
[32m
[33m
[41m
Add file contents to the index
bisect
Use binary search to find the commit that introduced a bug
branch
List, create, or delete branches
checkout
Switch branches or restore working tree files
clone
Clone a repository into a new directory
commit
Record changes to the repository
diff
Show changes between commits, commit and working tree, etc
fetch
Download objects and refs from another repository
grep
Print lines matching a pattern
init
Create an empty Git repository or reinitialize an existing one
Show commit logs
merge
Join two or more development histories together
Move or rename a file, a directory, or a symlink
pull
Fetch from and integrate with another repository or a local branch
push
Update remote refs along with associated objects
rebase
Forward-port local commits to the updated upstream head
reset
Reset current HEAD to the specified state
Remove files from the working tree and from the index
show
Show various types of objects
status
Show the working tree status
Create, list, delete or verify a tag object signed with GPG
[1;32m
[1;31m
[1;33m
[1;35m
[1;36m
[1;34m
/bad-path/
[32m
[31m
[31m
[31m
[31m
[32m
[31m
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
