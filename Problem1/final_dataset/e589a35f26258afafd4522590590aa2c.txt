/lib64/ld-linux-x86-64.so.2
libaudit.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
audit_open
_fini
_init
audit_log_user_message
libc.so.6
fflush
__printf_chk
setlocale
fopen
strncmp
dcngettext
optind
__strdup
dcgettext
__fdelt_chk
nanosleep
warnx
__stack_chk_fail
select
_exit
popen
strspn
strftime
strtod
gmtime
strtol
fgetc
fgets
calloc
strlen
localeconv
warn
strcspn
__errno_location
read
unsetenv
__fprintf_chk
stdout
fputc
fputs
lseek
memcpy
fclose
__strtol_internal
strtoul
malloc
__strndup
tzset
__ctype_b_loc
getenv
sscanf
optarg
stderr
ioctl
__snprintf_chk
getuid
fscanf
getopt_long
settimeofday
pclose
gettimeofday
geteuid
__fpending
iopl
localtime
strchr
__vfprintf_chk
mktime
program_invocation_short_name
__sprintf_chk
__xstat
errx
bindtextdomain
strcmp
__libc_start_main
ferror
write
random
__strtoul_internal
__progname
__cxa_atexit
_edata
__bss_start
_end
GLIBC_2.3
GLIBC_2.14
GLIBC_2.15
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
H=?8
Z[]H
AWAVAUATL
|$(H
L$0D
D$4~
|$ L
|$`1
D$`H
|$P1
d$XH
D$8H
D$8H
D$8E
D$PL;l$XH
H+D$ 
H+D$
L$(I
t$(D
t$HAV
t$HH
|$HH
\$`t
t$HD
D$tH
[]A\A]A^A_
AWAVM
AUATA
|$0H
D$4u4
|$pH
|$`1
L$PH
T$LH
D$L9
L$<D
L$LD
L$pH
t^A)
L$8H
*D$p
D$pH
D$hH+D$
|$pH
D$`H+D$
|$HH
D$hH+D$
D$`H+D$
\$pH
D$xH
|$`H
t$huO
L$XH
AXAY
D$pH
T$xH
t$P1
XD$(
D$pH
T$xt+H
t$pH
Y^tW
[]A\A]A^A_
AWAVAUATUS
|$`H
[]A\A]A^A_
D$0t
D$(D	
D$$	
D$(D
D$<P
D$PP
Do nine men interpret Nine men I nod
D$<P
D$@P
D$PP
D$HPD
Eleele
|$p1
|$p1
D$@H
T$Pf
D$Xf
|$p1
\$pH
l$xH
*D$P
UH-0
Degas are we not drawn onward no In union drawn onward to new eras aged
ATUSH
t5[]A\
[]A\
8	[]A\
AWAVAUATI
[]A\A]A^A_
|$TD
l$\1
SAWD
D$`D
|$XD
SAUE
T$(1
ATUSH
8 t;
[]A\
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AUATUSH
[]A\A]
5h~ 
5"~ 
=y~ 
=g~ 
=A~ 
=4~ 
5b} 
=u} 
=c} 
==} 
=0} 
-W| 
-"| 
-M| 
-{{ 
-D{ 
-fz 
--z 
=Vz 
-My 
%uy 
5Rx 
AWAVAUATUSH
D$81
D$'A
T$ A
gfffD
D$ A
LcD$
LcD$
Lcd$
L$8dH3
H[]A\A]A^A_
=bu 
=Fu 
5{t 
LcD$
=^t 
=Lt 
5=s 
5`s 
=2s 
= s 
God A red nugget A fat egg under a dog
5Zr 
Lcd$
=nr 
=Jr 
A Santa lives evil at NASA
=8r 
52q 
5Tq 
-=q 
=#q 
5Kp 
=dp 
=Pp 
=%p 
5#o 
=jo 
=[o 
=)o 
5Ln 
=cn 
=Ln 
=(n 
D$7D
57m 
=]m 
=Km 
='m 
D$7A
58l 
5Fl 
-wk 
=:k 
5Sj 
=~j 
t$ H
%=i 
="h 
=~h 
t$ H
=>h 
5sf 
5`f 
5Mf 
5:f 
=Bf 
Borrow or rob
ATUSH
Tacocat
D$(1
T$(dH3
0[]A\
=	f 
-De 
ATUSH
dH34%(
[]A\
D$`9D$ 
-qb 
-9b 
-U` 
[]A\
%1^ 
tqAUATE1
$<\tL
[]A\A]
AWAVH
AUATUSH
t$(1
D$ H
t$ H
T$ H
|$(dH3<%(
8[]A\A]A^A_
|$ A
d$ A
<$0u
L$ H
T$ I
VUUU
tsUSH
AUATI
T$0H
L$8L
D$@L
L$HH
X[]A\A]
ATUH
[]A\
ATUH
[]A\
ATUH
[]A\
ATUH
[]A\
ATUH
[]A\
$u9H
AUAT%
[]A\A]
[]A\A]
AUATUSH
D$81
gfffH
SATA
\$8dH3
H[]A\A]
AWAVE1
AUATI
taI9
tPL9
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
+t+H
AVAUI
ATUI
tbf.
<,t]
u5H9
alula
[]A\A]A^
]A\A]A^
AUATI
<,tM
u$H9
x&I	E
[]A\A]
[]A\A]
AVAUATUSH
-t'1
dH34%(
[]A\A]A^
AUATUSH
[]A\A]
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUS1
([]A\A]A^A_
AWAVA
AUATL
[]A\A]A^A_
%s from %s
util-linux 2.27.1
cannot open %s
%lf %ld %lf
LOCAL
local
unknown
Hardware clock is on %s time
Waiting for clock tick...
...synchronization failed
...got clock tick
/var/lib/lastdate
%02d.%02d.%04d
cannot write %s
sleeping ~%d usec
%ld.%06d < %ld.%06d (%.6f)
%s  .%06d seconds
LOCAL
%d.%d.%d
Calling settimeofday:
	tz.tz_minuteswest = %d
settimeofday() failed
Unable to set system clock.
%Y/%m/%d %H:%M:%S
	UTC: %s
%f %ld %f
write error
changing system time
Usage:
Functions:
Options:
/dev/rtc
/etc/adjtime
adjust
/usr/share/locale
util-linux
invalid epoch argument
?hvVDacrsuwAJSFf:
No --date option specified.
--date argument too long
Issuing date command: %s
%10.0f   %10.6f
 --%s
 -%c
seconds-into-epoch=
compare
help
show
hctosys
version
systohc
debug
getepoch
setepoch
noadjfile
localtime
badyear
directisa
test
systz
predict-hc
update-drift
Not adjusting drift factor because the --update-drift option was not used.
Not adjusting drift factor because the Hardware Clock previously contained garbage.
Not adjusting drift factor because last calibration time is zero,
so history is bad and calibration startover is necessary.
Not adjusting drift factor because it has been less than four hours since the last calibration.
Clock drift factor was calculated as %f seconds/day.
It is far too much. Resetting to zero.
Clock drifted %f seconds in the past %f seconds
in spite of a drift factor of %f seconds/day.
Adjusting drift factor by %f seconds/day
Warning: unrecognized third line in adjtime file
(Expected: `UTC' or `LOCAL' or nothing.)
Last drift adjustment done at %ld seconds after 1969
Last calibration done at %ld seconds after 1969
Invalid values in hardware clock: %4d/%.2d/%.2d %.2d:%.2d:%.2d
Hw clock time : %4d/%.2d/%.2d %.2d:%.2d:%.2d = %ld seconds since 1969
Assuming hardware clock is kept in %s time.
time jumped backward %.6f seconds to %ld.%06d - retargeting
missed it - %ld.%06d is too far past %ld.%06d (%.6f > %.6f)
%ld.%06d is close enough to %ld.%06d (%.6f < %.6f)
Set RTC to %ld (%ld + %d; refsystime = %ld.%06d)
Setting Hardware Clock to %.2d:%.2d:%.2d = %ld seconds since 1969
Clock not changed - testing only.
The Hardware Clock registers contain values that are either invalid (e.g. 50th day of month) or beyond the range we can handle (e.g. Year 2095).
Time read from Hardware Clock: %4d/%.2d/%.2d %02d:%02d:%02d
Time since last adjustment is %d seconds
Time since last adjustment is %d second
Calculated Hardware Clock drift is %ld.%06d seconds
The Hardware Clock does not contain a valid time, so we cannot adjust it.
Not setting clock because last adjustment time is zero, so history is bad.
Not setting clock because drift factor %f is far too high.
Needed adjustment is less than one second, so not setting clock.
The Hardware Clock does not contain a valid time, so we cannot set the System Time from it.
	tv.tv_sec = %ld, tv.tv_usec = %ld
Not setting system clock because running in test mode.
Must be superuser to set system clock.
Current system time: %ld = %s
At %ld seconds after 1969, RTC is predicted to read %ld seconds after 1969.
Not updating adjtime file because of testing mode.
Would have written the following to %s:
Could not open file with the clock adjustment parameters in it (%s) for writing
Could not update file with the clock adjustment parameters (%s) in it
Drift adjustment parameters not updated.
 hwclock [function] [option...]
Query or set the hardware clock.
 -h, --help           show this help text and exit
 -r, --show           read hardware clock and print result
     --get            read hardware clock and print drift corrected result
     --set            set the RTC to the time given with --date
 -s, --hctosys        set the system time from the hardware clock
 -w, --systohc        set the hardware clock from the current system time
     --systz          set the system time based on the current timezone
     --adjust         adjust the RTC to account for systematic drift since
                        the clock was last set or adjusted
 -c, --compare        periodically compare the system clock with the CMOS clock
     --getepoch       print out the kernel's hardware clock epoch value
     --setepoch       set the kernel's hardware clock epoch value to the 
                        value given with --epoch
     --predict        predict RTC reading at time given with --date
 -V, --version        display version information and exit
 -u, --utc            the hardware clock is kept in UTC
     --localtime      the hardware clock is kept in local time
 -f, --rtc <file>     special /dev/... file to use instead of default
     --directisa      access the ISA bus directly instead of %s
     --badyear        ignore RTC's year because the BIOS is broken
     --date <time>    specifies the time to which to set the hardware clock
     --epoch <year>   specifies the year which is the beginning of the
                        hardware clock's epoch value
     --update-drift   update drift factor in %1$s (requires
                        --set or --systohc)
     --noadjfile      do not access %1$s; this requires the use of
                        either --utc or --localtime
     --adjfile <file> specifies the path to the adjust file;
                        the default is %1$s
     --test           do not update anything, just show what would happen
 -D, --debug          debugging mode
Unable to connect to audit system
%s: these options are mutually exclusive:
Sorry, only the superuser can use the Hardware Clock.
%s takes no non-option arguments.  You supplied %d.
With --noadjfile, you must specify either --utc or --localtime
The value of the --date option is not a valid date.
In particular, it contains quotation marks.
date --date="%s" +seconds-into-epoch=%%s
Unable to run 'date' program in /bin/sh shell. popen() failed
response from date command = %s
The date command issued by %s returned unexpected results.
The command was:
  %s
The response was:
  %s
The date command issued by %s returned something other than an integer where the converted time value was expected.
The command was:
  %s
The response was:
date string %s equates to %ld seconds since 1969.
No usable set-to time.  Cannot set clock.
The kernel keeps an epoch value for the Hardware Clock only on an Alpha machine.
This copy of hwclock was built for a machine other than Alpha
(and thus is presumably not running on an Alpha now).  No action taken.
No usable clock interface found.
Cannot access the Hardware Clock via any known method.
Use the --debug option to see the details of our search for an access method.
%10.0f   %10.6f   %15.0f   %4.0f
hw-time      system-time         freq-offset-ppm   tick
MbP?
/dev/port
I failed to get permission because I didn't try.
unable to get I/O port access:  the iopl(3) call failed.
Probably you need root privileges.
cmos_read(): write to control address %X failed
cmos_read(): read from data address %X failed
cmos_write(): write to control address %X failed
cmos_write(): write to data address %X failed
Using direct I/O instructions to ISA clock.
/dev/rtc0
/dev/misc/rtc
RTC_RD_TIME
RTC_SET_TIME
ioctl(%s) was successful.
ioctl(%s) to %s to read the time failed
%s does not have interrupt functions. 
Waiting in loop for time from %s to change
Timed out waiting for time change.
select() to %s to wait for clock tick failed
select() to %s to wait for clock tick timed out
ioctl() to %s to turn off update interrupts failed
ioctl() to %s to turn on update interrupts failed unexpectedly
ioctl(%s) to %s to set the time failed.
To manipulate the epoch value in the kernel, we must access the Linux 'rtc' device driver via the device special file %s.  This file does not exist on this system.
ioctl(RTC_EPOCH_READ) to %s failed
we have read epoch %ld from %s with RTC_EPOCH_READ ioctl.
The epoch value may not be less than 1900.  You requested %ld
setting epoch to %lu with RTC_EPOCH_SET ioctl to %s.
The kernel device driver for %s does not have the RTC_EPOCH_SET ioctl.
ioctl(RTC_EPOCH_SET) to %s failed
Using the /dev interface to the clock.
?KMGTPEYZ
kmgtpeyz
%s: '%s'
BKMGTPE
%d%s%jd%s
%d%s
;*3$"
4931b347add1ae99c8e77037e4330279e75505.debug
.shstrtab
Beeb
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
