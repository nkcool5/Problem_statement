!This program cannot be run in DOS mode.
.text
P`.data
.rdata
`@.bss
.idata
.CRT
.tls
54|O
[^_]
,[^_]
tr~c
=;PO
=KPO
UWVS
= TO
<[^_]
[^_]
<[^_]
=9PO
D$,t%
5\PO
5\PO
5`PO
[^_]
[^_]
L$D1
DD$T
$ TO
D$(pC@
DD$X
D$Xf
=:PO
=:PO
=,UO
[^_]
D$$pC@
=0UO
=:PO
DD$H
DD$H
=(UO
D$$K'D
UWVS
D$$9D$
D$49D$
9L$8
D$$1
;|$ 
D$d1
L[^_]
B<7v	1
UWVS
=@UO
[^_]
[^_]
UWVS
nasm
.out
[^_]
[^_]
x t"
[^_]
[^_]
[^_]
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
,[^_]
td~'
UWVS
[^_]
$j)D
UWVS
[^_]
[^_]
UWVS
C 9C
s ;s
[^_]
UWVS
J([^_]
[^_]
UWVS
,[^_]
UWVS
[^_]
UWVS
l$<9Y
[^_]
 [^_
UWVS1
\[^_]
UWVS
[^_]
[^_]
+tv1
-t{1
[^_]
[^_]
<$u7
[^_]
|$(1
[^_]
[^_]
UWVS
t$\1
[^_]
[^_]
\$$	
|$(9|$ r
[^_]
UWVS
W9\$
L[^_]
[^_]
L$<	
[^_]
[^_]
	tS9
[^_]
L$8t
L$(	L
\[^_]
[^_]
[^_]
D$4}/
T$(t9
=XUO
5\UO
@;D$
,[^_]
@;D$
$dUO
L[^_]
\$41
D$$t
t[^_]
0#A0
\$(1
D$ 9
@;|$$
D$ u
D~0f%
D$8%
T$(1
l$4f
|$0@
\$41
UWVS
<[^_]
<[^_]
\[^_]
T$$	
D$(%
[^_]
T$ t
T$$!T$
T$,9T$0t^
;D$Dt
u>9l$Du8
L$01
|$4	
\[^_]
9l$D
;D$D
;D$D
UWVS
[^_]
D$(1
D$0#
|$(@t
|$(@
T$$1
T$$1
|$( 
@< t	
;D$,
D$Z	
|$(@
T$$1
l[^_]
|$(@ts
[^_]
B0@u
9hPu
@;\$
9\$(u
f	D7l
|[^_]
|[^_]
UWVS
+D$ 
[^_]
)L$,
t$01
D$|g
D$|g
T$dr
D$|b
D$|u
;D$Dt
D$|t
t$01
|$41
+t$8
D$|f
T$<+D$0
+D$8
T$4+D$ 
+D$8
+D$8
D$`	
9D$\
T$<)
+D$8
UWVS
|$\ t
<[^_]
|#~b;D$
D$p1
[^_]
UWVSP
=8PO
[^_]
God A red nugget A fat egg under a dog
=8PO
<@uK
<[^_]
<[^_]
UWVS
<[^_]
<[^_]
>.tU1
<[^_]
=8PO
,[^_]
D$D<
,[^_]
,[^_]
=8PO
\$ td
T$$1
=8PO
UWVS
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
UWVS
[^_]
UWVS
[^_]
UWVS
,[^_]
[^_]
=8PO
UWVS1
[^_]
\001
@ =x
T$0t
f	{<
[^_]
=@UO
=0PO
UWVS
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
;D$@
,[^_]
,[^_]
3;A@t
t&;ADu
UWVS
=lfO
=lfO
D$8lfO
t$(t
x,9z,
=lfO
-PfO
D$8!
D$<!
D$,9D$4
D$(9D$0
](w9r
T$,9D$,r9w
9\$(v1
E,9D$4
9\$0
T$,#\$0#T$4
=lfO
=dfO
L$Dto
;T$0
;T$(u
=lfO
L$(;T$(t=+X0
L$L9L$Dt
|[^_]
5lfO
5HfO
5HfO
5HfO
@[^_
UWVS
\[^_]
#q0#y4	
#q(#y,	
|$(	
5lfO
sect
ion.
.staf
.vst
\[^_]
|$(	
=hfO
UWVS
[^_]
UWVS
\$$t"
\[^_]
[^_]
UWVS
w	r*9
D$<7
D$<9
-lfO
T$$)
D$<1
l[^_]
D$<8
;.ti
;P@t
t:;PDu
=pfO
t^9S,
K(w"s
UWVS
;s@t
;sDu
L[^_]
L[^_]
L[^_]
;x@t
;xDu
-`fO
t*;xDtP;x@
;xDtR;x@tM
t$ +t$
UWVS
95PgO
tO95PgO
tG95
t?95
l[^_]
l[^_]
= gO
=`gO
t89=PgO
tN9=
t[9=
[^_]
D$8tI9
[^_]
[^_]
UWVS
,[^_]
,[^_]
,[^_]
9\$T
;D$X
;D$X
;D$X
;D$X
;D$X
;D$X
;D$X
;D$X
;D$X
9\$T
;D$X
;D$X
;D$X
;D$Xtp
T$T1
9D$T
5`gO
9D$T
5 gO
9D$T
,[^_]
D$  
D$  
UWVS
,[^_]
,[^_]
[^_]
[^_]
UWVS
D$>/
D$?)
D$@)
D$A)
D$B)
D$C)
gfff
=$PO
L$Nu
\[^_]
UWVS
;D$4t
[^_]
UWVS
[^_]
<[^_]
[^_]
[^_]
[^_]
UWVS
L[^_]
L[^_]
9l$t
L[^_]
L[^_]
T$t9D$x
9D$xt^
UWVS
,[^_]
9Y t
9Y t
;Q,r
;q(v
Q,[^_
|$ @t
5`hO
5\hO
5\hO
5XhO
5XhO
5`hO
,[^_]
[^_]
UWVS
D$\f
T$ =
D$$;
|$41
l$ +D$$
t$ 1
|$01
|$,+
l[^_]
-ThO
D$,;
$ )D
-`hO
;=HhO
5ThO
D$, 
D$$t
L$,1
\$(f
T$\f
L$\f
D$,0
;l$ 
;l$ u
=hhO
;|$ 
+D$,
+D$,
\$L+|$@
T$,f
=dhO
5phO
\$,1
UWVS
;l$$
\[^_]
\[^_]
D$(u
T$$!D$$
	D$$
3V,3F(	
#F0;D$@
UWVS
D$,1
;D$,r
ED$(
l[^_]
l[^_]
|$ 	
GPt^
09n u
[^_]
19V tN1
9V t?
[^_]
[^_]
[^_]
UWVS
9{ u
9{ tB
<[^_]
<[^_]
9|$d
;D$h
;D$h
;D$h
;D$h
;D$h
;D$h
;|$d
f+D$
<[^_]
;D$h
;D$h
;D$h
;D$h
UWVS
t	;X
=\hO
[^_]
9Y t
9Y t
;Q,r
;q(v
Q,[^_
|$ @t
UWVS
<[^_]
[^_]
UWVS
D$lf
T$(=
D$0;
|$@+
[^_]
D$@;
$ )D
58jO
-|jO
;5|jO
5,jO
D$@0
D$(t
L$01
D$@H
\$(1
;\$(
;t$(u
;t$(
D$H1
+D$@
+D$@
|$\+\$T
L$@1
D$@1
UWVS
;l$$
\[^_]
\[^_]
D$(u
T$$!D$$
	D$$
3V,3F(	
#F0;D$@
UWVS
D$,1
;D$,r
ED$(
l[^_]
l[^_]
|$ 	
GPt^
89W u
,[^_]
9S t]1
9S tP
+L$(
<[^_]
D$Tp
<[^_]
+T$(
L$,+
<[^_]
UWVS
9k u
9k tF
;D$x
;D$x
;D$x
;D$x
;L$x
L[^_]
L[^_]
9l$t
L[^_]
9l$t
;D$x
;D$x
;D$x
;D$x
;D$x
9l$t
;D$x
;D$x
;D$x
;D$x
UWVS
t	;X
,[^_]
=<nO
9Y t
9Y t
;Q,r
;q(v
Q,[^_
|$ @t
,[^_]
-,nO
-,nO
[^_]
UWVS
=8nO
T$ =
D$$;
|$41
l$ +D$$
;=8nO
t$ 1
|$01
=8nO
|$,+
958nO
|[^_]
D$,;
5xlO
$ )D
5llO
=hlO
5`lO
=\lO
=8nO
=8nO
=8nO
D$, 
D$ t
L$$1
\$(f
=TlO
T$df
D$,0
;l$ 
;l$ u
|$H1
;l$ 
+D$,
+D$,
\$L+|$D
T$,f
=8nO
\$,1
UWVS
=<nO
;l$$
\[^_]
\[^_]
D$(u
T$$!D$$
	D$$
3V,3F(	
#F0;D$@
UWVS
D$,1
;D$,r
-<nO
ED$(
l[^_]
l[^_]
|$ 	
GPt^
09n u
[^_]
=8nO
09V tJ1
9V t9
[^_]
D$D,
D$DT
,[^_]
,[^_]
UWVS
9{ u
9{ tB
5$lO
=(lO
9|$d
;T$h
;T$h
;T$h
;T$h
;T$h
<[^_]
<[^_]
)+l$
9|$d
<[^_]
;L$h
;L$h
;L$h
;L$h
;T$h
58nO
UWVS
t	;X
[^_]
tI9P
5pnO
UWVS
[^_]
[^_]
[^_]
[^_]
UWVS
L[^_]
[^_]
-TnO
L[^_]
=LnO
[^_]
5dnO
5`nO
5\nO
-pnO
UWVS
L[^_]
=dnO
L[^_]
UWVS
5pnO
tb9^
,[^_]
UWVS
tN9{
L[^_]
L[^_]
U +U(	
|$t9z
L$tu
9|$t
L$tt
5xnO
5xnO
UWVS
t$8t
[^_]
=pnO
9D$4u
UWVS
l$xt
\[^_]
-DnO
T$$t\
9D$t
5pnO
9D$t
-tnO
5pnO
5dnO
9D$t
-tnO
UWVS
5XnO
5PnO
5pnO
5dnO
5pnO
5dnO
tG}E
=pnO
C$t7f
9C(t
5pnO
=HnO
-pnO
5pnO
5pnO
5pnO
,[^_]
$@pO
$@pO
UWVS
,[^_]
D$DX
,[^_]
[^_]
[^_]
D$09
D$09
9D$0tF
[^_]
UWVS
t?9-0pO
<[^_]
<[^_]
[^_]
9-0pO
l[^_]
-$PO
=,pO
=,pO
$UUUU
WVS1
=pqO
0[^_
UWVS
5pqO
,[^_]
5pqO
[^_]
[^_]
5pqO
UWVS
[^_]
[^_]
[^_]
=dqO
[^_]
-`qO
UWVS
=pqO
<[^_]
<[^_]
<[^_]
9\$d
D$df
+D$()
-lqO
D$df
9\$d
D$df
D$.t
+D$()
=@UO
<[^_]
<[^_]
UWVS
[^_]
[^_]
[^_]
UWVS
L$Xt9
D$D0
,[^_]
,[^_]
,[^_]
,[^_]
D$@i
,[^_]
,[^_]
t'9P
;H$v
[^_]
[^_]
UWVS
<[^_]
E<tA
|$Hu
0[^_
0[^_
0[^_
D$Lf
T$ u
UWVS
<[^_]
<[^_]
<[^_]
UWVS
[^_]
UWVS
l$8t
[^_]
$-)D
[^_]
UWVS
,[^_]
t"9C
UWVS
5txO
=pxO
[^_]
<[^_]
tN9B
[^_]
[^_]
[^_]
UWVS
|$Pt
,[^_]
,[^_]
9l$T
9l$T
f+C8
T$T1
UWVS
t$Pt!
,[^_]
,[^_]
,[^_]
UWVS
=txO
5DxO
5,xO
5,xO
=dxO
<[^_]
=dxO
-txO
5txO
;5PxO
;5LxO
t"9C
UWVS
[^_]
<[^_]
tN9B
[^_]
[^_]
UWVS
T$Pt
,[^_]
,[^_]
D$D 
,[^_]
UWVS
\[^_]
D$I1
D$J1
UWVS
L[^_]
L[^_]
9l$t
9D$x
D$d9l$t
L[^_]
UWVS
QZ^&
8D")
@[^_]
UWVS
,[^_]
,[^_]
[^_]
UWVS
,[^_]
T$P1
,[^_]
,[^_]
,[^_]
UWVS
|[^_]
|[^_]
UWVS
9l$,
L[^_]
,[^_]
,[^_]
,[^_]
$,yO
UWVS
<[^_]
<[^_]
[^_]
<$t>
[^_]
;%u\
8$uC
[^_]
t*9s
D$0t
[^_]
[^_]
,[^_]
UWVS
\[^_]
<'tJ<"tF<`tB
@[^_
UWVS
=8PO
-<yO
=PyO
=TyO
=PyO
[^_]
$,yO
L$,9
u];K
[^_]
;T$,|5
[^_]
$,yO
$,yO
 [^_
[^_]
[^_]
UWVS
L[^_]
L$+1
<Eu0
9l$,
UWVS
T$ u
<[^_]
<[^_]
<[^_]
UWVS
[^_]
D$Pu
D$\X
u<<,u8
l[^_]
D$(9D$<
D$L1
D$$t
D$X@
D$\@
|[^_]
9L$(
9D$(
D$09D$4
9D$$
t$01
D$(9D$$
9D$0
|$(1
D$$9D$0
;\$,
UWVS
[^_]
D$(tA
=XyO
\$Lu
D$Lu
5PyO
$,yO
:D$d
=XyO
5`yO
T$Ht
-hyO
-hyO
=XyO
D$\9F
D$`9F
D$e8F
D$Ht#
D$Ht)
$,yO
#L$ !
L$ 1
D$Ht!
L$ t
=LyO
5HyO
-dyO
D$ !
L$ 1
D$$y"
|$$)t$(
+t$ 
;L$$|
`;T$ wZ
UWVS
9|$$
=8PO
=@yO
-DyO
9|$$
[^_]
D$8t
[^_]
5`yO
|$(1
5`yO
|$@1
9|$L
if 0
UWVS
l$D9l$@
'tp~
[^_]
^vw9
[^_]
UWVS
+D$0
[^_]
D$01
	v#;\$
+D$0
+D$0
+D$0
L$01
+D$0
+D$0
$}HN
[^_]
t+;P
L$,tp
L[^_]
UWVS
L[^_]
D$`)
UWVS
[^_]
[^_]
[^_]
[^_]
T$,1
,[^_]
[^_]
[^_]
[^_]
[^_]
4$uU
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
UWVS
[^_]
[^_]
[^_]
|`~Y
[^_]
[^_]
[^_]
UWVS
[^_]
[^_]
[^_]
UWVS
L[^_]
[^_]
<Eu)
<+uT
<Ht%
<Pu1
<+uO
<>tN<=
WVS1
[^_]
[^_]
WVS1
[^_]
[^_]
WVS1
[^_]
[^_]
[^_]
[^_]
UWVS
[^_]
[^_]
<[^_]
D$$t
[^_]
[^_]
$T9O
$49O
$T9O
-xLO
[^_]
$T9O
[^_]
[^_]
[^_]
8MZt
UWV1
[^_]
[^_]
B' t
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
r/9D$
$$UO
$$UO
$$UO
=9PO
;L$(
= TO
$ TO
$ TO
=:PO
=;PO
[^_]
=0UO
=\PO
=`PO
=dPO
$ TO
D$$t
=:PO
=;PO
$ TO
$ TO
$ TO
$ TO
$ TO
=:PO
=:PO
$-#D
$6#D
=ePO
 9D$(
=$PO
=:PO
ED$(
$$UO
<[^_]
<`u	
$,yO
|$,1
D$$t
D$(9D$$}
l[^_]
9S,~?
,[^_]
libgcj-13.dll
_Jv_RegisterClasses
%s%s
type `nasm -h' for help
NASM version %s compiled on %s%s
%s:%d: 
nasm: 
%s(%d) : 
option `-%c' requires an argument
file name too long
oOfpPdDiIlFXuUZwW
unrecognised output format `%s' - use -hf for a list
unknown optimization option -O%c
unrecognized debug format `%s' for output format `%s'
unrecognized error reporting format `%s'
usage: nasm [-@ response file] [-o outfile] [-f format] [-l listfile]
            [options...] [--] filename
    or nasm -v (or --v) for version info
    -t          assemble in SciTech TASM compatible mode
    -g          generate debug information in selected format
    -E (or -e)  preprocess only (writes output to stdout by default)
    -a          don't preprocess (assemble only)
    -M          generate Makefile dependencies on stdout
    -MG         d:o, missing files assumed generated
    -MF <file>  set Makefile dependency file
    -MD <file>  assemble and generate dependencies
    -MT <file>  dependency target name
    -MQ <file>  dependency target name (quoted)
    -MP         emit phony target
    -Z<file>    redirect error messages to file
    -s          redirect error messages to stdout
    -F format   select a debugging format
    -o outfile  write output to an outfile
    -f format   select an output format
    -l listfile write listing to a listfile
    -I<path>    adds a pathname to the include file path
    -O<digit>   optimize branch offsets
                -O0: No optimization
                -O1: Minimal optimization
                -Ox: Multipass optimization (default)
    -P<file>    pre-includes a file
    -D<macro>[=<value>] pre-defines a macro
    -U<macro>   undefines a macro
    -X<format>  specifies error reporting format (gnu or vc)
    -w+foo      enables warning foo (equiv. -Wfoo)
    -w-foo      disable warning foo (equiv. -Wno-foo)
    -h          show invocation summary and exit
--prefix,--postfix
  this options prepend or append the given argument to all
  extern and global variables
--allow-64-bit
  do not restrict 64-bit code to 64-bit capable output
  formats (use with care, no complaining)
Warnings:
    %-23s %s (default %s)
response files should contain command line parameters, one per line.
valid output formats for -f are (`*' denotes default):
For a list of valid output formats, use -hf.
For a list of debug formats, use -f <form> -y.
valid debug formats for '%s' output format are ('*' denotes default):
invalid option to `-w'
none
invalid warning `%s'
unknown dependency option `-M%c'
option `-M%c' requires a parameter
option `--%s' requires an argument
unrecognised option `--%s'
unrecognised option `-%c'
more than one input file specified
segment name `%s' not recognized
incorrect segment alignment `%s'
segment alignment `%s' is not power of two
identifier expected after EXTERN
cannot specify 32-bit segment on processor below a 386
cannot specify 64-bit segment on processor below an x86-64
%s output format does not support 64-bit code
`%s' is not a valid segment size; must be 16, 32 or 64
identifier expected after GLOBAL
identifier expected after COMMON
invalid size specified in COMMON declaration
no size specified in COMMON declaration
cannot use non-relocatable expression as ABSOLUTE address
invalid ABSOLUTE address in pass two
identifier expected after DEBUG
DEBUG identifier too long
8086
pentium
ppro
pentiumpro
katmai
willamette
prescott
x86-64
ia64
ia-64
itanium
itanic
merced
unknown 'cpu' type
unknown 'float' directive: %s
unrecognised directive [%s]
EQU not preceded by label
bad syntax for EQU
phase error detected at end of assembly.
Can't find valid values for all labels after %d passes, giving up.
Possible causes: recursive EQUs, macro abuse.
info: assembly required 1+%d+1 passes
invalid warning id in WARNING directive
invalid parameter to [%s] directive
__DATE__="%Y-%m-%d"
__DATE_NUM__=%Y%m%d
__TIME__="%H:%M:%S"
__TIME_NUM__=%H%M%S
__UTC_DATE__="%Y-%m-%d"
__UTC_DATE_NUM__=%Y%m%d
__UTC_TIME__="%H:%M:%S"
__UTC_TIME_NUM__=%H%M%S
__POSIX_TIME__=%I64d
NASMENV
unable to open response file `%s'
no input file specified
file `%s' is both input and output file
cannot open file `%s' for error messages
__OUTPUT_FORMAT__=%s
unable to open output file `%s'
%%line %d+%d %s
write error on output file `%s'
unable to write dependency file `%s'
warning: 
error: 
fatal: 
panic: 
debug: 
prefix
postfix
allow-64-bit
error
treat warnings as errors
macro-params
macro calls with wrong parameter count
macro-selfref
cyclic macro references
macro-defaults
macros with more default than optional parameters
orphan-labels
labels alone on lines without trailing `:'
number-overflow
numeric constant does not fit
gnu-elf-extensions
using 8- or 16-bit relocation in ELF32, a GNU extension
float-overflow
floating point overflow
float-denorm
floating point denormal
float-underflow
floating point underflow
float-toolong
too many digits in floating-point number
user
%warning directives
lock
lock prefix on unlockable instructions
invalid hle prefixes
invalid bnd prefixes
out of memory
assertion %s failed at %s:%d
unable to write output: %s
numeric constant %s does not fit in 64 bits
file name already ends in `%s': output will be in `nasm.out'
file name already has no extension: output will be in `nasm.out'
lock
repe
repne
repnz
repz
times
wait
xacquire
xrelease
NASM 2.12rc2
The Netwide Assembler 2.12rc2
Jan 27 2016
2.12rc2
posn >= 0
raa.c
(s->wpos % s->elem_len) == 0
saa.c
s->wpos == s->blk_len
(s->rpos % s->elem_len) == 0
s->rptr + len <= s->datalen
posn + len <= s->datalen
posn <= s->datalen
exponent
invalid character in floating-point constant %s: '%c'
too many periods in floating-point constant
floating-point constant significand contains more than %i digits
significand
floating-point constant: `%c' is invalid character
packed BCD truncated to 18 digits
invalid character `%c' in packed BCD constant
internal errror: empty string passed to float_const
packed BCD requires an 80-bit format
internal error: unknown FP constant token `%s'
overflow in floating-point constant
underflow in floating-point constant
denormal floating-point constant
strange value %d passed to float_const
nodaz
near
down
zero
default
absolute
bits
common
debug
default
extern
float
global
list
section
segment
warning
sectalign
export
group
import
library
module
osabi
safeseh
uppercase
impossible combination of address sizes
OUT_ADDRESS with size > 8
invalid operand passed to op_rexflags()
Broadcasting not allowed from a register
Embedded rounding is available only with reg-reg op.
absolute address can not be RIP-relative
RIP-relative addressing is prohibited for mib.
displacement size ignored on absolute address
%s data exceeds bounds
invalid operand passed to regval()
invalid operand size prefix
attempt to reserve non-constant quantity of BSS space
invalid operand passed to regflag()
invalid effective address
internal instruction table corrupt: instruction code \%o (0x%02X) given
instruction cannot use high registers
cannot use high register in AVX instruction
invalid operands in non-64-bit mode
invalid high-16 register in non-AVX-512
cannot use high register in rex instruction
invalid %s prefix
instruction is not lockable
%s with this instruction requires lock
%s invalid with this instruction
jmp short does not init bnd regs - bnd prefix dropped.
signed byte
signed dword
word
dword
repne
repnz
instruction->times < 0 (%ld) in assemble()
integer supplied to a DT, DO or DY instruction
`incbin': unable to open file `%s'
`incbin': unable to seek on file `%s'
`incbin': unexpected EOF while reading file `%s'
errors made it through from pass one
cs segment base generated, but will be ignored in 64-bit mode
ds segment base generated, but will be ignored in 64-bit mode
es segment base generated, but will be ignored in 64-bit mode
ss segment base generated, but will be ignored in 64-bit mode
segr6 and segr7 cannot be used as prefixes
16-bit addressing is not supported in 64-bit mode
64-bit addressing is only supported in 64-bit mode
invalid instruction prefix
byte value exceeds bounds
unsigned byte value exceeds bounds
short jump is out of range
value referenced by FAR is not relocatable
non-absolute expression not permitted as argument %d
four-bit argument exceeds bounds
signed dword immediate exceeds bounds
%s value exceeds bounds
non-constant BSS size in pass two
operation size not specified
mismatch in operand sizes
mismatch in the number of broadcasting elements
no instruction for this cpu level
instruction not supported in %d-bit mode
specific encoding scheme not available
bnd prefix is not allowed
%s prefix is not allowed
invalid combination of opcode and operands
byte
qword
tword
oword
yword
zword
len <= PERMTS_SIZE
labels.c
identifier length exceed %i bytes
%s%s%s
can't find label `%s' on pass two
symbol `%s' redefined
attempt to define a local label before any non-local labels
attempt to define a local label as a common variable
attempt to declare local symbol `%s' as global
symbol `%s': GLOBAL directive after symbol definition is an experimental feature
is_power2(size)
hashtbl.c
+tPOu
w!X|
HY{'
{VI!
D"A/oyu
w!hy
QguI
aco-nz
	6RtcZO"
H$BQ
XS&Y+
s3o\
\D2%4
u<~{
,6a<
;(uu
z`%1Is}
KM^bM
L	-	
='2T
URdN
.wM^
p&S@
!Y%E
>?Wn
sVwES
-oX"'
+7a_
Rg|/
)invalid effective address: two index registers
beroset-p-603-invalid effective address
beroset-p-630-invalid effective address
beroset-p-637-invalid effective address
beroset-p-650-invalid effective address
invalid operand size specification
conflicting address size specifications
invalid size specification in effective address
label or instruction expected at start of line
label alone on a line without a colon might be in error
non-constant argument supplied to TIMES
TIMES value %I64d is negative
Invalid value %d passed to prefix_slot()
instruction has redundant prefixes
instruction has conflicting prefixes
parser: instruction expected
%s must be followed by a string constant
invalid string for transform
unterminated %s function
floating-point constant encountered in DY or DZ instruction
floating-point constant encountered in unknown instruction
operand %d: expression is not simple or relocatable
comma expected after operand %d
`incbin' expects a file name
`incbin': second parameter is non-numeric
`incbin': third parameter is non-numeric
`incbin': more than three parameters
no operand for data declaration
invalid use of FAR operand specifier
invalid segment override
instruction has conflicting segment overrides
invalid mib expression
parser: expecting ]
broadcast or opmask decorator expected inside braces
comma or end of line expected
comma, colon, decorator or end of line expected after operand
opmask k%I64u is already set
{%s} is not an expected decorator
only a series of valid decorators expected
invalid decorator
invalid operand type
register size specification ignored
  %c %-10s%s
    %-10s%s
ELF (short name for ELF32)
macho
MACHO (short name for MACHO32)
WIN (short name for WIN32)
Null debug format
null
cannot mix real and virtual attributes in nobits section (%s)
sections %s and %s can't both follow section %s
section %s begins before program origin
section %s beings before program origin
sections %s ~ %s and %s overlap!
sections %s and %s overlap!
cannot compute vstart for section %s
circular vfollows path detected
r->bytes <= 8
output/outbin.c
- NASM Map file 
Source file:  %s
Output file:  %s
-- Program origin 
%08I64X
-- Sections (summary) 
Vstart            Start             Stop              Length    Class     Name
%16I64X  %16I64X  %16I64X  %08I64X  
progbits  
nobits    
-- Sections (detailed) 
---- Section %s 
class:     
progbits
nobits
length:    %16I64X
start:     %16I64X
align:     
%16I64X
follows:   
vstart:    %16I64X
valign:    
vfollows:  
-- Symbols 
---- No Section 
Value     Name
%08I64X  %s
Real              Virtual           Name
%16I64X  %16I64X  %s
section %s follows an invalid or unknown section (%s)
section %s vfollows unknown section (%s)
.ith
.srec
org value must be a critical expression
program origin redefined
No or invalid offset specified in ORG directive.
brief
sections
segments
symbols
stdout
stderr
unable to open map file `%s'
map file already specified
.text
.data
.bss
align=
start=
follows=
vstart=
valign=
vfollows=
()'"
invalid syntax in `section' directive
expecting `)'
No value given to attribute in `section' directive
section attribute value must be a critical expression
Invalid attribute value specified in `section' directive.
ignoring unknown section attribute: "%s"
attempt to change section type from progbits to nobits
attempt to change section type from nobits to progbits
argument to `align' is not a power of two
`align' value conflicts with section start address
argument to `valign' is not a power of two
`valign' value conflicts with `vstart' address
cannot combine `start' and `follows' section attributes
section start address redefined
`start' address conflicts with section alignment
cannot combine `vstart' and `vfollows' section attributes
section virtual start address (vstart) redefined
`vstart' address conflicts with `valign' value
expecting section name for `follows' attribute
expecting section name for `vfollows' attribute
len <= 255
%02X
%02X
:%02X%04X%02X
S%c%02X%0*X
binary format does not support any special symbol types
unrecognised special symbol `%s'
binary output format does not support common variables
addr <= s->start
WRT not supported by binary output format
attempt to assemble code in [ABSOLUTE] space
attempt to initialize memory in a nobits section: ignored
binary output format does not support segment base references
binary output format does not support external references
uninitialized space declared in %s section: zeroing
unsupported relocation type %d
code directed to nonexistent segment?
not defined
Motorola S-records
srec
Intel hex
flat-form binary files (e.g. DOS .COM, .SYS)
..gotpc
..gotoff
..got
..plt
..sym
unrecognised special symbol `%s'
cannot use relocatable expression as symbol size
function
data
object
unrecognised symbol type `%.*s'
Linux a.out does not support symbol size information
no special symbol features supported here
unable to find a suitable global symbol for this reference
code
attempt to assemble code in [ABSOLUTE] space
attempt to assemble code in segment %d: defaulting to `.text'
attempt to initialize memory in the BSS section: ignored
uninitialized space declared in %s section: zeroing
OUT_RAWDATA with other than NO_SEG
a.out format does not support segment base references
Linux a.out format does not support any use of WRT
`..gotoff' relocations require a non-global symbol in the section
a.out format cannot produce non-PC-relative PLT references
a.out format does not support this use of WRT
intra-segment OUT_REL2ADR
a.out format cannot produce PC-relative GOT references
intra-segment OUT_REL4ADR
.data
.bss
.text
NetBSD/FreeBSD a.out object files
aoutb
Linux a.out object files
aout
.obj
COFF format does not support any special symbol types
..imagebase
unrecognized special symbol `%s'
-export:
@feat.00
Too many relocations (%d) for section `%s'
.file
.absolut
.text
`export' directive requires export name
unrecognized export qualifier `%s'
.drectve
.sxdata
`safeseh' directive requires valid symbol
COFF section names limited to 8 characters:  truncating
code
text
data
rdata
standard COFF does not support read-only data sections
info
standard COFF does not support informational sections
align=
standard COFF does not support section alignment specification
0123456789
argument to `align' is not numeric
argument to `align' is not a power of two
Win32 cannot align sections to better than 64-byte boundaries
.data
.rdata
.bss
.pdata
.xdata
section attributes ignored on redeclaration of section `%s'
WRT not supported by COFF output formats
attempt to assemble code in [ABSOLUTE] space
strange segment conditions in COFF driver
attempt to initialize memory in BSS section `%s': ignored
uninitialised space declared in non-BSS section `%s': zeroing
OUT_RAWDATA with other than NO_SEG
COFF format does not support non-32-bit relocations
COFF format does not support WRT types
COFF format does not support segment base references
operand size mismatch: 'wrt ..imagebase' is a 32-bit operand
COFF format does not support 16-bit relocations
intra-segment OUT_REL4ADR
Win32 COFF does not correctly support relative references to absolute addresses
Microsoft Win64 (x86-64) object files
win64
Microsoft Win32 (i386) object files
win32
COFF (i386) object files (e.g. DJGPP for DOS)
coff
align
section align without value specified
section alignment %I64d is not a power of two
alloc
noalloc
exec
noexec
write
nowrite
progbits
nobits
Unknown section attribute '%s' ignored on declaration of section `%s'
`osabi' directive requires a parameter
valid osabi numbers are 0 to 255
invalid ABI version number (valid: 0 to 255)
.text
.rodata
.lrodata
.data
.ldata
.bss
.lbss
.tdata
.tbss
.comment
.shstrtab
.symtab
.strtab
.rel
.stab
.stabstr
.debug_aranges
.rela
.debug_pubnames
.debug_info
.debug_abbrev
.debug_line
.debug_frame
.debug_loc
attempt to redefine reserved sectionname `%s'
.text
incompatible section attributes ignored on redeclaration of section `%s'
..gotpc
..gotoff
..got
..plt
..sym
..tlsie
unrecognised special symbol `%s'
cannot use relocatable expression as symbol size
strange segment conditions in ELF driver
alignment constraint `%s' is not a valid number
alignment constraint `%s' is not a power of two
function
data
object
notype
unrecognised symbol type `%.*s'
default
internal
hidden
protected
no special symbol features supported here
unable to find a suitable global symbol for this reference
attempt to assemble code in [ABSOLUTE] space
attempt to initialize memory in BSS section `%s': ignored
uninitialized space declared in non-BSS section `%s': zeroing
OUT_RAWDATA with other than NO_SEG
ELF format does not support segment base references
ELF format cannot produce non-PC-relative PLT references
ELF format does not support this use of WRT
Unsupported non-32-bit ELF relocation
segment != segto
output/outelf32.c
8- or 16-bit relocations in ELF is a GNU extension
intra-segment OUT_REL4ADR
ELF format cannot produce PC-relative GOT references
32-bit ELF format does not support 64-bit relocations
8- or 16-bit relocations in ELF32 is a GNU extension
ELF32 (i386) object files (e.g. Linux)
elf32
ELF32 (i386) stabs debug format for Linux/Unix
stabs
ELF32 (i386) dwarf debug format for Linux/Unix
dwarf
.shstrtab
.symtab
.strtab
.rela
.stab
.stabstr
.rel
.debug_aranges
.debug_pubnames
.debug_info
.debug_abbrev
.debug_line
.debug_frame
.debug_loc
attempt to redefine reserved sectionname `%s'
.text
incompatible section attributes ignored on redeclaration of section `%s'
..gotpc
..gotoff
..got
..plt
..sym
..gottpoff
unrecognised special symbol `%s'
cannot use relocatable expression as symbol size
strange segment conditions in ELF driver
alignment constraint `%s' is not a valid number
alignment constraint `%s' is not a power of two
function
data
object
notype
unrecognised symbol type `%.*s'
default
internal
hidden
protected
no special symbol features supported here
invalid access to an external symbol
unable to find a suitable global symbol for this reference
attempt to assemble code in [ABSOLUTE] space
attempt to initialize memory in BSS section `%s': ignored
Beeb
uninitialized space declared in non-BSS section `%s': zeroing
OUT_RAWDATA with other than NO_SEG
ELF format does not support segment base references
internal error elf64-hpa-871
ELF64 requires ..gotoff references to be qword
invalid ..got reference
internal error elf64-hpa-903
ELF format cannot produce non-PC-relative PLT references
ELF format does not support this use of WRT
intra-segment OUT_REL1ADR
Unsupported non-32-bit ELF relocation
intra-segment OUT_REL4ADR
ELF64 format does not support segment base references
ELF64 requires ..gotoff references to be qword absolute
ELF64 format does not support this use of WRT
intra-segment OUT_REL8ADR
ELF64 requires ..gotoff references to be absolute
ELF64 requires ..gottpoff references to be dword
ELF64 (x86_64) object files (e.g. Linux)
elf64
ELF64 (x86-64) stabs debug format for Linux/Unix
stabs
ELF64 (x86-64) dwarf debug format for Linux/Unix
dwarf
.shstrtab
.symtab
.strtab
.rela
.stab
.stabstr
.rel
.debug_aranges
.debug_pubnames
.debug_info
.debug_abbrev
.debug_line
.debug_frame
.debug_loc
attempt to redefine reserved sectionname `%s'
.text
incompatible section attributes ignored on redeclaration of section `%s'
..gotpc
..gotoff
..got
..plt
..sym
..gottpoff
unrecognised special symbol `%s'
cannot use relocatable expression as symbol size
strange segment conditions in ELF driver
alignment constraint `%s' is not a valid number
alignment constraint `%s' is not a power of two
function
data
object
notype
unrecognised symbol type `%.*s'
default
internal
hidden
protected
no special symbol features supported here
invalid access to an external symbol
unable to find a suitable global symbol for this reference
attempt to assemble code in [ABSOLUTE] space
attempt to initialize memory in BSS section `%s': ignored
uninitialized space declared in non-BSS section `%s': zeroing
OUT_RAWDATA with other than NO_SEG
ELF format does not support segment base references
internal error elfx32-hpa-871
ELFX32 doesn't support R_X86_64_GOTOFF64
invalid ..got reference
internal error elfx32-hpa-903
ELF format cannot produce non-PC-relative PLT references
ELF format does not support this use of WRT
intra-segment OUT_REL1ADR
Unsupported non-32-bit ELF relocation
intra-segment OUT_REL4ADR
ELFX32 format does not support segment base references
invalid ..gotoff reference
ELFX32 format does not support this use of WRT
32-bit ELF format does not support 64-bit relocations
ELFX32 (x86_64) object files (e.g. Linux)
elfx32
ELFX32 (x86-64) stabs debug format for Linux/Unix
stabs
ELFX32 (x86-64) dwarf debug format for Linux/Unix
dwarf
.obj
group `%s' defined twice
segment `%s' is already part of a group: first one takes precedence
`import' directive requires symbol name and library name
`export' directive requires export name
resident
nodata
parm=
value `%s' for `parm' is non-numeric
unrecognised export qualifier `%s'
segment attributes specified on redeclaration of segment: ignoring
private
public
common
stack
use16
use32
flat
FLAT
class=
overlay=
align=
segment alignment should be numeric
OBJ format does not support alignment of 8: rounding up to 16
OBJ format does not support alignment of %d: rounding up to 256
OBJ format does not support alignment of %d: rounding up to 4096
invalid alignment value %d
absolute=
argument to `absolute' segment attribute should be numeric
failure to define FLAT?!
__NASMDEFSEG
strange segment conditions in OBJ driver
lineno directed to nonexistent segment?
attempt to assemble code in [ABSOLUTE] space
relative call to absolute address not supported by OBJ format
far-absolute relocations not supported by OBJ format
OBJ format can only handle 16- or 32-byte relocations
OBJ format cannot handle complex dword-size segment base references
`obj' output driver does not support %d-bit relocations
OBJ: 4-byte segment base fixup got through sanity check
unrecognised segment value in obj_write_fixup
default WRT specification for external `%s' unresolved
unrecognised WRT value in obj_write_fixup
Relocation type not supported by output format
code directed to nonexistent segment?
pass0 == 0
output/outobj.c
..start
unrecognised special symbol `%s'
OBJ supports no special symbol features for this symbol type
`:' expected in special symbol text for `%s'
`%s': `far' keyword may only be applied to common variables
near
cannot use relocatable expression as common-variable element size
`%s': element-size specifications only apply to common variables
segment `%s' requires more alignment than OBJ format supports
group `%s' contains undefined segment `%s'
start_of_program
entry point is not in this module
Borland Debug Records
borland
MS-DOS 16-bit/32-bit OMF object files
as86 format does not support any special symbol types
..start
unrecognised special symbol `%s'
code
data
WRT not supported by as86 output format
attempt to assemble code in [ABSOLUTE] space
attempt to assemble code in segment %d: defaulting to `.text'
attempt to initialize memory in the BSS section: ignored
uninitialized space declared in %s section: zeroing
OUT_RAWDATA with other than NO_SEG
as86 format does not support segment base references
intra-segment OUT_REL2ADR
intra-segment OUT_REL4ADR
bizarre relocation size %d
.data
.bss
.text
Linux as86 (bin86 version 0.3) object files
as86
.rdf
can't find segment %d
.text
.data
.bss
rdf segment numbers not allocated as expected (%d,%d,%d)
value following comma must be numeric
unrecognised RDF segment type (%s)
segment attributes specified on redeclaration of segment
new segment declared without type code
reached compiled-in maximum segment limit (%d)
seg_alloc() returned odd number
label size exceeds %d bytes
zero-length label
alignment constraint `%s' is not a valid number
alignment constraint `%s' is not a power of two
export
import
near
proc
function
data
object
unrecognised symbol type `%s'
unrecognised special symbol `%s'
symbol type conflict - EXTERN cannot be EXPORT
symbol type conflict - GLOBAL cannot be IMPORT
attempt to assemble code in ABSOLUTE space
WRT not supported by rdf output format
BSS segments may not be initialized
OUT_RAWDATA with other than NO_SEG
intra-segment OUT_REL2ADR
intra-segment OUT_REL4ADR
erm... 4 byte segment base ref?
specified segment not supported by rdf output format
name size exceeds %d bytes
RDOFF2
Relocatable Dynamic Object File Format v2.0
null
text
code
comment
lcomment
pcomment
symdebug
linedebug
.dbg
directive [%s] value [%s] (pass %d)
set alignment (%d) for segment (%u)
local
common
global
deflabel %s := %08x:%016I64x %s (%d)%s%s
new type: %s(%X)
dbgdirective [%s] value [%s]
dbglabel %s := %08x:%016I64x %s (%d)%s%s
dbglinenum %s(%d) := %08x
section_name on init: returning %d
section_name %s (pass %d): returning %d
NASM Output format debug dump
   With debug info
out to %x, len = %d: 
addr %08x (seg %08x, wrt %08x)
out to %x, len = %I64u: 
reserved.
raw data = 
%02x 
rel1adr %02x (seg %08x)
rel2adr %04x (seg %08x)
rel4adr %08x (seg %08x)
rel8adr %016I64x (seg %08x)
unknown
Trace of all info passed to debug stage
debug
unknown
label
byte
word
dword
float
qword
tbyte
Trace of all info passed to output stage
%02X
segment attributes specified on redeclaration of segment: ignoring
private
public
common
use16
use32
align=
segment alignment should be numeric
invalid alignment value %d
absolute=
argument to `absolute' segment attribute should be numeric
??LINE
Source of WRT must be an offset
target of WRT must be a section 
Segment of a rel not supported in ieee_write_fixup
unrecognised segment value in ieee_write_fixup
IEEE format can only handle 2-byte segment base references
unrecognised WRT value in ieee_write_fixup
attempt to assemble code in [ABSOLUTE] space
__NASMDEFSEG
strange segment conditions in IEEE driver
relative call to absolute address not supported by IEEE format
code directed to nonexistent segment?
unrecognised symbol type `%s'
..start
CS%02X.
MBFNASM,%02X%s.
CO0,%02X%s.
AD8,4,L.
DT%04d%02d%02d%02d%02d%02d.
CO101,07ENDHEAD.
C0105,%02X%s.
ST%X,A,%02X%s.
ASL%X,%lX.
ST%X,%c,%02X%s.
SA%X,%lX.
ASS%X,%X.
NI%X,%02X%s.
ASI%X,R%X,%lX,+.
ASI%X,%lX,%lX,+.
ATI%X,T%X.
ATI%X,%X.
CO100,06ENDSYM.
NX%X,%02X%s.
TY%X,20,%X,%lX.
NN%X,%02X%s.
ASN%X,R%X,%lX,+.
ASN%X,%lX,%lX,+.
ATN%X,T%X.
ATN%X,%X.
SB%X.
L%X,10,/
R%X,%X,+
R%X,%X,+,P,-,%X,-
R%X,%X,+,L%X,+,%X,-
R%X,%X,+,L%X,+,L%X,-
X%X,P,-,%X,-
Y%X,10,/
X%X,Y%X,+,%X,-
X%X,Y%X,+,L%X,-
LR(%s,%X).
Start address records are incorrect
ASG,R%X,%lX,+.
strange segment conditions in OBJ driver
lineno directed to nonexistent segment?
IEEE-695 (LADsoft variant) object file format
ieee
LADsoft Debug Records
ladsoft
.text
align=
Borrow or rob
unknown or missing alignment value "%s" specified for section "%s"
alignment of %d (for section "%s") is not a power of two
section "%s" has already been specified with alignment %d, conflicts with new alignment of %d
data
unknown section attribute %s for section %s
invalid section name %s
too many sections (>255) - clipped by fileindex
WRT not supported by Mach-O output format
attempt to assemble code in [ABSOLUTE] space
text section not found
__bss
__DATA
attempt to initialize memory in the BSS section: ignored
uninitialized space declared in %s section: zeroing
OUT_RAWDATA with other than NO_SEG
Mach-O format does not support section base references
intra-section OUT_REL2ADR
intra-section OUT_REL4ADR
unknown output type?
attempt to assemble code in section %d: defaulting to `.text'
__text
__TEXT
The Mach-O output format does not support any special symbol types
The Mach-O format does not (yet) support forward reference fixups.
in-file index for section %d not found
no sections?
NeXTstep/OpenStep/Rhapsody/Darwin/MacOS X (i386) object files
macho32
.data
__data
.rodata
__const
.bss
.text
align=
unknown or missing alignment value "%s" specified for section "%s"
alignment of %d (for section "%s") is not a power of two
section "%s" has already been specified with alignment %d, conflicts with new alignment of %d
data
unknown section attribute %s for section %s
invalid section name %s
..gotpcrel
too many sections (>255) - clipped by fileindex
No section for index %x offset %llx found
The Mach-O output format does not support any special symbol types
The Mach-O format does not (yet) support forward reference fixups.
unrecognized special symbol `%s'
in-file index for section %d not found
no sections?
attempt to assemble code in [ABSOLUTE] space
text section not found
__bss
__DATA
attempt to initialize memory in the BSS section: ignored
uninitialized space declared in %s section: zeroing
OUT_RAWDATA with other than NO_SEG
Mach-O format does not support section base references
Mach-O 64-bit format does not support 32-bit absolute addresses
Mach-O format does not support this use of WRT
intra-section OUT_REL2ADR
Unsupported non-32-bit Macho-O relocation [2]
intra-section OUT_REL4ADR
unknown output type?
attempt to assemble code in section %d: defaulting to `.text'
__text
__TEXT
NeXTstep/OpenStep/Rhapsody/Darwin/MacOS X (x86_64) object files
macho64
Eleele
.data
__data
.rodata
__const
.bss
%s%s
ret > 0 && (size_t)ret == len
output/codeview.c
.debug$S
.debug$T
.text
!"relocation for unregistered symbol"
unable to hash file %s. Debug information may be unavailable.
out_len == obj_length
!"neither win32 nor win64 are set!"
The Netwide Assembler 2.12rc2
!"unknown symbol type"
out_len == sym_length
Codeview 8
(%s:%d) %s
braces do not enclose all of macro parameter
unable to open include file `%s'
`%s': context stack is empty
`%s': context stack is only %d level%s deep
single-line macro `%s' defined both with and without parameters
NUL character in %! string
nonexistent environment variable `%s'
..@%u.
%I64d
unable to open input file `%s'
__PASS__
NUL character in `%s' directive
reached maximum recursion depth of %i
macro `%s' exists, but not taking %d parameters
end of file while still defining macro `%s'
end of file while still in %%rep
%include
unterminated %[ construct
unterminated %! string
unterminated string
unterminated %{ construct
No lvalue found on pasting
%undef
%define
pre-defining non ID `%s'
interminable macro recursion
__FILE__
__LINE__
__BITS__
macro call expects terminating `)'
`%s' expects context identifiers
`%s' expects macro identifiers
`%s' expects environment variable names
`%s': more than one comma on line
`%s' expects a macro name
`%s' expects a parameter count or nothing
unable to parse parameter count `%s'
`%s' expects a parameter count after `-'
minimum parameter count exceeds maximum
trailing garbage after %%ifmacro ignored
trailing garbage after expression ignored
non-constant value given to `%s'
preprocessor directive `%s' not yet implemented
`%s' expects two comma-separated arguments
`%s' expects a parameter count
.nolist
too many default macro parameters
..@%I64u.
macro parameter %d is not a condition code
condition code `%s' is not invertible
`%%{%s}': macro parameters out of range
`%s': not in a macro call
anonymous
unknown preprocessor directive `%s'
`%%stacksize' missing size parameter
flat
flat64
large
small
`%%stacksize' invalid size type
`%%arg' missing argument parameter
Syntax error processing `%%arg' directive
`%%arg' missing size type parameter
Invalid size type for `%%arg' missing directive
%%define %s (%s+%d)
`%%local' missing argument parameter
Syntax error processing `%%local' directive
`%%local' missing size type parameter
Invalid size type for `%%local' missing directive
%%define %s (%s-%d)
%%assign %%$localsize %%$localsize+%d
trailing garbage after `%%clear' ignored
`%%depend' expects a file name
trailing garbage after `%%depend' ignored
`%%include' expects a file name
trailing garbage after `%%include' ignored
`%%use' expects a package name
trailing garbage after `%%use' ignored
unknown `%%use' package: %s
`%s' expects a context identifier
trailing garbage after `%s' ignored
`%%pop' in wrong context: %s, expected %s
`%s': no matching `%%if'
`%%elif' after `%%else' ignored
trailing garbage after `%%else' ignored
`%%else': no matching `%%if'
`%%else' after `%%else' ignored.
trailing garbage after `%%endif' ignored
`%%endif': no matching `%%if'
`%s': already defining a macro
redefining multi-line macro `%s'
`%s': not defining a macro
`%%rotate' missing rotate count
non-constant value given to `%%rotate'
`%%rotate' invoked within macro without parameters
non-constant value given to `%%rep'
`%%rep' value exceeds limit
`%%endrep': no matching `%%rep'
`%s' expects a macro identifier
parameter identifier expected
`%s': parameter identifier expected
`)' expected to terminate macro template
`%%undef' expects a macro identifier
trailing garbage after macro name ignored
`%s' expects a macro identifier as first parameter
`%s` requires string as second parameter
`%%pathsearch' expects a macro identifier as first parameter
`%%pathsearch' expects a file name
trailing garbage after `%%pathsearch' ignored
`%%strlen' expects a macro identifier as first parameter
`%%strlen` requires string as second parameter
`%%strcat' expects a macro identifier as first parameter
non-string passed to `%%strcat' (%d)
`%%substr' expects a macro identifier as first parameter
`%%substr` requires string as second parameter
non-constant value given to `%%substr`
`%%%sassign' expects a macro identifier
non-constant value given to `%%%sassign'
`%%line' expects line number
`%%line' expects line increment
`%%rotate' invoked outside a macro call
`%%rep' expects a repeat count
`%%exitrep' not within `%%rep' block
defining with name in expansion
`%%rep' without `%%endrep' within expansion of macro `%s'
0123456789 
%%line %d %.*s
expected `%%endif' before end of file
macro params should be enclosed in braces
byte
dword
oword
qword
tword
word
yword
elif
else
endif
ifdef
ifdifi
ifndef
include
local
ecxz
rcxz
(size_t)(q-nstr) == qlen+3
quote.c
%elif
%elifn
%elifctx
%elifnctx
%elifdef
%elifndef
%elifempty
%elifnempty
%elifenv
%elifnenv
%elifid
%elifnid
%elifidn
%elifnidn
%elifidni
%elifnidni
%elifmacro
%elifnmacro
%elifnum
%elifnnum
%elifstr
%elifnstr
%eliftoken
%elifntoken
%ifn
%ifctx
%ifnctx
%ifdef
%ifndef
%ifempty
%ifnempty
%ifenv
%ifnenv
%ifid
%ifnid
%ifidn
%ifnidn
%ifidni
%ifnidni
%ifmacro
%ifnmacro
%ifnum
%ifnnum
%ifstr
%ifnstr
%iftoken
%ifntoken
%arg
%assign
%clear
%define
%defstr
%deftok
%depend
%else
%endif
%endm
%endmacro
%endrep
%error
%exitmacro
%exitrep
%fatal
%iassign
%idefine
%idefstr
%ideftok
%imacro
%include
%irmacro
%ixdefine
%line
%local
%macro
%pathsearch
%pop
%push
%rep
%repl
%rmacro
%rotate
%stacksize
%strcat
%strlen
%substr
%undef
%unimacro
%unmacro
%use
%warning
%xdefine
altreg
ifunc
smartalign
__SECT__ [section .text]
library 1+.nolist
[library %1]
module 1+.nolist
[module %1]
__NASM_CDecl__ 1
__SECT__ [section .text]
group 1+.nolist
[group %1]
uppercase 0+.nolist
[uppercase %1]
export 1+.nolist
[export %1]
import 1+.nolist
[import %1]
__NASM_CDecl__ 1
__SECT__ [section .text]
__NASM_CDecl__ 1
__SECT__ [section .text]
__NASM_CDecl__ 1
$_%1 $%1
osabi 1+.nolist
[osabi %1]
__SECT__ [section .text]
__NASM_CDecl__ 1
export 1+.nolist
[export %1]
safeseh 1.nolist
[safeseh %1]
__SECT__ [section .text]
org 1+.nolist
[org %1]
__NASM_CDecl__ 1
__SECT__ [section .text]
__NASM_CDecl__ 1
__SECT__ [section .text]
__NASM_CDecl__ 1
__USE_SMARTALIGN__
alignmode 1-2.nolist
%1,nop
__ALIGN_JMP_THRESHOLD__ 16
__ALIGN_16BIT_1B__ 0x90
__ALIGN_16BIT_GROUP__ 1
__ALIGN_32BIT_1B__ 0x90
__ALIGN_32BIT_GROUP__ 1
__ALIGN_64BIT_1B__ 0x90
__ALIGN_64BIT_GROUP__ 1
%1,generic
__ALIGN_JMP_THRESHOLD__ 8
__ALIGN_16BIT_1B__ 0x90
__ALIGN_16BIT_2B__ 0x89,0xf6
__ALIGN_16BIT_3B__ 0x8d,0x74,0x00
__ALIGN_16BIT_4B__ 0x8d,0xb4,0x00,0x00
__ALIGN_16BIT_5B__ 0x8d,0xb4,0x00,0x00,0x90
__ALIGN_16BIT_6B__ 0x8d,0xb4,0x00,0x00,0x89,0xff
__ALIGN_16BIT_7B__ 0x8d,0xb4,0x00,0x00,0x8d,0x7d,0x00
__ALIGN_16BIT_8B__ 0x8d,0xb4,0x00,0x00,0x8d,0xbd,0x00,0x00
__ALIGN_16BIT_GROUP__ 8
__ALIGN_32BIT_1B__ 0x90
__ALIGN_32BIT_2B__ 0x89,0xf6
__ALIGN_32BIT_3B__ 0x8d,0x76,0x00
__ALIGN_32BIT_4B__ 0x8d,0x74,0x26,0x00
__ALIGN_32BIT_5B__ 0x90,0x8d,0x74,0x26,0x00
__ALIGN_32BIT_6B__ 0x8d,0xb6,0x00,0x00,0x00,0x00
__ALIGN_32BIT_7B__ 0x8d,0xb4,0x26,0x00,0x00,0x00,0x00
__ALIGN_32BIT_GROUP__ 7
__ALIGN_64BIT_1B__ 0x90
__ALIGN_64BIT_2B__ 0x66,0x90
__ALIGN_64BIT_3B__ 0x66,0x66,0x90
__ALIGN_64BIT_4B__ 0x66,0x66,0x66,0x90
__ALIGN_64BIT_GROUP__ 4
%1,k8
__ALIGN_JMP_THRESHOLD__ 16
__ALIGN_16BIT_1B__ 0x90
__ALIGN_16BIT_2B__ 0x66,0x90
__ALIGN_16BIT_3B__ 0x66,0x66,0x90
__ALIGN_16BIT_4B__ 0x66,0x66,0x66,0x90
__ALIGN_16BIT_GROUP__ 4
__ALIGN_32BIT_1B__ 0x90
__ALIGN_32BIT_2B__ 0x66,0x90
__ALIGN_32BIT_3B__ 0x66,0x66,0x90
__ALIGN_32BIT_4B__ 0x66,0x66,0x66,0x90
__ALIGN_32BIT_GROUP__ 4
__ALIGN_64BIT_1B__ 0x90
__ALIGN_64BIT_2B__ 0x66,0x90
__ALIGN_64BIT_3B__ 0x66,0x66,0x90
__ALIGN_64BIT_4B__ 0x66,0x66,0x66,0x90
__ALIGN_64BIT_GROUP__ 4
%1,k7
__ALIGN_JMP_THRESHOLD__ 16
__ALIGN_16BIT_1B__ 0x90
__ALIGN_16BIT_2B__ 0x66,0x90
__ALIGN_16BIT_3B__ 0x66,0x66,0x90
__ALIGN_16BIT_4B__ 0x66,0x66,0x66,0x90
__ALIGN_64BIT_GROUP__ 4
__ALIGN_32BIT_1B__ 0x90
__ALIGN_32BIT_2B__ 0x8b,0xc0
__ALIGN_32BIT_3B__ 0x8d,0x04,0x20
__ALIGN_32BIT_4B__ 0x8d,0x44,0x20,0x00
__ALIGN_32BIT_5B__ 0x8d,0x44,0x20,0x00,0x90
__ALIGN_32BIT_6B__ 0x8d,0x80,0x00,0x00,0x00,0x00
__ALIGN_32BIT_7B__ 0x8d,0x04,0x05,0x00,0x00,0x00,0x00
__ALIGN_32BIT_GROUP__ 7
__ALIGN_64BIT_1B__ 0x90
__ALIGN_64BIT_2B__ 0x66,0x90
__ALIGN_64BIT_3B__ 0x66,0x66,0x90
__ALIGN_64BIT_4B__ 0x66,0x66,0x66,0x90
__ALIGN_64BIT_GROUP__ 4
%1,p6
__ALIGN_JMP_THRESHOLD__ 16
__ALIGN_16BIT_1B__ 0x90
__ALIGN_16BIT_2B__ 0x66,0x90
__ALIGN_16BIT_3B__ 0x0f,0x1f,0x00
__ALIGN_16BIT_4B__ 0x0f,0x1f,0x40,0x00
__ALIGN_16BIT_GROUP__ 4
__ALIGN_32BIT_1B__ 0x90
__ALIGN_32BIT_2B__ 0x66,0x90
__ALIGN_32BIT_3B__ 0x0f,0x1f,0x00
__ALIGN_32BIT_4B__ 0x0f,0x1f,0x40,0x00
__ALIGN_32BIT_5B__ 0x0f,0x1f,0x44,0x00,0x00
__ALIGN_32BIT_6B__ 0x66,0x0f,0x1f,0x44,0x00,0x00
__ALIGN_32BIT_7B__ 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
__ALIGN_32BIT_8B__ 0x0f,0x1f,0x84,0x00,0x00,0x00,0x00,0x00
__ALIGN_32BIT_GROUP__ 8
__ALIGN_64BIT_1B__ 0x90
__ALIGN_64BIT_2B__ 0x66,0x90
__ALIGN_64BIT_3B__ 0x0f,0x1f,0x00
__ALIGN_64BIT_4B__ 0x0f,0x1f,0x40,0x00
__ALIGN_64BIT_5B__ 0x0f,0x1f,0x44,0x00,0x00
__ALIGN_64BIT_6B__ 0x66,0x0f,0x1f,0x44,0x00,0x00
__ALIGN_64BIT_7B__ 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
__ALIGN_64BIT_8B__ 0x0f,0x1f,0x84,0x00,0x00,0x00,0x00,0x00
__ALIGN_64BIT_GROUP__ 8
unknown alignment mode: %1
%2,nojmp
__ALIGN_JMP_THRESHOLD__ -1
__ALIGN_JMP_THRESHOLD__ %2
__ALIGNMODE__ %1,__ALIGN_JMP_THRESHOLD__
align 1-2+.nolist
align 1-2+.nolist
sectalign %1
times (((%1) - (($-$$) % (%1))) % (%1)) %2
__PASS__ == 0 || __PASS__ == 3
times (((%1) - (($-$$) % (%1))) % (%1)) nop
%$pad (((%1) - (($-$$) % (%1))) % (%1))
__ALIGN_JMP_THRESHOLD__ != -1 && %$pad > __ALIGN_JMP_THRESHOLD__
jmp %$end
times (((%1) - (($-$$) % (%1))) % (%1)) nop
%$end:
times (%$pad / __ALIGN_%[__BITS__]BIT_GROUP__) db __ALIGN_%[__BITS__]BIT_%[__ALIGN_%[__BITS__]BIT_GROUP__]B__
%$pad %$pad % __ALIGN_%[__BITS__]BIT_GROUP__
%$pad > 0
db __ALIGN_%[__BITS__]BIT_%[%$pad]B__
alignmode generic
__USE_IFUNC__
ilog2(x) (__ilog2e__(x))
ilog2e(x) (__ilog2e__(x))
ilog2w(x) (__ilog2w__(x))
ilog2f(x) (__ilog2f__(x))
ilog2c(x) (__ilog2c__(x))
__USE_FP__
Inf __Infinity__
NaN __QNaN__
QNaN __QNaN__
SNaN __SNaN__
float8(x) __float8__(x)
float16(x) __float16__(x)
float32(x) __float32__(x)
float64(x) __float64__(x)
float80m(x) __float80m__(x)
float80e(x) __float80e__(x)
float128l(x) __float128l__(x)
float128h(x) __float128h__(x)
__USE_ALTREG__
r8l r8b
r9l r9b
r10l r10b
r11l r11b
r12l r12b
r13l r13b
r14l r14b
r15l r15b
r0 rax
r1 rcx
r2 rdx
r3 rbx
r4 rsp
r5 rbp
r6 rsi
r7 rdi
r0d eax
r1d ecx
r2d edx
r3d ebx
r4d esp
r5d ebp
r6d esi
r7d edi
r0w ax
r1w cx
r2w dx
r3w bx
r4w sp
r5w bp
r6w si
r7w di
r0b al
r1b cl
r2b dl
r3b bl
r4b spl
r5b bpl
r6b sil
r7b dil
r0l al
r1l cl
r2l dl
r3l bl
r4l spl
r5l bpl
r6l sil
r7l dil
r0h ah
r1h ch
r2h dh
r3h bh
IDEAL
JUMPS
P386
P486
P586
__FILE__
__LINE__
__BITS__
__SECT__
section 1+.nolist
__SECT__ [section %1]
__SECT__
segment 1+.nolist
__SECT__ [segment %1]
__SECT__
__SECTALIGN_ALIGN_UPDATES_SECTION__ 1
sectalign 1.nolist
__SECTALIGN_ALIGN_UPDATES_SECTION__ = 1
[sectalign %1]
%1,off
__SECTALIGN_ALIGN_UPDATES_SECTION__ 0
%1,on
__SECTALIGN_ALIGN_UPDATES_SECTION__ 1
absolute 1+.nolist
__SECT__ [absolute %1]
__SECT__
struc 1-2.nolist 0
%$strucname %1
[absolute %2]
%$strucname:
endstruc 0.nolist
%{$strucname}_size equ ($-%$strucname)
__SECT__
istruc 1.nolist
%$strucname %1
%$strucstart:
at 1-2+.nolist
times (%1-%$strucname)-($-%$strucstart) db 0
iend 0.nolist
times %{$strucname}_size-($-%$strucstart) db 0
align 1-2+.nolist nop
sectalign %1
times (((%1) - (($-$$) % (%1))) % (%1)) %2
alignb 1-2+.nolist
sectalign %1
resb (((%1) - (($-$$) % (%1))) % (%1))
times (((%1) - (($-$$) % (%1))) % (%1)) %2
extern 1-*.nolist
[extern %1]
bits 1+.nolist
[bits %1]
use16 0.nolist
[bits 16]
use32 0.nolist
[bits 32]
use64 0.nolist
[bits 64]
global 1-*.nolist
[global %1]
common 1-*.nolist
[common %1]
cpu 1+.nolist
[cpu %1]
__FLOAT_DAZ__ nodaz
__FLOAT_ROUND__ near
__FLOAT__ __FLOAT_DAZ__,__FLOAT_ROUND__
float 1-*.nolist
[float %1]
%1,daz
__FLOAT_DAZ__ daz
%1,nodaz
__FLOAT_DAZ__ nodaz
%1,near
__FLOAT_ROUND__ near
%1,up
__FLOAT_ROUND__ up
%1,down
__FLOAT_ROUND__ down
%1,zero
__FLOAT_ROUND__ zero
%1,default
__FLOAT_DAZ__ nodaz
__FLOAT_ROUND__ near
default 1+.nolist
[default %1]
userel 0.nolist
[default rel]
useabs 0.nolist
Do nine men interpret Nine men I nod
[default abs]
usebnd 0.nolist
[default bnd]
usenobnd 0.nolist
[default nobnd]
incbin 1-2+.nolist 0
%$dep %1
%$dep
%? %$dep,%2
__NASM_MAJOR__ 2
__NASM_MINOR__ 11
__NASM_SUBMINOR__ 99
__NASM_PATCHLEVEL__ 92
__NASM_VERSION_ID__ 0020B635Ch
__NASM_VER__ "2.12rc2"
%6d 
%08X %-*s
%s<%d>
    
%6d          
 %s<%d>
     
  %s
%s%s
<incbin>
<rept>
size <= 8
listing.c
<res %08I64X>
unable to open listing file `%s'
0123456789ABCDEF
symbol references
`$$'
`~' operator may only be applied to scalar values
`!' operator may only be applied to scalar values
function may only be applied to scalar values
ilog2 argument is not a power of two
invalid IFUNC token %d
cannot apply SEG to a non-relocatable value
SEG applied to something which is already a segment base
unable to determine segment base
expecting `('
expecting floating-point number
expecting `)'
expecting string
invalid string for transform
character constant too long
%s not supported in preprocess-only mode
symbol `%s%s' undefined
symbol `%s%s' not defined before use
expression syntax error
division operator may only be applied to scalar values
division by zero
unable to multiply two non-scalar objects
shift operator may only be applied to scalar values
`&' operator may only be applied to scalar values
`^' operator may only be applied to scalar values
`|' operator may only be applied to scalar values
`%s': operands differ by a non-scalar
invalid right-hand operand to WRT
invalid decorator token inside braces
%s is not a valid decorator with braces
resb
resw
resd
resq
rest
reso
resy
resz
arpl
bb0_reset
bb1_reset
bound
bswap
call
cdqe
clts
cmpsb
cmpsd
cmpsq
cmpsw
cmpxchg
cmpxchg486
cmpxchg8b
cmpxchg16b
cpuid
cpu_read
cpu_write
cwde
dmint
emms
enter
f2xm1
fabs
fadd
faddp
fbld
fbstp
fchs
fclex
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcomip
fcomp
fcompp
fcos
fdecstp
fdisi
fdiv
fdivp
fdivr
fdivrp
femms
feni
ffree
ffreep
fiadd
ficom
ficomp
fidiv
fidivr
fild
fimul
fincstp
finit
fist
fistp
fisttp
fisub
fisubr
fld1
fldcw
fldenv
fldl2e
fldl2t
fldlg2
fldln2
fldpi
fldz
fmul
fmulp
fnclex
fndisi
fneni
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fsave
fscale
fsetpm
fsin
fsincos
fsqrt
fstcw
fstenv
fstp
fstsw
fsub
fsubp
fsubr
fsubrp
ftst
fucom
fucomi
fucomip
fucomp
fucompp
fxam
fxch
fxtract
fyl2x
fyl2xp1
ibts
icebp
idiv
imul
incbin
insb
insd
insw
int01
int1
int03
int3
into
invd
invpcid
invlpg
invlpga
iret
iretd
iretq
iretw
jcxz
jecxz
jrcxz
jmpe
lahf
leave
lfence
lgdt
lidt
lldt
lmsw
loadall
loadall286
lodsb
lodsd
lodsq
lodsw
loop
loope
loopne
loopnz
loopz
mfence
monitor
movd
movq
movsb
movsd
movsq
movsw
movsx
movsxd
movzx
mwait
outsb
outsd
outsw
packssdw
packsswb
packuswb
paddb
paddd
paddsb
paddsiw
paddsw
paddusb
paddusw
paddw
pand
pandn
pause
paveb
pavgusb
pcmpeqb
pcmpeqd
pcmpeqw
pcmpgtb
pcmpgtd
pcmpgtw
pdistib
pf2id
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
pi2fd
pmachriw
pmaddwd
pmagw
pmulhriw
pmulhrwa
pmulhrwc
pmulhw
pmullw
pmvgezb
pmvlzb
pmvnzb
pmvzb
popa
popad
popaw
popf
popfd
popfq
popfw
prefetch
prefetchw
pslld
psllq
psllw
psrad
psraw
psrld
psrlq
psrlw
psubb
psubd
psubsb
psubsiw
psubsw
psubusb
psubusw
psubw
punpckhbw
punpckhdq
punpckhwd
punpcklbw
punpckldq
punpcklwd
push
pusha
pushad
pushaw
pushf
pushfd
pushfq
pushfw
pxor
rdshr
rdmsr
rdpmc
rdtsc
rdtscp
retf
retn
rsdc
rsldt
rsts
sahf
salc
scasb
scasd
scasq
scasw
sfence
sgdt
shld
shrd
sidt
sldt
skinit
smint
smintold
smsw
stosb
stosd
stosq
stosw
svdc
svldt
svts
swapgs
syscall
sysenter
sysexit
sysret
test
ud2b
ud2a
umov
verr
verw
fwait
wbinvd
wrshr
wrmsr
xadd
xbts
xchg
xlatb
xlat
cmova
cmovae
cmovb
cmovbe
cmovc
cmove
cmovg
cmovge
cmovl
cmovle
cmovna
cmovnae
cmovnb
cmovnbe
cmovnc
cmovne
cmovng
cmovnge
cmovnl
cmovnle
cmovno
cmovnp
cmovns
cmovnz
cmovo
cmovp
cmovpe
cmovpo
cmovs
cmovz
jnae
jnbe
jnge
jnle
seta
setae
setb
setbe
setc
sete
setg
setge
setl
setle
setna
setnae
setnb
setnbe
setnc
setne
setng
setnge
setnl
setnle
setno
setnp
setns
setnz
seto
setp
setpe
setpo
sets
setz
addps
addss
andnps
andps
cmpeqps
cmpeqss
cmpleps
cmpless
cmpltps
cmpltss
cmpneqps
cmpneqss
cmpnleps
cmpnless
cmpnltps
cmpnltss
cmpordps
cmpordss
cmpunordps
cmpunordss
cmpps
cmpss
comiss
cvtpi2ps
cvtps2pi
cvtsi2ss
cvtss2si
cvttps2pi
cvttss2si
divps
divss
ldmxcsr
maxps
maxss
minps
minss
movaps
movhps
movlhps
movlps
movhlps
movmskps
movntps
movss
movups
mulps
mulss
orps
rcpps
rcpss
rsqrtps
rsqrtss
shufps
sqrtps
sqrtss
stmxcsr
subps
subss
ucomiss
unpckhps
unpcklps
xorps
fxrstor
fxrstor64
fxsave
fxsave64
xgetbv
xsetbv
xsave
xsave64
xsavec
xsavec64
xsaveopt
xsaveopt64
xsaves
xsaves64
xrstor
xrstor64
xrstors
xrstors64
prefetchnta
prefetcht0
prefetcht1
prefetcht2
maskmovq
movntq
pavgb
pavgw
pextrw
pinsrw
pmaxsw
pmaxub
pminsw
pminub
pmovmskb
pmulhuw
psadbw
pshufw
pf2iw
pfnacc
pfpnacc
pi2fw
pswapd
maskmovdqu
clflush
movntdq
movnti
movntpd
movdqa
movdqu
movdq2q
movq2dq
paddq
pmuludq
pshufd
pshufhw
pshuflw
pslldq
psrldq
psubq
punpckhqdq
punpcklqdq
addpd
addsd
andnpd
andpd
cmpeqpd
cmpeqsd
cmplepd
cmplesd
cmpltpd
cmpltsd
cmpneqpd
cmpneqsd
cmpnlepd
cmpnlesd
cmpnltpd
cmpnltsd
cmpordpd
cmpordsd
cmpunordpd
cmpunordsd
cmppd
comisd
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtps2dq
cvtps2pd
cvtsd2si
cvtsd2ss
cvtsi2sd
cvtss2sd
cvttpd2pi
cvttpd2dq
cvttps2dq
cvttsd2si
divpd
divsd
maxpd
maxsd
minpd
minsd
movapd
movhpd
movlpd
movmskpd
movupd
mulpd
mulsd
orpd
shufpd
sqrtpd
sqrtsd
subpd
subsd
ucomisd
unpckhpd
unpcklpd
xorpd
addsubpd
addsubps
haddpd
haddps
hsubpd
hsubps
lddqu
movddup
movshdup
movsldup
clgi
stgi
vmcall
vmclear
vmfunc
vmlaunch
vmload
vmmcall
vmptrld
vmptrst
vmread
vmresume
vmrun
vmsave
vmwrite
vmxoff
vmxon
invept
invvpid
pabsb
Degas are we not drawn onward no In union drawn onward to new eras aged
pabsw
pabsd
palignr
phaddw
phaddd
phaddsw
phsubw
phsubd
phsubsw
pmaddubsw
pmulhrsw
pshufb
psignb
psignw
psignd
extrq
insertq
movntsd
movntss
lzcnt
blendpd
blendps
blendvpd
blendvps
dppd
dpps
extractps
insertps
movntdqa
mpsadbw
packusdw
pblendvb
pblendw
pcmpeqq
pextrb
pextrd
pextrq
phminposuw
pinsrb
pinsrd
pinsrq
pmaxsb
pmaxsd
pmaxud
pmaxuw
pminsb
pminsd
pminud
pminuw
pmovsxbw
pmovsxbd
pmovsxbq
pmovsxwd
pmovsxwq
pmovsxdq
pmovzxbw
pmovzxbd
pmovzxbq
pmovzxwd
pmovzxwq
pmovzxdq
pmuldq
pmulld
ptest
roundpd
roundps
roundsd
roundss
crc32
pcmpestri
pcmpestrm
pcmpistri
pcmpistrm
pcmpgtq
popcnt
getsec
pfrcpv
pfrsqrtv
movbe
aesenc
aesenclast
aesdec
aesdeclast
aesimc
aeskeygenassist
vaesenc
vaesenclast
vaesdec
vaesdeclast
vaesimc
vaeskeygenassist
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vandpd
vandps
vandnpd
vandnps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastss
vbroadcastsd
vbroadcastf128
vcmpeq_ospd
vcmpeqpd
vcmplt_ospd
vcmpltpd
vcmple_ospd
vcmplepd
vcmpunord_qpd
vcmpunordpd
vcmpneq_uqpd
vcmpneqpd
vcmpnlt_uspd
vcmpnltpd
vcmpnle_uspd
vcmpnlepd
vcmpord_qpd
vcmpordpd
vcmpeq_uqpd
vcmpnge_uspd
vcmpngepd
vcmpngt_uspd
vcmpngtpd
vcmpfalse_oqpd
vcmpfalsepd
vcmpneq_oqpd
vcmpge_ospd
vcmpgepd
vcmpgt_ospd
vcmpgtpd
vcmptrue_uqpd
vcmptruepd
vcmplt_oqpd
vcmple_oqpd
vcmpunord_spd
vcmpneq_uspd
vcmpnlt_uqpd
vcmpnle_uqpd
vcmpord_spd
vcmpeq_uspd
vcmpnge_uqpd
vcmpngt_uqpd
vcmpfalse_ospd
vcmpneq_ospd
vcmpge_oqpd
vcmpgt_oqpd
vcmptrue_uspd
vcmppd
vcmpeq_osps
vcmpeqps
vcmplt_osps
vcmpltps
vcmple_osps
vcmpleps
vcmpunord_qps
vcmpunordps
vcmpneq_uqps
vcmpneqps
vcmpnlt_usps
vcmpnltps
vcmpnle_usps
vcmpnleps
vcmpord_qps
vcmpordps
vcmpeq_uqps
vcmpnge_usps
vcmpngeps
vcmpngt_usps
vcmpngtps
vcmpfalse_oqps
vcmpfalseps
vcmpneq_oqps
vcmpge_osps
vcmpgeps
vcmpgt_osps
vcmpgtps
vcmptrue_uqps
vcmptrueps
vcmplt_oqps
vcmple_oqps
vcmpunord_sps
vcmpneq_usps
vcmpnlt_uqps
vcmpnle_uqps
vcmpord_sps
vcmpeq_usps
vcmpnge_uqps
vcmpngt_uqps
vcmpfalse_osps
vcmpneq_osps
vcmpge_oqps
vcmpgt_oqps
vcmptrue_usps
vcmpps
vcmpeq_ossd
vcmpeqsd
vcmplt_ossd
vcmpltsd
vcmple_ossd
vcmplesd
vcmpunord_qsd
vcmpunordsd
vcmpneq_uqsd
vcmpneqsd
vcmpnlt_ussd
vcmpnltsd
vcmpnle_ussd
vcmpnlesd
vcmpord_qsd
vcmpordsd
vcmpeq_uqsd
vcmpnge_ussd
vcmpngesd
vcmpngt_ussd
vcmpngtsd
vcmpfalse_oqsd
vcmpfalsesd
vcmpneq_oqsd
vcmpge_ossd
vcmpgesd
vcmpgt_ossd
vcmpgtsd
vcmptrue_uqsd
vcmptruesd
vcmplt_oqsd
vcmple_oqsd
vcmpunord_ssd
vcmpneq_ussd
vcmpnlt_uqsd
vcmpnle_uqsd
vcmpord_ssd
vcmpeq_ussd
vcmpnge_uqsd
vcmpngt_uqsd
vcmpfalse_ossd
vcmpneq_ossd
vcmpge_oqsd
vcmpgt_oqsd
vcmptrue_ussd
vcmpsd
vcmpeq_osss
vcmpeqss
vcmplt_osss
vcmpltss
vcmple_osss
vcmpless
vcmpunord_qss
vcmpunordss
vcmpneq_uqss
vcmpneqss
vcmpnlt_usss
vcmpnltss
vcmpnle_usss
vcmpnless
vcmpord_qss
vcmpordss
vcmpeq_uqss
vcmpnge_usss
vcmpngess
vcmpngt_usss
vcmpngtss
vcmpfalse_oqss
vcmpfalsess
vcmpneq_oqss
vcmpge_osss
vcmpgess
vcmpgt_osss
vcmpgtss
vcmptrue_uqss
vcmptruess
vcmplt_oqss
vcmple_oqss
vcmpunord_sss
vcmpneq_usss
vcmpnlt_uqss
vcmpnle_uqss
vcmpord_sss
vcmpeq_usss
vcmpnge_uqss
vcmpngt_uqss
vcmpfalse_osss
vcmpneq_osss
vcmpge_oqss
vcmpgt_oqss
vcmptrue_usss
vcmpss
vcomisd
vcomiss
vcvtdq2pd
vcvtdq2ps
vcvtpd2dq
vcvtpd2ps
vcvtps2dq
vcvtps2pd
vcvtsd2si
vcvtsd2ss
vcvtsi2sd
vcvtsi2ss
vcvtss2sd
vcvtss2si
vcvttpd2dq
vcvttps2dq
vcvttsd2si
vcvttss2si
vdivpd
vdivps
vdivsd
vdivss
vdppd
vdpps
vextractf128
vextractps
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128
vinsertps
vlddqu
vldqqu
vldmxcsr
vmaskmovdqu
vmaskmovps
vmaskmovpd
vmaxpd
vmaxps
vmaxsd
vmaxss
vminpd
vminps
vminsd
vminss
vmovapd
vmovaps
vmovd
vmovq
vmovddup
vmovdqa
vmovqqa
vmovdqu
vmovqqu
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntqq
vmovntdqa
vmovntpd
vmovntps
vmovsd
vmovshdup
vmovsldup
vmovss
vmovupd
vmovups
vmpsadbw
vmulpd
vmulps
vmulsd
vmulss
vorpd
vorps
vpabsb
vpabsw
vpabsd
vpacksswb
vpackssdw
vpackuswb
vpackusdw
vpaddb
vpaddw
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpalignr
vpand
vpandn
vpavgb
vpavgw
vpblendvb
vpblendw
vpcmpestri
vpcmpestrm
vpcmpistri
vpcmpistrm
vpcmpeqb
vpcmpeqw
vpcmpeqd
vpcmpeqq
vpcmpgtb
vpcmpgtw
vpcmpgtd
vpcmpgtq
vpermilpd
vpermilps
vperm2f128
vpextrb
vpextrw
vpextrd
vpextrq
vphaddw
vphaddd
vphaddsw
vphminposuw
vphsubw
vphsubd
vphsubsw
vpinsrb
vpinsrw
vpinsrd
vpinsrq
vpmaddwd
vpmaddubsw
vpmaxsb
vpmaxsw
vpmaxsd
vpmaxub
vpmaxuw
vpmaxud
vpminsb
vpminsw
vpminsd
vpminub
vpminuw
vpminud
vpmovmskb
vpmovsxbw
vpmovsxbd
vpmovsxbq
vpmovsxwd
vpmovsxwq
vpmovsxdq
vpmovzxbw
vpmovzxbd
vpmovzxbq
vpmovzxwd
vpmovzxwq
vpmovzxdq
vpmulhuw
vpmulhrsw
vpmulhw
vpmullw
vpmulld
vpmuludq
vpmuldq
vpor
vpsadbw
vpshufb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignw
A Santa lives evil at NASA
vpsignd
vpslldq
vpsrldq
vpsllw
vpslld
vpsllq
vpsraw
vpsrad
vpsrlw
vpsrld
vpsrlq
vptest
vpsubb
vpsubw
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpunpckhbw
vpunpckhwd
vpunpckhdq
vpunpckhqdq
vpunpcklbw
vpunpcklwd
vpunpckldq
vpunpcklqdq
vpxor
vrcpps
vrcpss
vrsqrtps
vrsqrtss
vroundpd
vroundps
vroundsd
vroundss
vshufpd
vshufps
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestps
vtestpd
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
pclmullqlqdq
pclmulhqlqdq
pclmullqhqdq
pclmulhqhqdq
pclmulqdq
vpclmullqlqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmulhqhqdq
vpclmulqdq
vfmadd132ps
vfmadd132pd
vfmadd312ps
vfmadd312pd
vfmadd213ps
vfmadd213pd
vfmadd123ps
vfmadd123pd
vfmadd231ps
vfmadd231pd
vfmadd321ps
vfmadd321pd
vfmaddsub132ps
vfmaddsub132pd
vfmaddsub312ps
vfmaddsub312pd
vfmaddsub213ps
vfmaddsub213pd
vfmaddsub123ps
vfmaddsub123pd
vfmaddsub231ps
vfmaddsub231pd
vfmaddsub321ps
vfmaddsub321pd
vfmsub132ps
vfmsub132pd
vfmsub312ps
vfmsub312pd
vfmsub213ps
vfmsub213pd
vfmsub123ps
vfmsub123pd
vfmsub231ps
vfmsub231pd
vfmsub321ps
vfmsub321pd
vfmsubadd132ps
vfmsubadd132pd
vfmsubadd312ps
vfmsubadd312pd
vfmsubadd213ps
vfmsubadd213pd
vfmsubadd123ps
vfmsubadd123pd
vfmsubadd231ps
vfmsubadd231pd
vfmsubadd321ps
vfmsubadd321pd
vfnmadd132ps
vfnmadd132pd
vfnmadd312ps
vfnmadd312pd
vfnmadd213ps
vfnmadd213pd
vfnmadd123ps
vfnmadd123pd
vfnmadd231ps
vfnmadd231pd
vfnmadd321ps
vfnmadd321pd
vfnmsub132ps
vfnmsub132pd
vfnmsub312ps
vfnmsub312pd
vfnmsub213ps
vfnmsub213pd
vfnmsub123ps
vfnmsub123pd
vfnmsub231ps
vfnmsub231pd
vfnmsub321ps
vfnmsub321pd
vfmadd132ss
vfmadd132sd
vfmadd312ss
vfmadd312sd
vfmadd213ss
vfmadd213sd
vfmadd123ss
vfmadd123sd
vfmadd231ss
vfmadd231sd
vfmadd321ss
vfmadd321sd
vfmsub132ss
vfmsub132sd
vfmsub312ss
vfmsub312sd
vfmsub213ss
vfmsub213sd
vfmsub123ss
vfmsub123sd
vfmsub231ss
vfmsub231sd
vfmsub321ss
vfmsub321sd
vfnmadd132ss
vfnmadd132sd
vfnmadd312ss
vfnmadd312sd
vfnmadd213ss
vfnmadd213sd
vfnmadd123ss
vfnmadd123sd
vfnmadd231ss
vfnmadd231sd
vfnmadd321ss
vfnmadd321sd
vfnmsub132ss
vfnmsub132sd
vfnmsub312ss
vfnmsub312sd
vfnmsub213ss
vfnmsub213sd
vfnmsub123ss
vfnmsub123sd
vfnmsub231ss
vfnmsub231sd
vfnmsub321ss
vfnmsub321sd
rdfsbase
rdgsbase
rdrand
wrfsbase
wrgsbase
vcvtph2ps
vcvtps2ph
adcx
adox
rdseed
clac
stac
xstore
xcryptecb
xcryptcbc
xcryptctr
xcryptcfb
xcryptofb
montmul
xsha1
xsha256
llwpcb
slwpcb
lwpval
lwpins
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsubpd
vfmaddsubps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfrczpd
vfrczps
vfrczsd
vfrczss
vpcmov
vpcomb
vpcomd
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vphaddbd
vphaddbq
vphaddbw
vphadddq
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddwd
vphaddwq
vphsubbw
vphsubdq
vphsubwd
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpperm
vprotb
vprotd
vprotq
vprotw
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshlq
vpshlw
vbroadcasti128
vpblendd
vpbroadcastb
vpbroadcastw
vpbroadcastd
vpbroadcastq
vpermd
vpermpd
vpermps
vpermq
vperm2i128
vextracti128
vinserti128
vpmaskmovd
vpmaskmovq
vpsllvd
vpsllvq
vpsravd
vpsrlvd
vpsrlvq
vgatherdpd
vgatherqpd
vgatherdps
vgatherqps
vpgatherdd
vpgatherqd
vpgatherdq
vpgatherqq
xabort
xbegin
xend
xtest
andn
bextr
blci
blcic
blsi
blsic
blcfill
blsfill
blcmsk
blsmsk
blsr
blcs
bzhi
mulx
pdep
pext
rorx
sarx
shlx
shrx
tzcnt
tzmsk
t1mskc
prefetchwt1
bndmk
bndcl
bndcu
bndcn
bndmov
bndldx
bndstx
kaddb
kaddd
kaddq
kaddw
kandb
kandd
kandnb
kandnd
kandnq
kandnw
kandq
kandw
kmovb
kmovd
kmovq
kmovw
knotb
knotd
knotq
knotw
korb
kord
korq
kortestb
kortestd
kortestq
kortestw
korw
kshiftlb
kshiftld
kshiftlq
kshiftlw
kshiftrb
kshiftrd
kshiftrq
kshiftrw
ktestb
ktestd
ktestq
ktestw
kunpckbw
kunpckdq
kunpckwd
kxnorb
kxnord
kxnorq
kxnorw
kxorb
kxord
kxorq
kxorw
sha1msg1
sha1msg2
sha1nexte
sha1rnds4
sha256msg1
sha256msg2
sha256rnds2
valignd
valignq
vblendmpd
vblendmps
vbroadcastf32x2
vbroadcastf32x4
vbroadcastf32x8
vbroadcastf64x2
vbroadcastf64x4
vbroadcasti32x2
vbroadcasti32x4
vbroadcasti32x8
vbroadcasti64x2
vbroadcasti64x4
vcompresspd
vcompressps
vcvtpd2qq
vcvtpd2udq
vcvtpd2uqq
vcvtps2qq
vcvtps2udq
vcvtps2uqq
vcvtqq2pd
vcvtqq2ps
vcvtsd2usi
vcvtss2usi
vcvttpd2qq
vcvttpd2udq
vcvttpd2uqq
vcvttps2qq
vcvttps2udq
vcvttps2uqq
vcvttsd2usi
vcvttss2usi
vcvtudq2pd
vcvtudq2ps
vcvtuqq2pd
vcvtuqq2ps
vcvtusi2sd
vcvtusi2ss
vdbpsadbw
vexp2pd
vexp2ps
vexpandpd
vexpandps
vextractf32x4
vextractf32x8
vextractf64x2
vextractf64x4
vextracti32x4
vextracti32x8
vextracti64x2
vextracti64x4
vfixupimmpd
vfixupimmps
vfixupimmsd
vfixupimmss
vfpclasspd
vfpclassps
vfpclasssd
vfpclassss
alula
vgatherpf0dpd
vgatherpf0dps
vgatherpf0qpd
vgatherpf0qps
vgatherpf1dpd
vgatherpf1dps
vgatherpf1qpd
vgatherpf1qps
vgetexppd
vgetexpps
vgetexpsd
vgetexpss
vgetmantpd
vgetmantps
vgetmantsd
vgetmantss
vinsertf32x4
vinsertf32x8
vinsertf64x2
vinsertf64x4
vinserti32x4
vinserti32x8
vinserti64x2
vinserti64x4
vmovdqa32
vmovdqa64
vmovdqu16
vmovdqu32
vmovdqu64
vmovdqu8
vpabsq
vpandd
vpandnd
vpandnq
vpandq
vpblendmb
vpblendmd
vpblendmq
vpblendmw
vpbroadcastmb2q
vpbroadcastmw2d
vpcmpb
vpcmpd
vpcmpq
vpcmpub
vpcmpud
vpcmpuq
vpcmpuw
vpcmpw
vpcompressd
vpcompressq
vpconflictd
vpconflictq
vpermb
vpermi2b
vpermi2d
vpermi2pd
vpermi2ps
vpermi2q
vpermi2w
vpermt2b
vpermt2d
vpermt2pd
vpermt2ps
vpermt2q
vpermt2w
vpermw
vpexpandd
vpexpandq
vplzcntd
vplzcntq
vpmadd52huq
vpmadd52luq
vpmaxsq
vpmaxuq
vpminsq
vpminuq
vpmovb2m
vpmovd2m
vpmovdb
vpmovdw
vpmovm2b
vpmovm2d
vpmovm2q
vpmovm2w
vpmovq2m
vpmovqb
vpmovqd
vpmovqw
vpmovsdb
vpmovsdw
vpmovsqb
vpmovsqd
vpmovsqw
vpmovswb
vpmovusdb
vpmovusdw
vpmovusqb
vpmovusqd
vpmovusqw
vpmovuswb
vpmovw2m
vpmovwb
vpmullq
vpmultishiftqb
vpord
vporq
vprold
vprolq
vprolvd
vprolvq
vprord
vprorq
vprorvd
vprorvq
vpscatterdd
vpscatterdq
vpscatterqd
vpscatterqq
vpsllvw
vpsraq
vpsravq
vpsravw
vpsrlvw
vpternlogd
vpternlogq
vptestmb
vptestmd
vptestmq
vptestmw
vptestnmb
vptestnmd
vptestnmq
vptestnmw
vpxord
vpxorq
vrangepd
vrangeps
vrangesd
vrangess
vrcp14pd
vrcp14ps
vrcp14sd
vrcp14ss
vrcp28pd
vrcp28ps
vrcp28sd
vrcp28ss
vreducepd
vreduceps
vreducesd
vreducess
vrndscalepd
vrndscaleps
vrndscalesd
vrndscaless
vrsqrt14pd
vrsqrt14ps
vrsqrt14sd
vrsqrt14ss
vrsqrt28pd
vrsqrt28ps
vrsqrt28sd
vrsqrt28ss
vscalefpd
vscalefps
vscalefsd
vscalefss
vscatterdpd
vscatterdps
vscatterpf0dpd
vscatterpf0dps
vscatterpf0qpd
vscatterpf0qps
vscatterpf1dpd
vscatterpf1dps
vscatterpf1qpd
vscatterpf1qps
vscatterqpd
vscatterqps
vshuff32x4
vshuff64x2
vshufi32x4
vshufi64x2
rdpkru
wrpkru
clflushopt
hint_nop0
hint_nop1
hint_nop2
hint_nop3
hint_nop4
hint_nop5
hint_nop6
hint_nop7
hint_nop8
hint_nop9
hint_nop10
hint_nop11
hint_nop12
hint_nop13
hint_nop14
hint_nop15
hint_nop16
hint_nop17
hint_nop18
hint_nop19
hint_nop20
hint_nop21
hint_nop22
hint_nop23
hint_nop24
hint_nop25
hint_nop26
hint_nop27
hint_nop28
hint_nop29
hint_nop30
hint_nop31
hint_nop32
hint_nop33
hint_nop34
hint_nop35
hint_nop36
hint_nop37
hint_nop38
hint_nop39
hint_nop40
hint_nop41
hint_nop42
hint_nop43
hint_nop44
hint_nop45
hint_nop46
hint_nop47
hint_nop48
hint_nop49
hint_nop50
hint_nop51
hint_nop52
hint_nop53
hint_nop54
hint_nop55
hint_nop56
hint_nop57
hint_nop58
hint_nop59
hint_nop60
hint_nop61
hint_nop62
hint_nop63
r10b
r11b
r12b
r13b
r14b
r15b
r10w
r11w
r12w
r13w
r14w
r15w
r10d
r11d
r12d
r13d
r14d
r15d
segr6
segr7
cr10
cr11
cr12
cr13
cr14
cr15
dr10
dr11
dr12
dr13
dr14
dr15
xmm0
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
bnd0
bnd1
bnd2
bnd3
lock
repe
repne
repnz
repz
times
wait
xacquire
xrelease
nobnd
byte
dword
long
near
nosplit
oword
qword
short
strict
tword
word
yword
zword
__infinity__
__nan__
__qnan__
__snan__
__float8__
__float16__
__float32__
__float64__
__float80m__
__float80e__
__float128l__
__float128h__
__utf16__
__utf16le__
__utf16be__
__utf32__
__utf32le__
__utf32be__
__ilog2e__
__ilog2w__
__ilog2f__
__ilog2c__
1to2
1to4
1to8
1to16
rn-sae
rd-sae
ru-sae
rz-sae
evex
vex3
vex2
?-	m	^
%line
%d+%d %s
unable to open input file `%s'
Unknown error
_matherr(): %s in %s(%g, %g)  (retval=%g)
Argument domain error (DOMAIN)
Argument singularity (SIGN)
Overflow range error (OVERFLOW)
The result is too small to be represented (UNDERFLOW)
Total loss of significance (TLOSS)
Partial loss of significance (PLOSS)
Mingw-w64 runtime failure:
Address %p has no image-section
  VirtualQuery failed for %d bytes at address %p
  VirtualProtect failed with code 0x%x
  Unknown pseudo relocation protocol version %d.
  Unknown pseudo relocation bit size %d.
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.3 20140522 (Fedora MinGW 4.8.3-1.fc20)
GCC: (GNU) 4.8.4 20141219 (Fedora MinGW 4.8.4-1.fc20)
DeleteCriticalSection
EnterCriticalSection
GetCurrentProcess
GetCurrentProcessId
GetCurrentThreadId
GetLastError
GetModuleHandleA
GetProcAddress
GetStartupInfoA
GetSystemTimeAsFileTime
GetTickCount
InitializeCriticalSection
LeaveCriticalSection
QueryPerformanceCounter
SetUnhandledExceptionFilter
Sleep
TerminateProcess
TlsGetValue
UnhandledExceptionFilter
VirtualProtect
VirtualQuery
__dllonexit
__getmainargs
__initenv
__lconv_init
__set_app_type
__setusermatherr
_acmdln
_amsg_exit
_cexit
_errno
_fmode
_fullpath
_initterm
_iob
_lock
_onexit
time
localtime
gmtime
_stricmp
_strnicmp
calloc
exit
fclose
feof
ferror
fflush
fgetc
fgets
fopen
fprintf
fputc
fputs
fread
free
fseek
ftell
fwrite
getenv
isalnum
isalpha
isspace
isxdigit
malloc
memcmp
memcpy
memset
perror
printf
putc
puts
qsort
realloc
remove
signal
sprintf
sscanf
strcat
strchr
strcmp
strcpy
strcspn
strerror
strftime
strlen
strncmp
strncpy
strpbrk
strrchr
Tacocat
strspn
strtoul
_unlock
abort
atoi
tolower
toupper
ungetc
vfprintf
_vsnprintf
KERNEL32.dll
msvcrt.dll
